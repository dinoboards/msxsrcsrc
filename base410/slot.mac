; SLOT.MAC

; BIOS slot functions, MSX Turbo-R version (version 4.1)

; Source re-created by Z80DIS 2.2
; Z80DIS was written by Kenneth Gielow, Palo Alto, CA

; Code Copyrighted by ASCII and maybe others
; Source comments by Arjen Zeilemaker

; Sourcecode supplied for STUDY ONLY
; Recreation NOT permitted without authorisation of the copyrightholders


        .Z80
        ASEG
        ORG     018CH

        INCLUDE MSX.INC


RDPRIM  equ     0F380H
WRPRIM  equ     0F385H
CLPRIM  equ     0F38CH
CLPRM1  equ     0F398H
EXBRSA  EQU     0FAF8H
HOKVLD  EQU     0FB20H
EXPTBL  equ     0FCC1H
SLTTBL  equ     0FCC5H
SLTATR  EQU     0FCC9H
EXTBIO	equ	0FFCAH
D.FFFF  equ     0FFFFH


        PUBLIC  RDSLT
        PUBLIC  WRSLT
        PUBLIC  ENASLT
        PUBLIC  CALSLT
        PUBLIC  CALLF
        PUBLIC  CALBAS
	PUBLIC	SUBROM
	PUBLIC	EXTROM
	PUBLIC	CHKSLZ
	PUBLIC	J01BB                   ; patch kanji (double byte) characters PRINT USING
	
	EXTRN	C7FBE		        ; helper routine RDSLT in basicrom
	EXTRN	C7FC4		        ; helper routine WRSLT in basicrom
	EXTRN	J1472           	; MSX2+ patch handle extension ROM
	EXTRN	RDWEXP          	; read word from slot
	EXTRN	PLSPRT                  ; for PRINT USING patch
	EXTRN	FINUSI                  ; for PRINT USING patch
	EXTRN	PRCCHR                  ; for PRINT USING patch


_RST    MACRO   X
        IFIDN   <X>,<SYNCHR>
        RST     08H
        ENDIF
        IFIDN   <X>,<CHRGTR>
        RST     10H
        ENDIF
        IFIDN   <X>,<OUTDO>
        RST     18H
        ENDIF
        IFIDN   <X>,<DCOMPR>
        RST     20H
        ENDIF
        IFIDN   <X>,<GETYPR>
        RST     28H
        ENDIF
        IFIDN   <X>,<CALLF>
        RST     30H
        ENDIF
        ENDM


; START SUBTTL 	SLOT

        SUBTTL	SLOT


        DEFS    001B6H-$,0

;       Subroutine      CALSLT for expanded slot 0 page 0
;       Inputs          ________________________
;       Outputs         ________________________
;       Remark          this is done by this special routine, otherwise calslt crashes
;                       Turbo-R ignores secundairy slot, always secundairy slot 0 (main-bios)
;                       MSX2 and above had code to handle a interslot call to the subrom in a secundairy
;                       of slot 0. Turbo-R has no subrom in slot 0, so code only handles main-bios interslot
;                       calls. A jump is sufficient, because it is called from the main-bios itself.
;                       MSX2 code used 01B6H - 01F4H

J01B6:  POP     AF
        EXX
        EX      AF,AF'
        JP      (IX)


	DEFS	01F5H-$,0


;       Subroutine      RDSLT
;       Inputs          ________________________
;       Outputs         ________________________

RDSLT:
C01F5:  CALL    C0353                   ; calculate masks
        JP      M,J0205                 ; handle expanded slot
        IN      A,(0A8H)
        LD      D,A
        AND     C
        OR      B
        CALL    RDPRIM
        LD      A,E
        RET

;       Subroutine      RDSLT for expanded slot
;       Inputs          ________________________
;       Outputs         ________________________

J0205:  CALL    C028C                   ; prm. slot 0, page 0 ?
        JR      NZ,J021A                ; nop, use old method
        PUSH    HL
        CALL    C0255                   ; basicrom on page 1
        EX      (SP),HL
        CALL    C7FBE                   ; special routine, so bios does not crash
        JR      J0244

        DEFS    0217H-$,0               ; align to 0217H


;       Subroutine      CALSLT
;       Inputs          ________________________
;       Outputs         ________________________
;       Remark          Just a jump at this adres to have same entry point as MSX1
;                       early RS232 ROM version uses this (illegal entry point)

CALSLT:
C0217:  JP      J02D8

;       Subroutine      RDSLT for expanded slot, not slot 0 page 0
;       Inputs          ________________________
;       Outputs         ________________________

J021A:  PUSH    HL
        CALL    C0378                   ; adjust secundairy slotregister
        EX      (SP),HL
        PUSH    BC
        CALL    C01F5                   ; do RDSLT on only the primary slot
        JR      J0279                   ; restore secundairy slotegister

;       Subroutine      WRSLT
;       Inputs          ________________________
;       Outputs         ________________________

WRSLT:
C0225:  PUSH    DE
        CALL    C0353                   ; calculate masks
        JP      M,J0235                 ; expanded slot,
        POP     DE
        IN      A,(0A8H)
        LD      D,A
        AND     C
        OR      B
        JP      WRPRIM

;       Subroutine      WRSLT for expanded slot
;       Inputs          ________________________
;       Outputs         ________________________

J0235:  CALL    C028C                   ; prm. slot 0, page 0 ?
        JP      NZ,J026E                ; nope, use old method
        POP     DE
        PUSH    HL
        CALL    C0255                   ; basicrom on page 1
        EX      (SP),HL
        CALL    C7FC4                   ; special routine, so bios does not crash
J0244:  EX      (SP),HL
        PUSH    AF
        LD      A,L
        AND     3FH
        OUT     (0A8H),A
        LD      A,H
        LD      (D.FFFF),A
        LD      A,L
        OUT     (0A8H),A
        POP     AF
        POP     HL
        RET

;       Subroutine      basicrom on page 1
;       Inputs          ________________________
;       Outputs         ________________________

C0255:  PUSH    AF
        IN      A,(0A8H)
        LD      L,A
        AND     3FH
        OUT     (0A8H),A                ; page 3 = prm. slot 0 (for access to sec. slotreg)
        LD      A,(D.FFFF)
        CPL
        LD      H,A
        AND     0F3H
        LD      (D.FFFF),A              ; page 1 = sec. slot 0
        LD      A,L
        AND     0F3H
        OUT     (0A8H),A                ; restore page 3 prm. slot 0, page 1 = prm. slot 0
        POP     AF
        RET

;       Subroutine      WRSLT for expanded slot, not slot 0 page 0
;       Inputs          ________________________
;       Outputs         ________________________

J026E:  EX      (SP),HL
        PUSH    HL
        CALL    C0378                   ; adjust secundairy slotregister
        POP     DE
        EX      (SP),HL
        PUSH    BC
        CALL    C0225                   ; do WRSLT on only the primary slot
J0279:  POP     BC
        EX      (SP),HL
        PUSH    AF
        LD      A,B
        AND     3FH
        OR      C
        OUT     (0A8H),A
        LD      A,L
        LD      (D.FFFF),A              ; restore secundairy slotregister
        LD      A,B
        OUT     (0A8H),A
        POP     AF
        POP     HL
        RET

;       Subroutine      check if primary slot 0,page 0
;       Inputs          ________________________
;       Outputs         Zx if primary slot 0, page 0

C028C:  INC     D
        DEC     D                       ; primary slot 0 ?
        RET     NZ
        LD      B,A
        LD      A,E
        CP      03H                     ; page 0 ?
        LD      A,B
        RET

;       Subroutine      SUBROM
;       Inputs          ________________________
;       Outputs         ________________________

SUBROM:
J0295:  CALL    C029B                   ; EXTROM
        POP     IX
        RET

;       Subroutine      EXTROM
;       Inputs          ________________________
;       Outputs         ________________________

EXTROM:
C029B:  EXX
        EX      AF,AF'
        PUSH    HL
        PUSH    DE
        PUSH    BC
        PUSH    AF
        LD      A,I
        PUSH    AF                      ; store IFF2 flag
        EXX
        EX      AF,AF'
        PUSH    IY
        LD      IY,(EXBRSA-1)           ; slotid subrom
        CALL    C0217                   ; CALSLT
        POP     IY
        EX      AF,AF'
        EXX
        POP     AF                      ; restore IFF2 flag
        JP      PO,J02B8                ; maskable interrupts where disabled, leave disabled
        EI
J02B8:  POP     AF
        POP     BC
        POP     DE
        POP     HL
        EXX
        EX      AF,AF'
        RET

;       Subroutine      CALBAS
;       Inputs          ________________________
;       Outputs         ________________________

CALBAS:
C02BF:  LD      IY,(EXPTBL+0-1)         ; slotid basicrom
        JP      C0217                   ; CALSLT

;       Subroutine      CALLF
;       Inputs          ________________________
;       Outputs         ________________________

CALLF:
C02C6:  EX      (SP),HL
        PUSH    AF
        PUSH    DE
        LD      A,(HL)
        PUSH    AF
        POP     IY
        INC     HL
        LD      E,(HL)
        INC     HL
        LD      D,(HL)
        INC     HL
        PUSH    DE
        POP     IX
        POP     DE
        POP     AF
        EX      (SP),HL

;       Subroutine      CALSLT
;       Inputs          ________________________
;       Outputs         ________________________

J02D8:  EXX
        EX      AF,AF'
        PUSH    IY
        POP     AF
        PUSH    IX
        POP     HL
        CALL    C0353                   ; calculate masks
        JP      M,J02EF                 ; expanded slot,
        IN      A,(0A8H)
        PUSH    AF
        AND     C
        OR      B
        EXX
        JP      CLPRIM

;       Subroutine      CALSLT for expanded slot
;       Inputs          ________________________
;       Outputs         ________________________

J02EF:  PUSH    AF
        AND     03H                     ; primary slot 0 ?
        JR      NZ,J02FA                ; nope, just the old methode
        LD      A,H
        AND     0C0H
        JP      Z,J01B6                 ; calslt to page 0 in some secundairy slot 0, handle special to avoid crash
J02FA:  POP     AF
        CALL    C0378                   ; adjust secundairy slotregister
        PUSH    AF
        POP     IY
        PUSH    HL
        PUSH    BC
        LD      C,A
        LD      B,0
        LD      A,L
        AND     H
        OR      D
        LD      HL,SLTTBL
        ADD     HL,BC
        LD      (HL),A                  ; update SLTTBL
        PUSH    HL
        EX      AF,AF'
        EXX
        CALL    C0217                   ; do a CALSLT on only the primary slot
        EXX
        EX      AF,AF'
        POP     HL
        POP     BC
        POP     DE
        LD      A,I
        PUSH    AF                      ; store IFF2 flag
        LD      A,B
        AND     3FH
        OR      C
        DI
        OUT     (0A8H),A
        LD      A,E
        LD      (D.FFFF),A              ; restore secundairy slotregister
        LD      A,B
        OUT     (0A8H),A
        LD      (HL),E                  ; restore SLTTBL
        POP     AF                      ; restore IFF2 flag
        JP      PO,J0330                ; maskable interrupts where disabled, leave disabled
        EI
J0330:  EX      AF,AF'
        EXX
        RET

;       Subroutine      ENASLT
;       Inputs          ________________________
;       Outputs         ________________________

ENASLT:
C0333:  CALL    C0353                   ; calculate masks
        JP      M,J0340                 ; expanded slot,
        IN      A,(0A8H)
        AND     C
        OR      B
        OUT     (0A8H),A
        RET

;       Subroutine      ENASLT for expanded slot
;       Inputs          ________________________
;       Outputs         ________________________

J0340:  PUSH    HL
        CALL    C0378                   ; adjust secundairy slotregister
        LD      C,A
        LD      B,0
        LD      A,L
        AND     H
        OR      D
        LD      HL,SLTTBL
        ADD     HL,BC
        LD      (HL),A                  ; update SLTTBL
        POP     HL
        LD      A,C
        JR      C0333                   ; do a ENASLT on only the primary slot

;       Subroutine      calculate masks
;       Inputs          A=slotid, HL=adres
;       Outputs         P set if expanded slot, A=slotid, D=PPPPPPPP, E=page select mask
;                       B=primairy slot or mask, C=page clear mask

C0353:  DI
        PUSH    AF
        LD      A,H
        RLCA
        RLCA
        AND     03H
        LD      E,A                     ; page
        LD      A,0C0H
J035D:  RLCA
        RLCA
        DEC     E
        JP      P,J035D
        LD      E,A                     ; page select mask
        CPL
        LD      C,A                     ; page clear mask
        POP     AF
        PUSH    AF
        AND     03H
        INC     A
        LD      B,A
        LD      A,0ABH
J036E:  ADD     A,55H
        DJNZ    J036E
        LD      D,A                     ; PPPPPPPP
        AND     E
        LD      B,A                     ; prim. slot select
        POP     AF
        AND     A
        RET

;       Subroutine      Adjust secundairy slotregister
;       Inputs          A=slotid, D=, E=
;       Outputs         A=slotid primairy slot

C0378:  PUSH    AF
        LD      A,D
        AND     0C0H
        LD      C,A
        POP     AF
        PUSH    AF
        LD      D,A
        IN      A,(0A8H)
        LD      B,A
        AND     3FH
        OR      C
        OUT     (0A8H),A                ; set page 3 to requested primary slot (to access sec. slotreg)
        LD      A,D
        RRCA
        RRCA
        AND     03H
        LD      D,A
        LD      A,0ABH
J0390:  ADD     A,55H
        DEC     D
        JP      P,J0390
        AND     E
        LD      D,A
        LD      A,E
        CPL
        LD      H,A
        LD      A,(D.FFFF)
        CPL
        LD      L,A
        AND     H
        OR      D
        LD      (D.FFFF),A
        LD      A,B
        OUT     (0A8H),A                ; restore primary slotreg
        POP     AF
        AND     03H
        RET

;       Subroutine      CHKSLZ
;       Inputs          ________________________
;       Outputs         ________________________

CHKSLZ:
J03AC:  DI
        LD      BC,SUBSID               ; Turbo-R has subrom always in slot 3-1
        LD      HL,2
        CALL    RDWEXP                  ; read INIT entry of subrom
        PUSH    HL
        PUSH    BC
        PUSH    DE
        POP     IX
        LD      IY,256*SUBSID
        CALL    NZ,CALSLT               ; if it has INIT, CALSLT to initialize subrom
        POP     BC
        POP     HL
        CALL    RDWEXP                  ; read STATEMENT entry of subrom
        ADD     A,0FFH
        RR      B                       ; if it has, set bit
        CALL    RDWEXP                  ; read DEVICE entry of subrom
        ADD     A,0FFH
        RR      B                       ; if it has, set bit
        SRL     B
        LD      HL,SLTATR+(SUBSID AND 3)*16+(SUBSID AND 12)+0
        LD      (HL),B
        LD      A,0FCH
        OUT     (0FEH),A
        LD      HL,00000H
        LD      DE,08000H
        LD      BC,04000H
        LDIR                            ; copies page 0 of mainrom
        LD      A,0FDH
        OUT     (0FEH),A
        LD      HL,04000H
        LD      DE,08000H
        LD      BC,04000H
        LDIR                            ; copies page 1 of mainrom
        LD      A,01H
        OUT     (0FEH),A
        JP      J1472

        DEFS    0416H-$,0               ; unused space


	ORG	01BBH


;       Subroutine      patch routine for PRINT USING, kanji characters
;       Inputs          ________________________
;       Outputs         ________________________

J01BB:  CALL    PLSPRT                  ; print + if needed
        CALL    C01C9                   ; print kanji (handles 2 byte chars)
        LD      A,B
        OR      A
        JP      Z,FINUSI                ; end of formatstring, exit print using
        JP      PRCCHR                  ; headloop print using

;       Subroutine      print kanji char
;       Inputs          ________________________
;       Outputs         ________________________

C01C9:  _RST    OUTDO
        CP      81H
        RET     C
        CP      0A0H
        JR      C,J01D7                 ; 081H - 09FH, if in kanji mode print 2nd byte
        CP      0E0H
        RET     C
        CP      0FDH
        RET     NC
                                        ; 0E0H - 0FCH, if in kanji mode print 2nd byte
J01D7:  LD      A,(HOKVLD)
        RRCA                            ; EXTBIO valid ?
        RET     NC                      ; nope, quit
        PUSH    DE
        LD      DE,01100H
        XOR     A
        CALL    EXTBIO                  ; KANJI BIOS function 0
        POP     DE
        OR      A
        RET     Z                       ; not in KANJI mode, quit
        LD      A,(HL)
        INC     HL
        _RST    OUTDO
        DEC     B
        RET     P
        INC     B
        RET


; END	SUBTTL 	SLOT

	END
