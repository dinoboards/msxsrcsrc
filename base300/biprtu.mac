; BIPRTU.MAC

; BASIC PRINT USING, MSX 2+ version (version 3.0)

; Source re-created by Z80DIS 2.2
; Z80DIS was written by Kenneth Gielow, Palo Alto, CA

; Code Copyrighted by ASCII and maybe others
; Source comments by Arjen Zeilemaker

; Sourcecode supplied for STUDY ONLY
; Recreation NOT permitted without authorisation of the copyrightholders


        .Z80
        ASEG
        ORG     60B1H


        INCLUDE MSX.INC


CGTABL          EQU     0004H
SYNCHR          EQU     0008H
RDSLT           EQU     000CH
CHRGTR          EQU     0010H
OUTDO           EQU     0018H
CALSLT          EQU     001CH
DCOMPR          EQU     0020H
ENASLT          EQU     0024H
GETYPR          EQU     0028H
INITIO          EQU     003BH
INIFNK          EQU     003EH
WRTVDP          EQU     0047H
WRTVRM          EQU     004DH
RDVRM           EQU     004AH
FILVRM          EQU     0056H
LDIRMV          EQU     0059H
LDIRVM          EQU     005CH
CHGMOD          EQU     005FH
CHGCLR          EQU     0062H
CLRSPR          EQU     0069H
INITXT          EQU     006CH
INIT32          EQU     006FH
SETTXT          EQU     0078H
SETGRP          EQU     007EH
SETMLT          EQU     0081H
CALPAT          EQU     0084H
CALATR          EQU     0087H
GSPSIZ          EQU     008AH
GRPPRT          EQU     008DH
GICINI          EQU     0090H
WRTPSG          EQU     0093H
STRTMS          EQU     0099H
CHSNS           EQU     009CH
CHGET           EQU     009FH
CHPUT           EQU     00A2H
LPTOUT          EQU     00A5H
CNVCHR          EQU     00ABH
PINLIN          EQU     00AEH
INLIN           EQU     00B1H
QINLIN          EQU     00B4H
ISCNTC          EQU     00BAH
CKCNTC          EQU     00BDH
BEEP            EQU     00C0H
CLS             EQU     00C3H
POSIT           EQU     00C6H
FNKSB           EQU     00C9H
ERAFNK          EQU     00CCH
DSPFNK          EQU     00CFH
TOTEXT          EQU     00D2H
GTSTCK          EQU     00D5H
GTTRIG          EQU     00D8H
GTPAD           EQU     00DBH
GTPDL           EQU     00DEH
TAPION          equ     00E1H
TAPIN           equ     00E4H
TAPIOF          equ     00E7H
TAPOON          equ     00EAH
TAPOUT          equ     00EDH
TAPOOF          equ     00F0H
STMOTR          equ     00F3H
LFTQ            EQU     00F6H
PUTQ            EQU     00F9H
LEFTC           EQU     00FFH
TUPC            EQU     0105H
DOWNC           EQU     0108H
TDOWNC          EQU     010BH
SCALXY          EQU     010EH
MAPXYC          EQU     0111H
FETCHC          EQU     0114H
STOREC          EQU     0117H
SETATR          EQU     011AH
READC           EQU     011DH
SETC            EQU     0120H
NSETCX          EQU     0123H
GTASPC          EQU     0126H
PNTINI          EQU     0129H
SCANR           EQU     012CH
SCANL           EQU     012FH
ISFLIO          EQU     014AH
OUTDLP          EQU     014DH
GETVCP          EQU     0150H
GETVC2          EQU     0153H

VARWRK          EQU     0F380H
LOW.            EQU     0F406h
ERRFLG          EQU     0F414H
LPTPOS          EQU     0F415H
PRTFLG          EQU     0F416H
NTMSXP          EQU     0F417H
VLZADR          EQU     0F419H
VLZDAT          EQU     0F41BH
CURLIN          EQU     0F41CH
KBFMIN          EQU     0F41EH
KBUF            EQU     0F41FH
BUFMIN          EQU     0F55DH
BUF             EQU     0F55EH
ENDBUF          EQU     0F660H
TTYPOS          EQU     0F661H
DIMFLG          EQU     0F662H
VALTYP          EQU     0F663H
DORES           EQU     0F664H
DONUM           EQU     0F665H
CONTXT          EQU     0F666H
CONSAV          EQU     0F668H
CONTYP          EQU     0F669H
CONLO           EQU     0F66AH
MEMSIZ          EQU     0F672H
STKTOP          EQU     0F674H
TXTTAB          EQU     0F676H
TEMPPT          EQU     0F678H
TEMPST          EQU     0F67AH
DSCTMP          EQU     0F698H
FRETOP          EQU     0F69BH
TEMP3           EQU     0F69DH
TEMP8           EQU     0F69FH
ENDFOR          EQU     0F6A1H
DATLIN          EQU     0F6A3H
SUBFLG          EQU     0F6A5H
FLGINP          EQU     0F6A6H
TEMP            EQU     0F6A7H
PTRFLG          EQU     0F6A9H
AUTFLG          EQU     0F6AAH
AUTLIN          EQU     0F6ABH
AUTINC          EQU     0F6ADH
SAVTXT          EQU     0F6AFH
SAVSTK          EQU     0F6B1H
ERRLIN          EQU     0F6B3H
DOT             EQU     0F6B5H
ERRTXT          EQU     0F6B7H
ONELIN          EQU     0F6B9H
ONEFLG          EQU     0F6BBH
TEMP2           EQU     0F6BCH
OLDLIN          EQU     0F6BEH
OLDTXT          EQU     0F6C0H
VARTAB          EQU     0F6C2H
ARYTAB          EQU     0F6C4H
STREND          EQU     0F6C6H
DATPTR          EQU     0F6C8H
DEFTBL          EQU     0F6CAH
PRMSTK          EQU     0F6E4H
PRMLEN          EQU     0F6E6H
PARM1           EQU     0F6E8H
PRMPRV          EQU     0F74CH
PRMLN2          EQU     0F74EH
PARM2           EQU     0F750H
PRMFLG          EQU     0F7B4H
ARYTA2          EQU     0F7B5H
NOFUNS          EQU     0F7B7H
TEMP9           EQU     0F7B8H
FUNACT          EQU     0F7BAH
SWPTMP          EQU     0F7BCH
TRCFLG          EQU     0F7C4H
DAC             EQU     0F7F6H
ARG             EQU     0F847H
MAXFIL          EQU     0F85FH
FILTAB          EQU     0F860H
NULBUF          EQU     0F862H
PTRFIL          EQU     0F864H
FILNAM          EQU     0F866H
FILNM2          EQU     0F871H
NLONLY          EQU     0F87CH
SAVEND          EQU     0F87DH
FNKSTR          EQU     0F87FH
CGPNT           EQU     0F91FH
MINDEL          EQU     0F92DH
MAXDEL          EQU     0F92FH
ASPECT          EQU     0F931H
CENCNT          EQU     0F933H
CLINEF          EQU     0F935H
CNPNTS          EQU     0F936H
CPLOTF          EQU     0F938H
CPCNT           EQU     0F939H
CPCNT8          EQU     0F93BH
CRCSUM          EQU     0F93DH
CSTCNT          EQU     0F93FH
CSCLXY          EQU     0F941H
CSAVEA          EQU     0F942H
CSAVEM          EQU     0F944H
CXOFF           EQU     0F945H
CYOFF           EQU     0F947H
LOHMSK          EQU     0F949H
LOHDIR          EQU     0F94AH
LOHADR          EQU     0F94BH
LOHCNT          EQU     0F94DH
SKPCNT          EQU     0F94FH
MOVCNT          EQU     0F951H
PDIREC          EQU     0F953H
LFPROG          EQU     0F954H
RTPROG          EQU     0F955H
MCLTAB          EQU     0F956H
MCLFLG          EQU     0F958H
QUETAB          EQU     0F959H
PRSCNT          EQU     0FB35H
SAVSP           EQU     0FB36H
VOICEN          EQU     0FB38H
SAVVOL          EQU     0FB39H
MCLLEN          EQU     0FB3BH
MCLPTR          EQU     0FB3CH
MUSICF          EQU     0FB3FH
PLYCNT          EQU     0FB40H
BASROM          EQU     0FBB1H
FNKFLG          EQU     0FBCEH
ONGSBF          EQU     0FBD8H
KEYBUF          EQU     0FBF0H
BOTTOM          EQU     0FC48H
HIMEM           EQU     0FC4AH
TRPTBL          EQU     0FC4CH
INTFLG          EQU     0FC9BH
JIFFY           EQU     0FC9EH
INTVAL          EQU     0FCA0H
INTCNT          EQU     0FCA2H
FLBMEM          EQU     0FCAEH
SCRMOD          EQU     0FCAFH
OLDSCR          EQU     0FCB0H
CASPRV          equ     0FCB1H
GXPOS           EQU     0FCB3H
GYPOS           EQU     0FCB5H
GRPACX          EQU     0FCB7H
GRPACY          EQU     0FCB9H
DRWFLG          EQU     0FCBBH
DRWSCL          EQU     0FCBCH
DRWANG          EQU     0FCBDH
RUNBNF          EQU     0FCBEH
SAVENT          EQU     0FCBFH
EXPTBL          EQU     0FCC1H
SLTTBL          EQU     0FCC5H
SLTATR          EQU     0FCC9H
SLTWRK          EQU     0FD09H
PROCNM          EQU     0FD89H
DEVICE          EQU     0FD99H

H.KEYI          EQU     0FD9AH
H.ONGO          EQU     0FDEAH
H.DSKO          EQU     0FDEFH
H.SETS          EQU     0FDF4H
H.NAME          EQU     0FDF9H
H.KILL          EQU     0FDFEH
H.IPL           EQU     0FE03H
H.COPY          EQU     0FE08H
H.CMD           EQU     0FE0DH
H.DSKF          EQU     0FE12H
H.DSKI          EQU     0FE17H
H.ATTR          EQU     0FE1CH
H.LSET          EQU     0FE21H
H.RSET          EQU     0FE26H
H.FIEL          EQU     0FE2BH
H.MKI$          EQU     0FE30H
H.MKS$          EQU     0FE35H
H.MKD$          EQU     0FE3AH
H.CVI           EQU     0FE3FH
H.CVS           EQU     0FE44H
H.CVD           EQU     0FE49H
H.GETP          EQU     0FE4EH
H.SETF          EQU     0FE53H
H.NOFO          EQU     0FE58H
H.NULO          EQU     0FE5DH
H.NTFL          EQU     0FE62H
H.MERG          EQU     0FE67H
H.SAVE          EQU     0FE6CH
H.BINS          EQU     0FE71H
H.BINL          EQU     0FE76H
H.FILE          EQU     0FE7BH
H.DGET          EQU     0FE80H
H.FILO          EQU     0FE85H
H.INDS          EQU     0FE8AH
H.RSLF          EQU     0FE8FH
H.SAVD          EQU     0FE94H
H.LOC           EQU     0FE99H
H.LOF           EQU     0FE9EH
H.EOF           EQU     0FEA3H
H.FPOS          EQU     0FEA8H
H.BAKU          EQU     0FEADH
H.PARD          EQU     0FEB2H
H.NODE          EQU     0FEB7H
H.POSD          EQU     0FEBCH
H.GEND          EQU     0FEC6H
H.RUNC          EQU     0FECBH
H.CLEA          EQU     0FED0H
H.LOPD          EQU     0FED5H
H.STKE          EQU     0FEDAH
H.CRDO          EQU     0FEE9H
H.DSKC          EQU     0FEEEH
H.DOGR          EQU     0FEF3H
H.PRGE          EQU     0FEF8H
H.ERRP          EQU     0FEFDH
H.ERRF          EQU     0FF02H
H.READ          EQU     0FF07H
H.MAIN          EQU     0FF0CH
H.DIRD          EQU     0FF11H
H.FINI          EQU     0FF16H
H.FINE          EQU     0FF1BH
H.CRUN          EQU     0FF20H
H.CRUS          EQU     0FF25H
H.ISRE          EQU     0FF2AH
H.NTFN          EQU     0FF2FH
H.NOTR          EQU     0FF34H
H.SNGF          EQU     0FF39H
H.NEWS          EQU     0FF3EH
H.GONE          EQU     0FF43H
H.CHRG          EQU     0FF48H
H.RETU          EQU     0FF4DH
H.PRTF          EQU     0FF52H
H.COMP          EQU     0FF57H
H.FINP          EQU     0FF5CH
H.TRMN          EQU     0FF61H
H.FRME          EQU     0FF66H
H.NTPL          EQU     0FF6BH
H.EVAL          EQU     0FF70H
H.OKNO          EQU     0FF75H
H.FING          EQU     0FF7AH
H.ISMI          EQU     0FF7FH
H.WIDT          EQU     0FF84H
H.LIST          EQU     0FF89H
H.BUFL          EQU     0FF8EH
H.FRQI          EQU     0FF93H
H.SCNE          EQU     0FF98H
H.FRET          EQU     0FF9DH
H.PTRG          EQU     0FFA2H
H.ERRO          EQU     0FFB1H
H.SCRE          EQU     0FFC0H
H.PLAY          EQU     0FFC5H
EXTBIO          EQU     0FFCAH
D.FFFF          EQU     0FFFFH

        PUBLIC  PRINUS
	PUBLIC	FINUSI
	PUBLIC	PRCCHR
	PUBLIC	PLSPRT

        EXTRN   PUFOUT
        EXTRN   FCERR
        EXTRN   FRMEVL
        EXTRN   CHKSTR
        EXTRN   STROUT
        EXTRN   CRDO
        EXTRN   FINPRT
        EXTRN   FRETM2
        EXTRN   LEFTUS
        EXTRN   STRPRT
        EXTRN   FRMCHK

_RST    MACRO   X
        IFIDN   <X>,<SYNCHR>
        RST     08H
        ENDIF
        IFIDN   <X>,<CHRGTR>
        RST     10H
        ENDIF
        IFIDN   <X>,<OUTDO>
        RST     18H
        ENDIF
        IFIDN   <X>,<DCOMPR>
        RST     20H
        ENDIF
        IFIDN   <X>,<GETYPR>
        RST     28H
        ENDIF
        IFIDN   <X>,<CALLF>
        RST     30H
        ENDIF
        ENDM


; START	SUBTTL	BIPRTU

	SUBTTL	BIPRTU

;       Subroutine      PRINT USING statement
;       Inputs          ________________________
;       Outputs         ________________________

PRINUS:
J60B1:  CALL    FRMCHK                  ; skip character and evaluate expression
        CALL    CHKSTR                  ; check if string
        RST     SYNCHR
        DEFB    ";"                     ; check for ";"
        EX      DE,HL
        LD      HL,(DAC+2)              ; formatstring descriptor
        JR      J60C7

J60BF:  LD      A,(FLGINP)
        OR      A
        JR      Z,J60D2
        POP     DE
        EX      DE,HL
J60C7:  PUSH    HL
        XOR     A
        LD      (FLGINP),A              ; flag
        INC     A
        PUSH    AF
        PUSH    DE
        LD      B,(HL)
        INC     B
        DEC     B                       ; empty format string ?
J60D2:  JP      Z,FCERR                 ; yep, illegal function call
        INC     HL
        LD      A,(HL)
        INC     HL
        LD      H,(HL)
        LD      L,A                     ; start of string
        JR      PRCCHR

; part of string handler

J60DC:  LD      E,B                     ; save length
        PUSH    HL                      ; save pointer
        LD      C,2                     ; at least 2 chars
J60E0:  LD      A,(HL)
        INC     HL
        CP      CHRFLN
        JP      Z,J6210                 ; end marker, print string
        CP      " "
        JR      NZ,J60EE                ; not a space between markers, so no part string!
        INC     C
        DJNZ    J60E0                   ; next char, non left means no endmarker and no part string!
J60EE:  POP     HL                      ; restore pointer
        LD      B,E                     ; restore length
        LD      A,CHRFLN                ; just print the CHRFLN char
J60F2:	CALL	PLSPRT
	_RST	OUTDO
PRCCHR:
J60F6:  XOR     A
        LD      E,A
        LD      D,A
J60F9:  CALL    PLSPRT
        LD      D,A
        LD      A,(HL)
        INC     HL
        CP      "!"
        JP      Z,J620D                 ; "1 char of string" format char, handle
        CP      "#"
        JR      Z,J6144                 ; # numeric format char, handle
        CP      CHRVLN
        JP      Z,J6209                 ; "whole string" format char, handle
        DEC     B                       ; other format chars need at least 1 extra char
        JP      Z,J61F5                 ; not there, end it
        CP      "+"
        LD      A,08H
        JR      Z,J60F9                 ; +, set sign flag and continue
        DEC     HL
        LD      A,(HL)
        INC     HL
        CP      "."
        JR      Z,J615E                 ; may be .# combi, check
        CP      CHRFLN
        JR      Z,J60DC                 ; "part of string" format char, handle
        CP      (HL)
        JR      NZ,J60F2                ; not two equal chars, just print it
        CP      CHRCUR
        JR      Z,J613D                 ; double currency char, handle
        CP      "*"
        JR      NZ,J60F2

; ** format

        INC     HL
        LD      A,B
        CP      02H
        JR      C,J6136                 ; none or only 1 char follows,
        LD      A,(HL)
        CP      CHRCUR
J6136:  LD      A," "
        JR      NZ,J6141

; **cur format

        DEC     B
        INC     E
        DEFB    0FEH                    ; CP xx, trick to skip next instruction
J613D:  XOR     A
        ADD     A,10H
        INC     HL
J6141:  INC     E
        ADD     A,D
        LD      D,A
J6144:  INC     E
        LD      C,00H
        DEC     B
        JR      Z,J6192
        LD      A,(HL)
        INC     HL
        CP      "."
        JR      Z,J6169
        CP      "#"
        JR      Z,J6144
        CP      ","
        JR      NZ,J6173
        LD      A,D
        OR      40H
        LD      D,A
        JR      J6144

J615E:  LD      A,(HL)
        CP      "#"
        LD      A,"."
        JP      NZ,J60F2
        LD      C,01H
        INC     HL
J6169:  INC     C
        DEC     B
        JR      Z,J6192
        LD      A,(HL)
        INC     HL
        CP      "#"
        JR      Z,J6169
J6173:  PUSH    DE
        LD      DE,I6190
        PUSH    DE
        LD      D,H
        LD      E,L
        CP      5EH
        RET     NZ
        CP      (HL)
        RET     NZ
        INC     HL
        CP      (HL)
        RET     NZ
        INC     HL
        CP      (HL)
        RET     NZ
        INC     HL
        LD      A,B
        SUB     04H
        RET     C
        POP     DE
        POP     DE
        LD      B,A
        INC     D
        INC     HL
        DEFB    0CAH                    ; JP Z,xxxx trick to skip next 2 instructions
I6190:  EX      DE,HL
        POP     DE
J6192:  LD      A,D
        DEC     HL
        INC     E
        AND     08H
        JR      NZ,J61AE
        DEC     E
        LD      A,B
        OR      A
        JR      Z,J61AE
        LD      A,(HL)
        SUB     "-"
        JR      Z,J61A9
        CP      0FEH
        JR      NZ,J61AE
        LD      A,08H
J61A9:  ADD     A,04H
        ADD     A,D
        LD      D,A
        DEC     B
J61AE:  POP     HL
        POP     AF
        JR      Z,J61FE
        PUSH    BC
        PUSH    DE
        CALL    FRMEVL                  ; evaluate expression
        POP     DE
        POP     BC
        PUSH    BC
        PUSH    HL
        LD      B,E
        LD      A,B
        ADD     A,C
        CP      19H
        JP      NC,FCERR                ; illegal function call
        LD      A,D
        OR      80H
        CALL    PUFOUT                  ; convert DAC to text, formatted
        CALL    STROUT                  ; message to interpreter output
J61CC:  POP     HL
        DEC     HL
        RST     CHRGTR                  ; end of statement ?
        SCF
        JR      Z,J61DD			; yep,
        LD      (FLGINP),A
        CP      ";"
        JR      Z,J61DC
        RST     SYNCHR
        DEFB    ","                     ; check for ,
        DEFB    006H                    ; LD B,xx, trick to skip next instruction
J61DC:  RST     CHRGTR                  ; get next BASIC character
J61DD:  POP     BC
        EX      DE,HL
        POP     HL
        PUSH    HL
        PUSH    AF
        PUSH    DE
        LD      A,(HL)
        SUB     B
        INC     HL
        LD      D,00H
        LD      E,A
        LD      A,(HL)
        INC     HL
        LD      H,(HL)
        LD      L,A
        ADD     HL,DE
        LD      A,B
        OR      A
        JP      NZ,PRCCHR
        JR      FINUSI

J61F5:  CALL    PLSPRT
        RST     OUTDO                   ; char to interpreter output
FINUSI:
J61F9:  POP     HL
        POP     AF
        JP      NZ,J60BF
J61FE:  CALL    C,CRDO                  ; newline to interpreter output
        EX      (SP),HL
        CALL    FRETM2                  ; free temporary string (descriptor in HL)
        POP     HL
        JP      FINPRT                  ; return interpreter output to screen

; handle char

J6209:  LD      C,00H
        JR      J6211

; handle ! char

J620D:  LD      C,01H
        DEFB    03EH                    ; LD A,xx, trick to skip next instruction
J6210:  POP     AF
J6211:  DEC     B
        CALL    PLSPRT
        POP     HL
        POP     AF
        JR      Z,J61FE
        PUSH    BC
        CALL    FRMEVL                  ; evaluate expression
        CALL    CHKSTR                  ; check if string
        POP     BC
        PUSH    BC
        PUSH    HL
        LD      HL,(DAC+2)
        LD      B,C
        LD      C,00H
        LD      A,B
        PUSH    AF
        OR      A
        CALL    NZ,LEFTUS
        CALL    STRPRT                  ; free string and string to interpreter output
        LD      HL,(DAC+2)
        POP     AF
        OR      A
        JP      Z,J61CC
        SUB     (HL)
        LD      B,A
        LD      A," "
        INC     B
J623F:  DEC     B
        JP      Z,J61CC
        RST     OUTDO                   ; space to interpreter output
        JR      J623F

;       Subroutine      __________________________
;       Inputs          ________________________
;       Outputs         ________________________

PLSPRT:
C6246:  PUSH    AF
        LD      A,D
        OR      A
        LD      A,"+"
        CALL    NZ,OUTDO                ; yep, "+" to interpreter output
        POP     AF
        RET

; END	SUBTTL 	BIPRTU

        END

