; Diskdriver Yamaha FD-051, hardware revision B (not N07540051-N07540350)
; FDC	WD1793

; Source re-created by Z80DIS 2.2
; Z80DIS was written by Kenneth Gielow, Palo Alto, CA

; Code Copyrighted by Yamaha and maybe others
; Source comments by Arjen Zeilemaker

; Sourcecode supplied for STUDY ONLY
; Recreation NOT permitted without aut

SECLEN	EQU	512
MYSIZE	EQU	10
BASENT	EQU	4022H

; offset	function
; 0		not used (motor off timer ?)
; 1		not used (disk change drive 0 timer ?)
; 2		not used (disk change drive 1 timer ?)
; 3		last used physical drive
; 4		current cylinder drive 0
; 5		current cylinder drive 1
; 6		last used drive (phantom)
; 7		current cylinder (format)
; 8		mediadescriptor (format)
; 9		number of physical drives

D.7FF8	EQU	07FF8H
D.7FF9	EQU	D.7FF8+1
D.7FFA	EQU	D.7FF8+2
D.7FFB	EQU	D.7FF8+3

; J1-J2 open (default, motor on drives in-use led)

; J5-J7 closed (default, b7 drives motor off timer)
; J6-J8 closed (default, timer drives motor off)


D.7FFC	EQU	07FFCH			; b0 (w) = side select
					; b0 (r) = side select
D.7FFD	EQU	D.7FFC+1		; b7 (w) = motor on, b6 (w) = ?, b1 (w) = diskdrive b1, b0 (w) = diskdrive b0
					; when b7=1 and then b7=0, it takes ? seconds before motor is turned off
					; b7 (r) = motor on, b6 (r) = inverted b6 (w), b1 (r) = diskdrive b1, b0 (r) = diskdrive b0
D.7FFE	EQU	D.7FFC+2		; (w) = motor off (without delay)
D.7FFF	EQU	D.7FFC+3		; (w) = no function
					; b7 (r) = DRQ, b6 (r) = INTRQ, b5 (r) = disk change status, b4 (r) motor status

D.BFF8	EQU	D.7FF8+4000H
D.BFFA	EQU	D.BFF8+2
D.BFFB	EQU	D.BFF8+3
D.BFFC	EQU	D.7FFC+4000H
D.BFFD	EQU	D.7FFD+4000H
D.BFFF	EQU	D.7FFF+4000H


I$7405:
        .PHASE  0C000H

        DEFB	0EBH			; 00H, x86 JMP +0100H
        DEFB	0FEH
        DEFB	090H			; 02H, x86 NOP
	DEFB	"YD-640  "		; 03H, OEM system name

					;      BPB (BIOS Parameter Block)
        DEFW	512			; 0BH, bytes per sector
        DEFB	2			; 0DH, sectors per cluster
        DEFW	1			; 0EH, reserved sectors (= 1st FAT sector)
        DEFB	2			; 10H, number of FATs
        DEFW	112			; 11H, number of (root) directory entries
        DEFW	1440			; 13H, total number of sectors on disk
        DEFB	0F9H			; 15H, media descriptor byte
        DEFW	3			; 16H, sectors per FAT
        DEFW	9			; 18H, sectors per track
        DEFW	2			; 1AH, number of sides
        DEFW	0			; 1CH, number of hidden sectors

					;      MSX boot loader

C.C01E:	RET	NC
	LD	(C.C058+1),DE
	LD	(D.C0DA),A
	LD	(HL),LOW C.C056
	INC	HL
	LD	(HL),HIGH C.C056
J$C02B:	LD	SP,KBUF+256
	LD	DE,I.C0B5
	LD	C,0FH
	CALL	BDOS
	INC	A
	JR	Z,J$C063
	LD	DE,0100H
	LD	C,1AH
	CALL	BDOS
	LD	HL,1
	LD	(I.C0B5+14),HL
	LD	HL,4000H-0100H
	LD	DE,I.C0B5
	LD	C,27H
	CALL	BDOS
	JP	0100H

C.C056: DEFW    C.C058

C.C058:	CALL	0
	LD	A,C
	AND	0FEH
	CP	02H
	JR	NZ,J$C06A
J$C063:	LD	A,(D.C0DA)
	AND	A
	JP	Z,BASENT
J$C06A: LD	DE,I$C079
        LD	C,09H
        CALL	BDOS
        LD	C,07H
        CALL	BDOS
        JR	J$C02B

I$C079:	DEFB	"Boot error",13,10
        DEFB	"Press any key for retry",13,10
        DEFB	'$'

I.C0B5:	DEFB	0
        DEFB	"MSXDOS  "
        DEFB	"SYS"
        DEFW	0
        DEFW	0
        DEFB	0,0,0,0
        DEFW	0
        DEFW	0
        DEFB	0
        DEFB	0
        DEFW	0
        DEFW	0
        DEFW	0
        DEFB	0
        DEFB	0,0,0,0

D.C0DA:	DEFB	0

        .DEPHASE

S7405	EQU	$-I$7405


; DPBs of supported media

DEFDPB	EQU	$-1

I$74C8:	DEFB	0F9H
        DEFW	512
        DEFB	0FH
        DEFB	04H
        DEFB	01H
        DEFB	02H
        DEFW	1
        DEFB	2
        DEFB	112
        DEFW	14
        DEFW	714
        DEFB	3
        DEFW	7

I$74DA:	DEFB	0F8H
        DEFW	512
        DEFB	0FH
        DEFB	04H
        DEFB	01H
        DEFB	02H
        DEFW	1
        DEFB	2
        DEFB	112
        DEFW	12
        DEFW	355
        DEFB	2
        DEFW	5

I$74EC:	DEFW	720
	DEFB	0F8H
	DEFW	2
	DEFW	9
	DEFW	1

;	  Subroutine DSKIO
;	     Inputs  ________________________
;	     Outputs ________________________

DSKIO:
C.74F5:	EI
	JP	NC,C.75E2

; DSKIO write

	CALL	C$7516			; write sectors

; DSKIO finish

J.74FC:	PUSH	AF
	LD	A,0D0H
	LD	(D.7FF8),A
	EX	(SP),HL
	EX	(SP),HL
	EX	(SP),HL
	EX	(SP),HL
	LD	A,(D.7FFB)
	LD	A,(D.7FF8)
	LD	A,(D.7FFD)
	AND	03H
	LD	(D.7FFD),A		; motor off, in use led off
	POP	AF
	RET

;	  Subroutine write sectors
;	     Inputs  ________________________
;	     Outputs ________________________

C$7516:	CALL	C.76A3			; prepare for DSKIO operation
	RET	C			; error, quit with error
	LD	A,H
	AND	A
	JP	M,J.7545
	CALL	C$7CE3
	CALL	C.7D68
	RET	C
	INC	B
	DEC	B
	RET	Z
	LD	A,H
	AND	A
	JP	M,J.7545
	PUSH	HL
	PUSH	DE
	PUSH	BC
	LD	DE,($SECBUF)
	PUSH	DE
	LD	BC,SECLEN
	CALL	XFER
	POP	HL
	POP	BC
	POP	DE
	CALL	C.7550			; write sector
	POP	HL
	JR	J$7548

J.7545:	CALL	C.7550			; write sector
J$7548:	RET	C
	DEC	B
	RET	Z
	CALL	C.778A			; prepare for next sector
	JR	J.7545

;	  Subroutine write sector
;	     Inputs  ________________________
;	     Outputs ________________________

C.7550:	LD	E,10
J$7552:	CALL	C.77DF			; wait for FDC
	LD	A,0A0H
	BIT	6,D
	JR	Z,J.7563
	OR	02H
	BIT	0,D
	JR	Z,J.7563
	OR	08H
J.7563:	PUSH	HL
	PUSH	DE
	PUSH	BC
	LD	DE,I$7583
	PUSH	DE
	CALL	DISINT
	DI
	LD	(D.7FF8),A
	EX	(SP),HL
	EX	(SP),HL
	LD	BC,D.7FFF
	LD	DE,D.7FFB
J.7579:	LD	A,(BC)
	ADD	A,A
	RET	P
	JR	C,J.7579
	LD	A,(HL)
	LD	(DE),A
	INC	HL
	JR	J.7579
I$7583:	POP	BC
	POP	DE
	POP	HL
	EI
	CALL	ENAINT
	LD	A,(D.7FF8)
	AND	0FCH
	RET	Z
	JP	M,J$75DB
	BIT	6,A
	JR	NZ,J$75BB
	PUSH	AF
	LD	A,(IX+3)		; physical drive
	OR	0C4H
	LD	(D.7FFD),A		; motor on, in use led on, select diskdrive
	CALL	C.77CA
	POP	AF
	DEC	E
	JR	NZ,J$7552
	SCF
	LD	E,A
	BIT	5,E
	LD	A,10
	RET	NZ
	BIT	4,E
	LD	A,8
	RET	NZ
	BIT	3,E
	LD	A,4
	RET	NZ
	LD	A,12
	RET

J$75BB:	LD	A,0D0H
	LD	(D.7FF8),A
	EX	(SP),HL
	EX	(SP),HL
	LD	A,80H
	LD	(D.7FF8),A
	EX	(SP),HL
	EX	(SP),HL
	LD	HL,D.7FFF
	LD	DE,0
J$75CF:	LD	A,(HL)
	ADD	A,A
	JP	P,J.75DF
	JR	NC,J.75DF
	DEC	DE
	LD	A,E
	OR	D
	JR	NZ,J$75CF
J$75DB:	LD	A,2
	SCF
	RET

J.75DF:	XOR	A
	SCF
	RET

;	  Subroutine DSKIO read
;	     Inputs  ________________________
;	     Outputs ________________________

C.75E2:	CALL	C$75E8			; read sectors
	JP	J.74FC			; DSKIO finish

;	  Subroutine read sectors
;	     Inputs  ________________________
;	     Outputs ________________________

C$75E8:	CALL	C.76A3			; prepare for DSKIO operation
	RET	C			; error, quit with error
	LD	A,H
	AND	A
	JP	M,J.761C
	CALL	C$7CCF
	CALL	C.7D68
	RET	C
	INC	B
	DEC	B
	RET	Z
	LD	A,H
	AND	A
	JP	M,J.761C
	PUSH	HL
	LD	HL,($SECBUF)
	CALL	C.7627			; read sector
	POP	HL
	RET	C
	PUSH	HL
	PUSH	DE
	PUSH	BC
	EX	DE,HL
	LD	HL,($SECBUF)
	LD	BC,SECLEN
	CALL	XFER
	POP	BC
	POP	DE
	POP	HL
	AND	A
	JR	J$7620
J.761C:	CALL	C.7627			; read sector
	RET	C
J$7620:	DEC	B
	RET	Z
	CALL	C.778A			; prepare for next sector
	JR	J.761C

;	  Subroutine read sector
;	     Inputs  ________________________
;	     Outputs ________________________

C.7627:	LD	E,10
J$7629:	CALL	C.77DF			; wait for FDC
	LD	A,80H
	BIT	6,D
	JR	Z,J.763A
	OR	02H
	BIT	0,D
	JR	Z,J.763A
	OR	08H
J.763A:	PUSH	HL
	PUSH	DE
	PUSH	BC
	LD	BC,D.7FFF
	LD	DE,I$7670
	PUSH	DE
	CALL	DISINT
	DI
	LD	(D.7FF8),A
	EX	(SP),HL
	EX	(SP),HL
	LD	DE,0
J.7650:	LD	A,(BC)
	ADD	A,A
	JR	NC,J$7661
	RET	P
	DEC	E
	JR	NZ,J.7650
	DEC	D
	JR	NZ,J.7650
	POP	BC
	POP	BC
	POP	DE
	POP	HL
	JR	J.769F
J$7661:	LD	DE,D.7FFB
	JR	J$766B
J.7666:	LD	A,(BC)
	ADD	A,A
	RET	P
	JR	C,J.7666
J$766B:	LD	A,(DE)
	LD	(HL),A
	INC	HL
	JR	J.7666
I$7670:	POP	BC
	POP	DE
	POP	HL
	EI
	CALL	ENAINT
	LD	A,(D.7FF8)
	AND	9CH
	RET	Z
	JP	M,J.769F
	PUSH	AF
	LD	A,(IX+3)		; physical drive
	OR	0C4H
	LD	(D.7FFD),A		; motor on, in use led on, select diskdrive
	CALL	C.77CA
	POP	AF
	DEC	E
	JR	NZ,J$7629
	SCF
	LD	E,A
	BIT	4,E
	LD	A,8
	RET	NZ
	BIT	3,E
	LD	A,4
	RET	NZ
	LD	A,12
	RET

J.769F:	LD	A,2
	SCF
	RET

;	  Subroutine prepare for DSKIO operation
;	     Inputs  ________________________
;	     Outputs ________________________

C.76A3:	PUSH	AF
	PUSH	BC
	PUSH	HL
	CALL	GETWRK
	POP	HL
	POP	BC
	POP	AF
	CP	1+1
	JR	C,J$76B4
J$76B0:	LD	A,12
	SCF
	RET

J$76B4:	PUSH	AF
	LD	A,C
	CP	0F8H
	JR	NC,J$76BD
	POP	AF
	JR	J$76B0
J$76BD:	EX	(SP),HL
	PUSH	HL
	PUSH	BC
	CALL	C.77DF			; wait for FDC
	BIT	1,C
	LD	C,E
	LD	B,D
	LD	DE,8
	JR	NZ,J$76CD
	INC	DE
J$76CD:	CALL	DIV16
	LD	A,L
	INC	A
	LD	(D.7FFA),A
	LD	L,C
	POP	BC
	POP	AF
	LD	H,A
	LD	A,(IX+9)
	DEC	A			; 2 physical diskdrives ?
	JR	Z,J$76E0		; nope, use diskdrive 0
	LD	A,H
J$76E0:	OR	0C4H
	CALL	DISINT
	DI
	PUSH	BC
	LD	B,A
	LD	A,(D.7FFF)
	BIT	4,A			; motor already on ?
	LD	A,B
	POP	BC
	LD	(D.7FFD),A		; motor on, in use led on, select diskdrive
	EI
	CALL	ENAINT
	JR	Z,J$7701		; motor already on, skip motor spinup wait time
	PUSH	BC
	LD	B,4
J$76FB:	CALL	C$77F9
	DJNZ	J$76FB
	POP	BC
J$7701:	LD	A,C
	RRCA
	RRCA
	AND	0C0H
	BIT	0,C
	JR	Z,J.7710
	SRL	L
	JR	NC,J.7710
	OR	01H
J.7710:	PUSH	AF
	AND	0FH
	LD	(D.7FFC),A		; select side
	POP	AF
	LD	D,A
	LD	C,L
	LD	A,(IX+9)
	DEC	A			; 2 physical diskdrives ?
	JR	Z,J$7744		; nope,
	LD	A,(IX+3)
	CP	H			; same physical diskdrive ?
	JR	Z,J.7781		; yep,
	XOR	01H
	LD	(IX+3),A		; update physical drive
	LD	A,(D.7FF9)
	JR	Z,J$7737		; drive 0,
	LD	(IX+4),A
	LD	A,(IX+5)
	JR	J$773D
J$7737:	LD	(IX+5),A
	LD	A,(IX+4)
J$773D:	LD	(D.7FF9),A
	EX	(SP),HL
	EX	(SP),HL
	JR	J$7784

J$7744:	LD	A,H
	CP	(IX+6)			; same phantom drive as previous operation ?
	LD	(IX+6),A		; update phantom drive
	JR	Z,J.7781		; yep, skip prompt
	PUSH	IX
	PUSH	DE
	PUSH	BC
	LD	A,(D.7FFD)
	PUSH	AF
	AND	7FH
	LD	(D.7FFD),A		; motor off
	CALL	PROMPT
	LD	A,83H
	LD	(D.7FFD),A		; motor on, in use led off, unselect diskdrive
	POP	AF
	LD	(D.7FFD),A		; motor on, in use led on, select diskdrive
	PUSH	HL
	LD	HL,0
J$776A:	INC	HL
	EX	(SP),IX
	EX	(SP),IX
	EX	(SP),IX
	EX	(SP),IX
	JR	Z,J$777C		; ??
	LD	A,(D.7FF8)
	BIT	7,A			; FDD not ready ?
	JR	NZ,J$776A		; yep, wait
J$777C:	POP	HL
	POP	BC
	POP	DE
	POP	IX
J.7781:	LD	A,(D.7FF9)
J$7784:	CP	C
	CALL	NZ,C$77CD
	POP	HL
	RET

;	  Subroutine prepare for next sector
;	     Inputs  ________________________
;	     Outputs ________________________

C.778A:	CALL	C.77DF			; wait for FDC
	INC	H
	INC	H
	LD	A,(D.7FFA)
	INC	A
	LD	(D.7FFA),A
	BIT	7,D
	JR	NZ,J$779D
	CP	9+1
	RET	C
J$779D:	CP	8+1
	RET	C
	LD	A,1
	LD	(D.7FFA),A
	BIT	6,D
	JR	Z,C.77B4
	BIT	0,D
	JR	NZ,C.77B4
	SET	0,D
	LD	A,D
	LD	(D.7FFC),A		; select side 1
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.77B4:	RES	0,D
	LD	A,D
	LD	(D.7FFC),A		; select side 0
	INC	C
	CALL	C.77DF			; wait for FDC
	LD	A,50H
	LD	(D.7FF8),A
	EX	(SP),HL
	EX	(SP),HL
	CALL	C.77DF			; wait for FDC
	JR	J.77ED

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.77CA:	CALL	C.77E6			; seek to cylinder 0

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$77CD:	LD	A,C
	LD	(D.7FFB),A
	EX	(SP),HL
	EX	(SP),HL
	LD	A,10H
J$77D5:	LD	(D.7FF8),A
	EX	(SP),HL
	EX	(SP),HL
	CALL	C.77DF			; wait for FDC
	JR	J.77ED			; head settle time

;	  Subroutine wait for FDC
;	     Inputs  ________________________
;	     Outputs ________________________

C.77DF:	LD	A,(D.7FF8)
	RRA
	JR	C,C.77DF
	RET

;	  Subroutine seek to cylinder 0
;	     Inputs  ________________________
;	     Outputs ________________________

C.77E6:	CALL	C.77DF			; wait for FDC
	LD	A,00H
	JR	J$77D5

;	  Subroutine wait head settle time
;	     Inputs  ________________________
;	     Outputs ________________________

J.77ED:	PUSH	HL
	LD	HL,2580
	JR	J.77FD

;	  Subroutine wait ? time
;	     Inputs  ________________________
;	     Outputs ________________________

C.77F3:	PUSH	HL
	LD	HL,200
	JR	J.77FD

;	  Subroutine wait 1/4 motor spinup time
;	     Inputs  ________________________
;	     Outputs ________________________

C$77F9:	PUSH	HL
	LD	HL,32583
J.77FD:	DEC	HL
	LD	A,H
	OR	L
	JR	NZ,J.77FD
	POP	HL
	XOR	A
	RET

;	  Subroutine INIHRD
;	     Inputs  ________________________
;	     Outputs ________________________

INIHRD:
?.7805:	LD	A,0D0H
	LD	(D.7FF8),A
	EX	(SP),HL
	EX	(SP),HL
	LD	A,00H			; motor off, in use led off, select diskdrive 0
	CALL	C.781C
	LD	A,01H			; motor off, in use led off, select diskdrive 1
	CALL	C.781C
	LD	A,03H
	LD	(D.7FFD),A		; motor off, in use led off, unselect diskdrive
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.781C:	LD	(D.7FFD),A		; select diskdrive
	CALL	C.77DF			; wait for FDC
	LD	A,00H
	LD	(D.7FF8),A		; Restore to track 0 command
	EX	(SP),HL
	EX	(SP),HL
	LD	HL,0
J$782C:	LD	A,(D.7FF8)
	RRA
	RET	NC
	DEC	HL
	LD	A,L
	OR	H
	JR	NZ,J$782C
	JR	J.77ED

;	  Subroutine DRIVES
;	     Inputs  ________________________
;	     Outputs ________________________

DRIVES:
?.7838:	PUSH	BC
	PUSH	AF
	CALL	GETWRK
	LD	A,1
	LD	(D.7FFD),A		; motor off, in use led off, select diskdrive 1
	CALL	C.77DF			; wait for FDC
	LD	A,00H
	LD	(D.7FF8),A
	EX	(SP),HL
	EX	(SP),HL
	LD	HL,0			; timer = 65536
J$784F:	LD	A,(D.7FF8)
	RRA				; FDC still busy ?
	JR	NC,J$785C		; nope, drive 1 is there
	DEC	HL
	LD	A,L
	OR	H			; timer done ?
	JR	NZ,J$784F		; nope, wait
	INC	L			; 1 physical drive
	DEFB	0CAH
J$785C:	LD	L,2
	LD	(IX+9),L		; number of physical diskdrives
	LD	A,03H
	LD	(D.7FFD),A		; motor off, in use led off, unselect diskdrive
	POP	AF
	JR	Z,J$786B		; CTRL pressed, return physical drives
	LD	L,2			; return 2 (phantom) drives
J$786B:	POP	BC
	RET

;	  Subroutine INIENV
;	     Inputs  ________________________
;	     Outputs ________________________

INIENV:
?.786D:	CALL	GETWRK
	XOR	A
	LD	B,MYSIZE-1
J$7873:	LD	(HL),A
	INC	HL
	DJNZ	J$7873
	LD	HL,I$787D
	JP	SETINT			; install timer interrupt handler (not needed in this case)

I$787D:	PUSH	AF			; store vdp status register
	POP	AF			; restore vdp status register
	JP	PRVINT			; proceed to next timer interrupt handler

;	  Subroutine MTOFF
;	     Inputs  ________________________
;	     Outputs ________________________

MTOFF:
?.7882:	LD	(D.7FFE),A
	RET

;	  Subroutine DSKCHG
;	     Inputs  ________________________
;	     Outputs ________________________

DSKCHG:
	EI
	PUSH	HL
	PUSH	BC
	PUSH	AF
	CALL	GETWRK
	POP	AF
	POP	BC
	LD	HL,D.7FFD
	LD	E,A			; store drive
	LD	D,A			; store drive
	LD	B,(IX+9)
	DEC	B			; 2 physical diskdrives ?
	JR	NZ,J$78AD		; yep,
	CP	(IX+6)			; same phantom drive as last operation ?
	JR	Z,J$78B4		; yep, use physical drive 0

; can not use disk change hardware

J$789F:	DI
	LD	A,(HL)
	XOR	01H
	LD	(HL),A			; select other drive
	XOR	01H
	LD	(HL),A			; select drive
	XOR	01H
	LD	(HL),A			; select other drive
	EI
	JR	J$78CF			; determine disk change on mediadescriptor

J$78AD:	CP	(IX+3)			; same physical diskdrive ?
	JR	Z,J$78B5		; yep, use disk change hardware
	JR	J$789F			; can not use disk change hardware

J$78B4:	LD	E,B			; physical drive 0
J$78B5:	DI
	LD	A,(HL)
	AND	0FCH
	OR	E
	LD	(HL),A			; select physical drive
	LD	B,1			; DISK UNCHANGED
	LD	A,(D.7FFF)
	BIT	5,A			; disk changed ?
	EI
	POP	IY
	RET	NZ			; nope, quit with DISK UNCHANGED
	PUSH	IY
	DI
	LD	E,3
	LD	A,(HL)
	OR	E
	LD	(HL),A			; unselect drive
	EI

J$78CF:	LD	B,1			; 1 sector
	LD	A,D			; drive
	POP	HL
	PUSH	BC
	PUSH	HL
	LD	DE,1
	LD	HL,($SECBUF)
	CALL	C.75E2			; read sector (1st FAT sector)
	JR	C,J.7903		; error, quit with other error
	LD	HL,($SECBUF)
	LD	B,(HL)
	PUSH	AF
	LD	A,B
	CP	0F8H
	JR	Z,J.78F0
	CP	0F9H
	JR	Z,J.78F0
	JR	J$7902			; unsupported mediabyte, quit with other error

J.78F0:	POP	AF
	POP	HL
	PUSH	BC
	CALL	GETDPB
	JR	C,J.7903		; error, quit
	POP	AF
	POP	BC
	CP	C
	SCF
	CCF				; clear Cx
	LD	B,0FFH
	RET	NZ			; other mediabyte, return DISK CHANGED
	INC	B			; same mediabyte, return DISK CHANGE UNKNOWN
	RET

J$7902:	POP	AF
J.7903:	POP	DE
	POP	DE
	LD	A,12
	SCF
	RET

;	  Subroutine GETDPB
;	     Inputs  ________________________
;	     Outputs ________________________

GETDPB:
	EI
	EX	DE,HL
	INC	DE
	LD	A,B
	LD	HL,I$74C8		; assume double sided 3.5" DPB
	CP	0F9H			; double sided 3.5" ?
	JR	Z,J$791D		; yep, update DPB
	CP	0F8H			; single sided 3.5" ?
	JR	Z,J$791A		; yep, update DPB with single sided 3.5"
	SCF
	RET				; quit with error

J$791A:	LD	HL,I$74DA
J$791D:	LD	BC,18
	LDIR
	RET

;	  Subroutine CHOICE
;	     Inputs  ________________________
;	     Outputs ________________________

CHOICE:
?.7923:	LD	HL,I$7927
	RET

I$7927:	DEFB	13,10
	DEFB	"1 - Double Sided",13,10
	DEFB	"2 - Single Sided",13,10
	DEFB	13,10
	DEFB	0

;	  Subroutine DSKFMT
;	     Inputs  ________________________
;	     Outputs ________________________

DSKFMT:
	LD	E,A
	PUSH	DE
	LD	A,D
	LD	B,00H
	LD	C,0F8H
	BIT	0,E
	JR	Z,J$795C
	INC	C
J$795C:	LD	DE,0			; sector 0
	CALL	C.76A3			; prepare for DSKIO operation
	LD	A,16
	JP	C,J.79DF		; error, quit with other error
	CALL	GETWRK
	POP	DE
	PUSH	DE
	LD	A,0F8H
	BIT	0,E
	JR	Z,J$7973
J$7972:	INC	A
J$7973:	LD	(IX+8),A		; store mediadescriptor
	CALL	C.77E6			; seek to cylinder 0
	LD	A,(D.7FF8)
	AND	04H			; FDD at cylinder 0 ?
	JP	NZ,J$7986		; yep, continue
	LD	A,6
	SCF
	JR	J.79DF			; quit with seek error

J$7986:	CALL	GETWRK
	XOR	A
	LD	(IX+7),A

J$798D:	LD	E,00H
	LD	A,E
	LD	(D.7FFC),A		; select side 0
J$7993:	CALL	C.7B35			; format track
	AND	0E5H
	JR	Z,J$799F
J.799A:	LD	A,10
	SCF
	JR	J.79DF

J$799F:	POP	DE
	PUSH	DE
	BIT	0,E
	JR	Z,J$79B5
	CALL	C.77F3			; wait ? time
	LD	E,1
	LD	A,E
	LD	(D.7FFC),A		; select side 1
	CALL	C.7B35			; format track
	AND	0E5H
	JR	NZ,J.799A
J$79B5:	CALL	C.77F3			; wait ? time
	LD	A,(IX+7)
	INC	A
	CP	80
	JR	Z,J$79D2
	LD	(IX+7),A
	CALL	C.77B4
	LD	A,(D.7FF8)
	AND	91H
	JR	Z,J$798D
	LD	A,6
	SCF
	JR	J.79DF
J$79D2:	CALL	C.77E6			; seek to cylinder 0
	LD	A,(D.7FF8)
	AND	04H			; FDD at cylinder 0 ?
	JR	NZ,J$79E2		; yep, continue
	LD	A,6
	SCF
J.79DF:	JP	J$7B21			; finish with seek error

J$79E2:	LD	HL,I$7405
	LD	DE,($SECBUF)
	LD	BC,S7405
	LDIR
	POP	BC
	PUSH	BC
	BIT	0,C
	JR	NZ,J$7A0A
	PUSH	DE
	LD	HL,I$74EC
	LD	IY,($SECBUF)
	LD	BC,19
	ADD	IY,BC
	PUSH	IY
	POP	DE
	LD	BC,9
	LDIR
	POP	DE
J$7A0A:	LD	BC,SECLEN-S7405
J$7A0D:	XOR	A
	LD	(DE),A
	INC	DE
	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,J$7A0D
	POP	DE
	PUSH	DE
	LD	A,D
	LD	HL,($SECBUF)
	LD	B,1			; 1 sector
	LD	C,(IX+8)		; mediadescriptor
	LD	DE,0			; sector 0
	SCF				; write operation
	CALL	DSKIO
	JR	C,J.79DF		; error,
	POP	DE
	LD	A,D
	LD	BC,4
	BIT	0,E
	JR	Z,J$7A35
	LD	BC,6
J$7A35:	LD	DE,1
	PUSH	AF
	PUSH	DE
	PUSH	BC
J$7A3B:	LD	DE,($SECBUF)
	LD	A,(IX+8)
	LD	(DE),A
	INC	DE
	LD	A,0FFH
	LD	(DE),A
	INC	DE
	LD	(DE),A
	INC	DE
	XOR	A
	LD	B,256-3
J$7A4D:	LD	(DE),A
	INC	DE
	DJNZ	J$7A4D			; construct 1st FAT sector
	POP	BC
	POP	DE
	POP	AF
	PUSH	AF
	PUSH	DE
	PUSH	BC
	LD	HL,($SECBUF)
	LD	B,1			; 1 sector
	LD	C,(IX+8)		; media descriptor
	SCF				; write operation
	CALL	DSKIO
	JP	C,J.7B1F		; error, finish with error
	POP	BC
	POP	DE
	POP	AF
	INC	DE
	DEC	BC
	PUSH	AF
	PUSH	DE
	PUSH	BC
	LD	B,3
	LD	DE,($SECBUF)
	XOR	A
J$7A75:	LD	(DE),A
	INC	DE
	DJNZ	J$7A75			; construct next FAT sector
	POP	BC
	POP	DE
	POP	AF
	PUSH	AF
	PUSH	DE
	PUSH	BC
	LD	HL,($SECBUF)
	LD	B,1			; 1 sector
	LD	C,(IX+8)		; mediadescriptor
	SCF				; write operation
	CALL	DSKIO
	JP	C,J.7B1F		; error, finish with error
	POP	BC
	POP	DE
	POP	AF
	INC	DE
	DEC	BC
	PUSH	AF
	PUSH	DE
	PUSH	BC
	BIT	0,(IX+8)
	JR	Z,J$7AB1
	LD	HL,($SECBUF)
	LD	BC,1*256+0F9H		; 1 sector, double sided mediadescriptor
	SCF				; write operation
	CALL	DSKIO
	JP	C,J.7B1F		; error, finish with error
	POP	BC
	POP	DE
	POP	AF
	INC	DE
	DEC	BC
	PUSH	AF
	PUSH	DE
	PUSH	BC
J$7AB1:	LD	A,B
	OR	C
	JP	NZ,J$7A3B
	POP	BC
	POP	DE
	POP	AF
	LD	DE,1+2*2
	BIT	0,(IX+8)
	JR	Z,J$7AC5
	LD	DE,1+2*3
J$7AC5:	LD	B,7			; 7 directory sectors (112*32 / 512)
J$7AC7:	PUSH	AF
	PUSH	DE
	PUSH	BC
	LD	HL,($SECBUF)
	LD	B,1			; 1 sector
	LD	C,(IX+8)		; media descriptor
	SCF				; write operation
	CALL	DSKIO
	JR	C,J.7B1F		; error, finish with error
	POP	BC
	POP	DE
	POP	AF
	INC	DE
	DJNZ	J$7AC7			; next directory sector
	PUSH	AF
	CALL	C.77E6			; seek to cylinder 0 (but why ?)
	POP	AF
	LD	BC,1+2*2+7
	BIT	0,(IX+8)
	JR	Z,J$7AEF
	LD	BC,1+2*3+7
J$7AEF:	LD	DE,0
J$7AF2:	PUSH	AF
	PUSH	DE
	PUSH	BC
	LD	HL,($SECBUF)
	LD	B,1			; 1 sector
	LD	C,(IX+8)		; media descriptor
	SCF
	CCF				; read operation
	CALL	DSKIO
	JR	C,J$7B2A		; error
	POP	BC
	POP	DE
	INC	DE
	DEC	BC
	LD	A,B
	OR	C
	JR	Z,J$7B0F		; continue
	POP	AF
	JR	J$7AF2			; next sector

J$7B0F:	CALL	C.77E6			; seek to cylinder 0
	POP	AF
	LD	A,(D.7FF8)
	AND	04H			; FDD at cylinder 0 ?
	JR	NZ,J.7B32		; yep, finish without error
	LD	A,6
	SCF
	JR	J.7B32			; finish with seek error

J.7B1F:	POP	DE
	POP	DE
J$7B21:	POP	DE
	PUSH	AF
	CALL	C.77E6			; seek to cylinder 0
	POP	AF
	JP	J.7B32			; finish

J$7B2A:	POP	DE
	POP	DE
	POP	DE
	CALL	C.77E6			; seek to cylinder 0
	LD	A,8			; record not found error, BUG: Cx is not set
J.7B32:	JP	J.74FC			; DSKIO finish

;	  Subroutine format track
;	     Inputs  ________________________
;	     Outputs ________________________

C.7B35:	DI
	LD	A,(D.7FFD)
	OR	80H
	LD	(D.7FFD),A		; motor on
	EI
	CALL	C.7CC5			; wait for FDC
	LD	A,0F4H
	LD	D,1
	LD	HL,I$7CA1
	PUSH	HL
	CALL	DISINT
	DI
	LD	(D.7FF8),A
	EX	(SP),HL
	EX	(SP),HL
	LD	C,4EH
	LD	B,80
J.7B57:	LD	A,(D.7FFF)
	ADD	A,A
	RET	P
	JR	C,J.7B57
	LD	A,C
	LD	(D.7FFB),A
	DJNZ	J.7B57
	LD	C,00H
	LD	B,12
J.7B68:	LD	A,(D.7FFF)
	ADD	A,A
	RET	P
	JR	C,J.7B68
	LD	A,C
	LD	(D.7FFB),A
	DJNZ	J.7B68
	LD	C,0F6H
	LD	B,3
J.7B79:	LD	A,(D.7FFF)
	ADD	A,A
	RET	P
	JR	C,J.7B79
	LD	A,C
	LD	(D.7FFB),A
	DJNZ	J.7B79
	LD	C,0FCH
J$7B88:	LD	A,(D.7FFF)
	ADD	A,A
	RET	P
	JR	C,J$7B88
	LD	A,C
	LD	(D.7FFB),A
	LD	C,4EH
	LD	B,26
J.7B97:	LD	A,(D.7FFF)
	ADD	A,A
	RET	P
	JR	C,J.7B97
	LD	A,C
	LD	(D.7FFB),A
	DJNZ	J.7B97
J$7BA4:	LD	C,00H
	LD	B,12
J.7BA8:	LD	A,(D.7FFF)
	ADD	A,A
	RET	P
	JR	C,J.7BA8
	LD	A,C
	LD	(D.7FFB),A
	DJNZ	J.7BA8
	LD	C,0F5H
	LD	B,3
J.7BB9:	LD	A,(D.7FFF)
	ADD	A,A
	RET	P
	JR	C,J.7BB9
	LD	A,C
	LD	(D.7FFB),A
	DJNZ	J.7BB9
	LD	C,0FEH
J$7BC8:	LD	A,(D.7FFF)
	ADD	A,A
	RET	P
	JR	C,J$7BC8
	LD	A,C
	LD	(D.7FFB),A
	LD	C,(IX+7)
J$7BD6:	LD	A,(D.7FFF)
	ADD	A,A
	RET	P
	JR	C,J$7BD6
	LD	A,C
	LD	(D.7FFB),A
J$7BE1:	LD	A,(D.7FFF)
	ADD	A,A
	RET	P
	JR	C,J$7BE1
	LD	A,E
	LD	(D.7FFB),A
J$7BEC:	LD	A,(D.7FFF)
	ADD	A,A
	RET	P
	JR	C,J$7BEC
	LD	A,D
	LD	(D.7FFB),A
	LD	C,2
J$7BF9:	LD	A,(D.7FFF)
	ADD	A,A
	RET	P
	JR	C,J$7BF9
	LD	A,C
	LD	(D.7FFB),A
	LD	C,0F7H
J$7C06:	LD	A,(D.7FFF)
	ADD	A,A
	RET	P
	JR	C,J$7C06
	LD	A,C
	LD	(D.7FFB),A
	LD	C,4EH
	LD	B,24
J.7C15:	LD	A,(D.7FFF)
	ADD	A,A
	RET	P
	JR	C,J.7C15
	LD	A,C
	LD	(D.7FFB),A
	DJNZ	J.7C15
	LD	C,00H
	LD	B,12
J.7C26:	LD	A,(D.7FFF)
	ADD	A,A
	RET	P
	JR	C,J.7C26
	LD	A,C
	LD	(D.7FFB),A
	DJNZ	J.7C26
	LD	C,0F5H
	LD	B,3
J.7C37:	LD	A,(D.7FFF)
	ADD	A,A
	RET	P
	JR	C,J.7C37
	LD	A,C
	LD	(D.7FFB),A
	DJNZ	J.7C37
	LD	C,0FBH
J$7C46:	LD	A,(D.7FFF)
	ADD	A,A
	RET	P
	JR	C,J$7C46
	LD	A,C
	LD	(D.7FFB),A
	LD	C,0E5H
	LD	H,2
J.7C55:	LD	A,(D.7FFF)
	ADD	A,A
	RET	P
	JR	C,J.7C55
	LD	A,C
	LD	(D.7FFB),A
	DJNZ	J.7C55
	DEC	H
	JR	NZ,J.7C55
	LD	C,0F7H
J$7C67:	LD	A,(D.7FFF)
	ADD	A,A
	RET	P
	JR	C,J$7C67
	LD	A,C
	LD	(D.7FFB),A
	LD	C,4EH
	LD	B,54
J.7C76:	LD	A,(D.7FFF)
	ADD	A,A
	RET	P
	JR	C,J.7C76
	LD	A,C
	LD	(D.7FFB),A
	DJNZ	J.7C76
	INC	D
	LD	A,D
	CP	9+1
	JP	NZ,J$7BA4
	LD	C,4EH
	LD	H,3
J$7C8E:	LD	B,0
J.7C90:	LD	A,(D.7FFF)
	ADD	A,A
	RET	P
	JR	C,J.7C90
	LD	A,C
	LD	(D.7FFB),A
	DJNZ	J.7C90
	DEC	H
	JR	NZ,J$7C8E
	POP	HL
I$7CA1:	EI
	CALL	ENAINT
	LD	A,(D.7FF8)
	PUSH	AF
	LD	A,(D.7FFD)
	AND	03H
	LD	(D.7FFD),A		; motor off
	POP	AF
	RET

;	  Subroutine wait for FDD ready
;	     Inputs  ________________________
;	     Outputs ________________________
;            Remark  unused

?.7CB3:	LD	HL,0
J$7CB6:	LD	A,(D.7FF8)
	AND	80H
	RET	Z
	EX	(SP),HL
	EX	(SP),HL
	DEC	HL
	LD	A,H
	OR	L
	JR	NZ,J$7CB6
	DEC	A
	RET

;	  Subroutine wait for FDC
;	     Inputs  ________________________
;	     Outputs ________________________

C.7CC5:	LD	A,(D.7FF8)
	AND	01H
	JR	NZ,C.7CC5
	RET

OEMSTA:
?.7CCD:	SCF
	RET				; quit with statement not recognized

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$7CCF:	PUSH	HL
	PUSH	DE
	PUSH	BC
	LD	HL,I$7D6E
	LD	DE,($SECBUF)
	LD	BC,S7D6E
	LDIR
	LD	HL,I$7D16
	JR	J.7CF5

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$7CE3:	PUSH	HL
	PUSH	DE
	PUSH	BC
	LD	HL,I$7EAB
	LD	DE,($SECBUF)
	LD	BC,S7EAB
	LDIR
	LD	HL,I$7D42
J.7CF5:	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	LD	A,E
	OR	D
	JR	Z,J$7D12
	PUSH	HL
	LD	HL,($SECBUF)
	ADD	HL,DE
	INC	HL
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	EX	DE,HL
	LD	HL,($SECBUF)
	ADD	HL,BC
	EX	DE,HL
	LD	(HL),D
	DEC	HL
	LD	(HL),E
	POP	HL
	JR	J.7CF5
J$7D12:	POP	BC
	POP	DE
	POP	HL
	RET

I$7D16:	DEFW	X0006
	DEFW	X0019
	DEFW	X003A
	DEFW	X0040
	DEFW	X0047
	DEFW	X005E
	DEFW	X0070
	DEFW	X0076
	DEFW	X007B
	DEFW	X007F
	DEFW	X008B
	DEFW	X0091
	DEFW	X0097
	DEFW	X00A7
	DEFW	X00B3
	DEFW	X00CD
	DEFW	X00FE
	DEFW	X0108
	DEFW	X0110
	DEFW	X0120
	DEFW	X0136
	DEFW	0

I$7D42:	DEFW	Y0006
	DEFW	Y0019
	DEFW	Y003A
	DEFW	Y0040
	DEFW	Y0047
	DEFW	Y005B
	DEFW	Y0071
	DEFW	Y0077
	DEFW	Y0087
	DEFW	Y0097
	DEFW	Y00C8
	DEFW	Y00D0
	DEFW	Y00DA
	DEFW	Y010B
	DEFW	Y0115
	DEFW	Y011D
	DEFW	Y012D
	DEFW	Y0143
	DEFW	0

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.7D68:	PUSH	HL
	LD	HL,($SECBUF)
	EX	(SP),HL
	RET

; relocatable read sectors routine

I$7D6E:
	.PHASE	0

	PUSH	HL
	PUSH	DE
	PUSH	BC
	CALL	GETSLT
X0006:	LD	(X0028+1),A
	LD	H,HIGH 8000H
	CALL	ENASLT
	LD	A,(RAMAD1)
	LD	H,HIGH 4000H
	CALL	ENASLT
	POP	BC
	POP	DE
	POP	HL
X0019:	CALL	X0034
	PUSH	HL
	PUSH	DE
	PUSH	BC
	PUSH	AF
	LD	A,(RAMAD2)
	LD	H,HIGH 8000H
	CALL	ENASLT
X0028:	LD	A,0
	LD	H,HIGH 4000H
	CALL	ENASLT
	POP	AF
	POP	BC
	POP	DE
	POP	HL
	RET

X0034:	DEC	HL
	LD	A,H
	ADD	A,HIGH SECLEN
	INC	HL
	RET	M
X003A:	CALL	X0045
	RET	C
	DEC	B
	RET	Z
X0040:	CALL	X00CD
	JR	X0034

X0045:	LD	E,10
X0047:	CALL	X012F
	LD	A,80H
	BIT	6,D
	JR	Z,X0058
	OR	02H
	BIT	0,D
	JR	Z,X0058
	OR	08H
X0058:	PUSH	HL
	PUSH	DE
	PUSH	BC
	LD	BC,D.BFFF
X005E:	LD	DE,X009A
	PUSH	DE
	CALL	DISINT
	DI
	LD	(D.BFF8),A
	EX	(SP),HL
	EX	(SP),HL
	LD	DE,0
X006E:	LD	A,(BC)
	ADD	A,A
X0070:	JP	NC,X0088
	RET	P
	LD	A,(BC)
	ADD	A,A
X0076:	JP	NC,X0088
	RET	P
	DEC	E
X007B:	JP	NZ,X006E
	DEC	D
X007F:	JP	NZ,X006E
	POP	BC
	POP	BC
	POP	DE
	POP	HL
	JR	X00C9

X0088:	LD	DE,D.BFFB
X008B:	JP	X0094

X008E:	LD	A,(BC)
	ADD	A,A
	RET	P
X0091:	JP	C,X008E
X0094:	LD	A,(DE)
	LD	(HL),A
	INC	HL
X0097:	JP	X008E

X009A:	POP	BC
	POP	DE
	POP	HL
	EI
	CALL	ENAINT
	LD	A,(D.BFF8)
	AND	9CH
	RET	Z
X00A7:	JP	M,X00C9
	PUSH	AF
	LD	A,(IX+3)		; physical drive
	OR	0C4H
	LD	(D.BFFD),A
X00B3:	CALL	X010D
	POP	AF
	DEC	E
	JR	NZ,X0047
	SCF
	LD	E,A
	BIT	4,E
	LD	A,8
	RET	NZ
	BIT	3,E
	LD	A,4
	RET	NZ
	LD	A,12
	RET

X00C9:	LD	A,2
	SCF
	RET

X00CD:	CALL	X012F
	INC	H
	INC	H
	LD	A,(D.BFFA)
	INC	A
	LD	(D.BFFA),A
	BIT	7,D
	JR	NZ,X00E0
	CP	9+1
	RET	C
X00E0:	CP	8+1
	RET	C
	LD	A,1
	LD	(D.BFFA),A
	BIT	6,D
	JR	Z,X00F7
	BIT	0,D
	JR	NZ,X00F7
	SET	0,D
	LD	A,D
	LD	(D.BFFC),A
	RET

X00F7:	RES	0,D
	LD	A,D
	LD	(D.BFFC),A
	INC	C
X00FE:	CALL	X012F
	LD	A,50H
	LD	(D.BFF8),A
	EX	(SP),HL
	EX	(SP),HL
X0108:	CALL	X012F
	JR	X0123

X010D:	BIT	0,E
	RET	NZ
X0110:	CALL	X0136
	LD	A,C
	LD	(D.BFFB),A
	EX	(SP),HL
	EX	(SP),HL
	LD	A,10H
X011B:	LD	(D.BFF8),A
	EX	(SP),HL
	EX	(SP),HL
X0120:	CALL	X012F
X0123:	PUSH	HL
	LD	HL,2580
X0127:	DEC	HL
	LD	A,H
	OR	L
	JR	NZ,X0127
	POP	HL
	XOR	A
	RET

X012F:	LD	A,(D.BFF8)
	RRA
	JR	C,X012F
	RET

X0136:	CALL	X012F
	LD	A,0
	JR	X011B

	.DEPHASE

S7D6E	EQU	$-I$7D6E


; relocatable write sectors routine

I$7EAB:
	.PHASE	0

	PUSH	HL
	PUSH	DE
	PUSH	BC
	CALL	GETSLT
Y0006:	LD	(Y0028+1),A
	LD	H,HIGH 8000H
	CALL	ENASLT
	LD	A,(RAMAD1)
	LD	H,HIGH 4000H
	CALL	ENASLT
	POP	BC
	POP	DE
	POP	HL
Y0019:	CALL	Y0034
	PUSH	HL
	PUSH	DE
	PUSH	BC
	PUSH	AF
	LD	A,(RAMAD2)
	LD	H,HIGH 8000H
	CALL	ENASLT
Y0028:	LD	A,0
	LD	H,HIGH 4000H
	CALL	ENASLT
	POP	AF
	POP	BC
	POP	DE
	POP	HL
	RET

Y0034:	DEC	HL
	LD	A,H
	ADD	A,HIGH SECLEN
	INC	HL
	RET	M
Y003A:	CALL	Y0045
	RET	C
	DEC	B
	RET	Z
Y0040:	CALL	Y00DA
	JR	Y0034

Y0045:	LD	E,10
Y0047:	CALL	Y013C
	LD	A,0A0H
	BIT	6,D
	JR	Z,Y0058
	OR	02H
	BIT	0,D
	JR	Z,Y0058
	OR	08H
Y0058:	PUSH	HL
	PUSH	DE
	PUSH	BC
Y005B:	LD	DE,Y007A
	PUSH	DE
	CALL	DISINT
	DI
	LD	(D.BFF8),A
	EX	(SP),HL
	EX	(SP),HL
	LD	BC,D.BFFF
	LD	DE,D.BFFB
Y006E:	LD	A,(BC)
	ADD	A,A
	RET	P
Y0071:	JP	C,Y006E
	LD	A,(HL)
	LD	(DE),A
	INC	HL
Y0077:	JP	Y006E

Y007A:	POP	BC
	POP	DE
	POP	HL
	EI
	CALL	ENAINT
	LD	A,(D.BFF8)
	AND	0FCH
	RET	Z
Y0087:	JP	M,Y00D3
	BIT	6,A
	JR	NZ,Y00B2
	PUSH	AF
	LD	A,(IX+3)		; physical drive
	OR	0C4H
	LD	(D.BFFD),A
Y0097:	CALL	Y011A
	POP	AF
	DEC	E
	JR	NZ,Y0047
	SCF
	LD	E,A
	BIT	5,E
	LD	A,10
	RET	NZ
	BIT	4,E
	LD	A,8
	RET	NZ
	BIT	3,E
	LD	A,4
	RET	NZ
	LD	A,12
	RET

Y00B2:	LD	A,0D0H
	LD	(D.BFF8),A
	EX	(SP),HL
	EX	(SP),HL
	LD	A,80H
	LD	(D.BFF8),A
	EX	(SP),HL
	EX	(SP),HL
	LD	HL,D.BFFF
	LD	DE,0
Y00C6:	LD	A,(HL)
	ADD	A,A
Y00C8:	JP	P,Y00D7
	JR	NC,Y00D7
	DEC	DE
	LD	A,E
	OR	D
Y00D0:	JP	NZ,Y00C6
Y00D3:	LD	A,2
	SCF
	RET

Y00D7:	XOR	A
	SCF
	RET

Y00DA:	CALL	Y013C
	INC	H
	INC	H
	LD	A,(D.BFFA)
	INC	A
	LD	(D.BFFA),A
	BIT	7,D
	JR	NZ,Y00ED
	CP	9+1
	RET	C
Y00ED:	CP	8+1
	RET	C
	LD	A,1
	LD	(D.BFFA),A
	BIT	6,D
	JR	Z,Y0104
	BIT	0,D
	JR	NZ,Y0104
	SET	0,D
	LD	A,D
	LD	(D.BFFC),A
	RET

Y0104:	RES	0,D
	LD	A,D
	LD	(D.BFFC),A
	INC	C
Y010B:	CALL	Y013C
	LD	A,50H
	LD	(D.BFF8),A
	EX	(SP),HL
	EX	(SP),HL
Y0115:	CALL	Y013C
	JR	Y0130

Y011A:	BIT	0,E
	RET	NZ
Y011D:	CALL	Y0143
	LD	A,C
	LD	(D.BFFB),A
	EX	(SP),HL
	EX	(SP),HL
	LD	A,10H

Y0128:	LD	(D.BFF8),A
	EX	(SP),HL
	EX	(SP),HL
Y012D:	CALL	Y013C

Y0130:	PUSH	HL
	LD	HL,2580
Y0134:	DEC	HL
	LD	A,H
	OR	L
	JR	NZ,Y0134
	POP	HL
	XOR	A
	RET

Y013C:	LD	A,(D.BFF8)
	RRA
	JR	C,Y013C
	RET

Y0143:	CALL	Y013C
	LD	A,00H
	JR	Y0128

	.DEPHASE
S7EAB	EQU	$-I$7EAB

	DEFS	8000H-$,0FFH

	END
