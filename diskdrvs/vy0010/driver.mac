; Diskdriver Philips VY0010 (external floppydisk controller)
; FDC	WD2793A

; Source re-created by Z80DIS 2.2
; Z80DIS was written by Kenneth Gielow, Palo Alto, CA

; Code Copyrighted by JVC and maybe others
; Source comments by Arjen Zeilemaker

; Sourcecode supplied for STUDY ONLY
; Recreation NOT permitted without authorisation of the copyrightholders


SECLEN  EQU     512
MYSIZE	EQU	8

; offset	function
; 0		motor off timer
; 1		disk change drive 0 timer
; 2		disk change drive 1 timer
; 3		last used drive
; 4		current cylinder drive 0
; 5		current cylinder drive 1
; 6		last used drive (phantom)
; 7		number of physical drives


BDOS	EQU	0F37DH
CLS	EQU	000C3H

D7FF8	EQU	07FF8H
D7FF9	EQU	D7FF8+1
D7FFA	EQU	D7FF8+2
D7FFB	EQU	D7FF8+3
D7FFC	EQU	07FFCH                  ; b0 = side select
X7FFD	EQU	07FFDH
D7FFF	EQU	07FFFH                  ; b4 = TYPE0, b5 = TYPE1, b6 = -IRQ, b7 = -DRQ

I7405:

; Only supports 3.5 single sided media
; DEFDPB should point to the largest media, which should be 0F9H instead of 0F8H

DEFDPB	EQU	$-1

        DEFB	0F8h		        ; Media F8
        DEFW	512		        ; 80 Tracks
        DEFB	0Fh		        ; 9 sectors
        DEFB	04h		        ; 1 side
        DEFB	01h		        ; 3.5" 360 Kb
        DEFB	02h
        DEFW	1
        DEFB	2
        DEFB	112
        DEFW	12
        DEFW	355
        DEFB	2
        DEFW	5

I7417:	DEFB	0F9h		        ; Media F9
        DEFW	512		        ; 80 Tracks
        DEFB	0Fh		        ; 9 sectors
        DEFB	04h		        ; 2 sides
        DEFB	01h		        ; 3.5" 720 Kb
        DEFB	02h
        DEFW	1
        DEFB	2
        DEFB	112
        DEFW	14
        DEFW	714
        DEFB	3
        DEFW	7

        DEFB	0FAh		        ; Media FA
        DEFW	512		        ; 80 Tracks
        DEFB	0Fh		        ; 8 sectors
        DEFB	04h		        ; 1 side
        DEFB	01h		        ; 3.5" 320 Kb
        DEFB	02h
        DEFW	1
        DEFB	2
        DEFB	112
        DEFW	10
        DEFW	316
        DEFB	1
        DEFW	3

        DEFB	0FBh		        ; Media FB
        DEFW	512		        ; 80 Tracks
        DEFB	0Fh		        ; 8 sectors
        DEFB	04h		        ; 2 sides
        DEFB	01h		        ; 3.5" 640 Kb
        DEFB	02h
        DEFW	1
        DEFB	2
        DEFB	112
        DEFW	12
        DEFW	635
        DEFB	2
        DEFW	5

        DEFB	0FCh		        ; Media FC
        DEFW	512		        ; 40 Tracks
        DEFB	0Fh		        ; 9 sectors
        DEFB	04h		        ; 1 side
        DEFB	00h		        ; 5.25" 180 Kb
        DEFB	01h
        DEFW	1
        DEFB	2
        DEFB	64
        DEFW	9
        DEFW	352
        DEFB	2
        DEFW	5

        DEFB	0FDh		        ; Media FD
        DEFW	512		        ; 40 Tracks
        DEFB	0Fh		        ; 9 sectors
        DEFB	04h		        ; 2 sides
        DEFB	01h		        ; 5.25" 360 Kb
        DEFB	02h
        DEFW	1
        DEFB	2
        DEFB	112
        DEFW	12
        DEFW	355
        DEFB	2
        DEFW	5

        DEFB	0FEh		        ; Media FE
        DEFW	512	        	; 40 Tracks
        DEFB	0Fh	        	; 8 sectors
        DEFB	04h     		; 1 side
        DEFB	00h     		; 5.25" 160 Kb
        DEFB	01h
        DEFW	1
        DEFB	2
        DEFB	64
        DEFW	7
        DEFW	314
        DEFB	1
        DEFW	3

        DEFB	0FFh	        	; Media FF
        DEFW	512	        	; 40 Tracks
        DEFB	0Fh	        	; 8 sectors
        DEFB	04h	        	; 2 sides
        DEFB	01h	        	; 5.25" 320 Kb
        DEFB	02h
        DEFW	1
        DEFB	2
        DEFB	112
        DEFW	10
        DEFW	316
        DEFB	1
        DEFW	3

;	  Subroutine DSKIO
;	     Inputs  ________________________
;	     Outputs ________________________

DSKIO:	JP	NC,C7613                ; DSKIO read
        CALL	C74C5                   ; write sectors

; DSKIO finish

J749B:	PUSH	AF
        LD	C,0                     ; assume no error, disk unchanged timer = 0 seconds
        JR	NC,J74A2
        LD	C,0                     ; error, disk unchanged timer = 0 seconds
J74A2:	LD	A,0D0H
        LD	(D7FF8),A	        ; abort command
        EX	(SP),HL
        EX	(SP),HL
        EX	(SP),HL
        EX	(SP),HL
        LD	A,(D7FFB)               ; clear DRQ
        LD	A,(D7FF8)               ; clear INTRQ
        LD	(IX+0),2*60             ; motor stop timer 120 ticks (should be 100 for european machines)
        LD	A,(IX+3)
        AND	A		        ; used drive 0 ?
        JR	NZ,J74C0	        ; nope, set disk change timer drive 1
        LD	(IX+1),C	        ; set disk change timer drive 0
        POP	AF
        RET

J74C0:	LD	(IX+2),C                ; set disk change timer drive 1
        POP	AF
        RET

;	  Subroutine write sectors
;	     Inputs  ________________________
;	     Outputs ________________________

C74C5:	CALL	C76E0		        ; setup for disk i/o
        RET	C

J74C9:	LD	A,L
        ADD	A,LOW (SECLEN-1)
        LD	A,H
        ADC	A,HIGH (SECLEN-1)
        CP	40H                     ; writes from page 0 ?
        JP	C,J74F4                 ; yep, direct I/O
        LD	A,H
        AND	A                       ; writes from page 2 or 3 ?
        JP	M,J74F4                 ; yep, direct I/O
        PUSH	HL
        PUSH	DE
        PUSH	BC
        LD	DE,($SECBUF)
        PUSH	DE
        LD	BC,SECLEN
        CALL	XFER
        POP	HL
        POP	BC
        POP	DE                      ; transfer to temporary sector buffer
        CALL	C7503		        ; write sector
        CALL	C75A1		        ; verify sector (when enabled)
        POP	HL
        JP	J74FA                   ; next sector

J74F4:	CALL	C7503		        ; write sector
        CALL	C75A1		        ; verify sector (when enabled)
J74FA:	RET	C
        DEC	B
        RET	Z
        CALL	C77CC		        ; setup for next sector
        JP	J74C9

;	  Subroutine write sector
;	     Inputs  ________________________
;	     Outputs ________________________

C7503:	LD	E,21
J7505:	CALL	C7834		        ; wait for FDC
        LD	A,0A0H		        ; write sector data command
        BIT	6,D                     ; double sided media ?
        JR	Z,J7516                 ; nope,
        OR	02H
        BIT	0,D                     ; side 0 ?
        JR	Z,J7516                 ; yep,
        OR	08H                     ; side 1
J7516:	PUSH	HL
        PUSH	DE
        PUSH	BC
        LD	DE,I753A
        PUSH	DE
        CALL	DISINT
        DI			        ; disable interrupts
        LD	(D7FF8),A               ; execute command
        EX	(SP),IY
        EX	(SP),IY                 ; wait
        LD	BC,D7FFF
        LD	DE,D7FFB
J752E:	LD	A,(BC)
        ADD	A,A                     ; read DRQ/INTRQ status
        RET	P                       ; INTRQ (end of command), quit
        JP	C,J752E                 ; wait for DRQ
        LD	A,(HL)
        LD	(DE),A                  ; write data
        INC	HL
        JP	J752E

I753A:	POP	BC
        POP	DE
        POP	HL
        EI
        CALL	ENAINT		        ; enable interrupts
        LD	A,(D7FF8)
        AND	0FCH		        ; any error ?
        RET	Z		        ; nope, quit
        BIT	6,A		        ; write protect error ?
        JR	NZ,J7574	        ; yep, check if real write protect error
        PUSH	AF
        LD	A,(IX+3)	        ; used drive
        OR	0C4H		        ; set b7,b6 and b2
        LD	(X7FFD),A	        ; motor on, in use, b2=1, select drive
        CALL	C7813		        ; setup for retry
        POP	AF
        DEC	E
        JR	NZ,J7505	        ; next retry
        SCF
        LD	E,A
        BIT	7,E		        ; NOT READY error ?
        LD	A,2
        RET	NZ                      ; yep, return NOT READY error
        BIT	5,E		        ; WRITE FAULT error ?
        LD	A,10
        RET	NZ                      ; yep, return WRITE FAULT error
        BIT	4,E		        ; RECORD NOT FOUND error ?
        LD	A,8
        RET	NZ                      ; yep, return RECORD NOT FOUND error
        BIT	3,E		        ; CRC error ?
        LD	A,4
        RET	NZ                      ; yep, return DATA (CRC) error
        LD	A,12                    ; return OTHER error
        RET

J7574:	LD	A,0D0H
        LD	(D7FF8),A	        ; abort command
        EX	(SP),IY
        EX	(SP),IY                 ; wait
        LD	A,80H
        LD	(D7FF8),A	        ; execute read sector data command
        EX	(SP),IY
        EX	(SP),IY                 ; wait
        LD	HL,D7FFF
        LD	DE,0
J758C:	LD	A,(HL)
        ADD	A,A                     ; read DRQ/INTRQ status
        JP	P,J759E                 ; INTRQ (end of command), real write protect error
        JP	NC,J759E	        ; DRQ, real write protect error
        DEC	DE
        LD	A,E
        OR	D
        JP	NZ,J758C
        LD	A,2
        SCF
        RET		                ; return NOT READY error

J759E:	XOR	A
        SCF
        RET		                ; return WRITE PROTECT errorcode

;	  Subroutine verify sector
;	     Inputs  ________________________
;	     Outputs ________________________

C75A1:	RET	C		        ; error, quit verify
        LD	A,(RAWFLG)
        OR	A		        ; verify on ?
        RET	Z		        ; nope, quit
        PUSH	HL
        PUSH	DE
        PUSH	BC
        CALL	C7834		        ; wait for FDC
        LD	A,80H		        ; read sector data command
        BIT	6,D                     ; double sided media ?
        JR	Z,J75BB                 ; nope,
        OR	02H
        BIT	0,D                     ; side 0 ?
        JR	Z,J75BB                 ; yep,
        OR	08H
J75BB:	LD	BC,D7FFF
        LD	DE,I7602
        PUSH	DE
        CALL	DISINT
        DI			        ; disable interrupts
        LD	(D7FF8),A
        EX	(SP),HL
        EX	(SP),HL
        LD	DE,0
J75CE:	LD	A,(BC)
        ADD	A,A
        JP	NC,J75E9
        RET	P
        LD	A,(BC)
        ADD	A,A
        JP	NC,J75E9
        RET	P
        DEC	E
        JP	NZ,J75CE
        DEC	D
        JP	NZ,J75CE
        POP	BC
        POP	BC
        POP	DE
        POP	HL
        JP	J76DC

J75E9:	LD	DE,D7FFB
        JP	J75F5

J75EF:	LD	A,(BC)
        ADD	A,A
        RET	P
        JP	C,J75EF
J75F5:	LD	A,(DE)
        INC	BC
        CPI
        JP	Z,J75EF
J75FC:	LD	A,(BC)
        ADD	A,A
        RET	P
        JP	J75FC

I7602:	POP	BC
        POP	DE
        POP	HL
        EI
        CALL	ENAINT		        ; enable interrupts
        LD	A,(D7FF8)
        AND	9CH
        RET	Z
        LD	A,10
        SCF
        RET

;	  Subroutine DSKIO read
;	     Inputs  ________________________
;	     Outputs ________________________

C7613:	CALL	C7619                   ; read sectors
        JP	J749B                   ; DSKIO finish

;	  Subroutine read sectors
;	     Inputs  ________________________
;	     Outputs ________________________

C7619:	CALL	C76E0		        ; setup for disk i/o
        RET	C
J761D:	LD	A,L
        ADD	A,LOW (SECLEN-1)
        LD	A,H
        ADC	A,HIGH (SECLEN-1)
        CP	40H
        JP	C,J7649
        LD	A,H
        AND	A
        JP	M,J7649
        PUSH	HL
        LD	HL,($SECBUF)
        CALL	C7654		        ; read sector
        POP	HL
        RET	C
        PUSH	HL
        PUSH	DE
        PUSH	BC
        EX	DE,HL
        LD	HL,($SECBUF)
        LD	BC,SECLEN
        CALL	XFER
        POP	BC
        POP	DE
        POP	HL
        AND	A
        JR	J764D

J7649:	CALL	C7654		        ; read sector
        RET	C
J764D:	DEC	B
        RET	Z
        CALL	C77CC		        ; setup for next sector
        JR	J761D

;	  Subroutine read sector
;	     Inputs  ________________________
;	     Outputs ________________________

C7654:	LD	E,15H
J7656:	CALL	C7834		        ; wait for FDC
        LD	A,80H	        	; read sector data
        BIT	6,D                     ; double sided media ?
        JR	Z,J7667                 ; nope,
        OR	02H
        BIT	0,D                     ; side 0 ?
        JR	Z,J7667                 ; yep,
        OR	08H
J7667:	PUSH	HL
        PUSH	DE
        PUSH	BC
        LD	DE,I76AB
        PUSH	DE
        CALL	DISINT
        DI			        ; disable interrupts
        LD	(D7FF8),A
        EX	(SP),IY
        EX	(SP),IY
        LD	DE,0
        LD	BC,D7FFF
J767F:	LD	A,(BC)
        ADD	A,A
        JP	NC,J7699
        RET	P
        LD	A,(BC)
        ADD	A,A
        JP	NC,J7699
        RET	P
        DEC	E
        JP	NZ,J767F
        DEC	D
        JP	NZ,J767F
        POP	BC
        POP	BC
        POP	DE
        POP	HL
        JR	J76DC		        ; Not Ready

J7699:	LD	DE,D7FFB
        JP	J76A5

J769F:	LD	A,(BC)
        ADD	A,A
        RET	P
        JP	C,J769F
J76A5:	LD	A,(DE)
        LD	(HL),A
        INC	HL
        JP	J769F

I76AB:	POP	BC
        POP	DE
        POP	HL
        EI
        CALL	ENAINT
        LD	A,(D7FF8)
        AND	9CH
        RET	Z
        PUSH	AF
        LD	A,(IX+3)	        ; used drive
        OR	0C4H		        ; set b7, b6 and b2
        LD	(X7FFD),A	        ; motor on, in use, b2=1, select drive
        CALL	C7813		        ; setup for retry
        POP	AF
        DEC	E
        JR	NZ,J7656
        SCF
        LD	E,A
        BIT	7,E		        ; not ready error ?
        LD	A,2
        RET	NZ
        BIT	4,E		        ; record not found error ?
        LD	A,8
        RET	NZ
        BIT	3,E		        ; crc error ?
        LD	A,4
        RET	NZ
        LD	A,12
        RET

J76DC:	LD	A,2
        SCF
        RET

;	  Subroutine setup for disk i/o
;	     Inputs  ________________________
;	     Outputs ________________________

C76E0:	PUSH	AF
        PUSH	BC
        PUSH	HL
        CALL	GETWRK
        POP	HL
        POP	BC
        POP	AF
        CP	2		        ; driveid valid ?
        JR	C,J76F1		        ; yep,
J76ED:	LD	A,12
        SCF
        RET

J76F1:	PUSH	AF
        LD	A,C
        CP	0F8H		        ; mediaid valid ?
        JR	NC,J76FA	        ; yep,
        POP	AF
        JR	J76ED		        ; Other errorcode

J76FA:	EX	(SP),HL
        PUSH	HL
        PUSH	BC
        CALL	C7834		        ; wait for FDC
        BIT	1,C                     ; 8 sectors per track media ?
        LD	C,E
        LD	B,D
        LD	DE,8
        JR	NZ,J770A                ; yep,
        INC	DE
J770A:	CALL	DIV16
        LD	A,L
        INC	A
        LD	(D7FFA),A	        ; set record
        LD	L,C
        POP	BC
        POP	AF
        LD	H,A
        XOR	A		        ; side 0
        BIT	0,C                     ; double sided media ?
        JR	Z,J7720                 ; nope,
        SRL	L
        JR	NC,J7720
        INC	A		        ; side 1
J7720:	LD	(D7FFC),A	        ; set side
        LD	D,A
        LD	A,(IX+7)
        DEC	A		        ; 1 physical drive ?
        JR	Z,J772B	        	; yep, use physical drive 0
        LD	A,H
J772B:	OR	0C4H		        ; set b7, b6 and b2
        CALL	DISINT
        DI			        ; disable interrupts
        LD	(X7FFD),A	        ; motor on, in use, b2=1, select drive
        LD	A,(IX+0)
        AND	A		        ; motor still on ?
        LD	(IX+0),0FFH	        ; disable motor off timer
        EI
        CALL	ENAINT	        	; enable interrupts
        JR	NZ,J774E        	; motor still on, skip spinup wait
        CALL	C7852	        	; motor spin up delay (1/4)
        CALL	C7852	        	; motor spin up delay (2/4)
        CALL	C7852	        	; motor spin up delay (3/4)
        CALL	C7852	        	; motor spin up delay (4/4)
J774E:	LD	A,C
        RRCA
        RRCA
        AND	0C0H
        OR	D
        LD	D,A
        LD	C,L
        LD	A,(IX+7)
        DEC	A		        ; 1 physical drive ?
        JR	Z,J7783		        ; yep, phantom
        LD	A,(IX+3)
        CP	H		        ; same drive as last used ?
        JR	Z,J77C3	        	; yep, skip trackregister setup
        XOR	01H
        LD	(IX+3),A	        ; nope, switch drive
        LD	A,(D7FF9)
        JR	Z,J7774
        LD	(IX+4),A
        LD	A,(IX+5)
        JR	J777A

J7774:	LD	(IX+5),A
        LD	A,(IX+4)
J777A:	LD	(D7FF9),A
        EX	(SP),IY
        EX	(SP),IY
        JR	J77C6

J7783:	LD	A,H
        CP	(IX+6)
        LD	(IX+6),A
        JR	Z,J77C3
        PUSH	IX
        PUSH	DE
        PUSH	BC
        LD	A,(X7FFD)
        PUSH	AF
        OR	04H	        	; set b2
        AND	0BFH	        	; reset b6
        LD	(X7FFD),A       	; in use off, b2=1
        LD	A,87H	        	; set b7, b2, b1 and b0
        LD	(X7FFD),A       	; motor on, in use off, b2=1, unselect drive
        CALL	PROMPT	        	; prompt
        POP	AF
        OR	04H     		; set b2
        LD	(X7FFD),A
        PUSH	HL
        LD	L,0
J77AC:	INC	L
        EX	(SP),IX
        EX	(SP),IX
        EX	(SP),IX
        EX	(SP),IX
        JR	Z,J77BE
        LD	A,(D7FF8)
        BIT	7,A	        	; drive ready ?
        JR	NZ,J77AC        	; nope, wait
J77BE:	POP	HL
        POP	BC
        POP	DE
        POP	IX
J77C3:	LD	A,(D7FF9)
J77C6:	CP	C                       ; already on the track ?
        CALL	NZ,C7819                ; nope, select track
        POP	HL
        RET

;	  Subroutine setup for next sector
;	     Inputs  ________________________
;	     Outputs ________________________

C77CC:	CALL	C7834		        ; wait for FDC
        INC	H
        INC	H                       ; update transfer address
        LD	A,(D7FFA)
        INC	A
        LD	(D7FFA),A               ; update record number
        BIT	7,D                     ; 8 sectors per track media ?
        JR	NZ,J77DF                ; yep,
        CP	9+1
        RET	C
J77DF:	CP	8+1
        RET	C
        LD	A,1
        LD	(D7FFA),A               ; record = 1
        CALL	C785E		        ; ? delay
        BIT	6,D                     ; double sided media ?
        JR	Z,J77FA                 ; nope,
        BIT	0,D                     ; side 1 ?
        JR	NZ,J77FA                ; yep, next track at side 0
        SET	0,D                     ; side 1
        LD	A,1
        LD	(D7FFC),A	        ; side 1
        RET

J77FA:	RES	0,D                     ; side 0
        LD	A,0
        LD	(D7FFC),A	        ; side 0
        INC	C                       ; update track
        CALL	C7834		        ; wait for FDC
        LD	A,50H		        ; track increase command
        LD	(D7FF8),A
        EX	(SP),IY
        EX	(SP),IY
        CALL	C7834		        ; wait for FDC
        JR	C7858		        ; head settle delay

;	  Subroutine setup for retry
;	     Inputs  ________________________
;	     Outputs ________________________

C7813:	BIT	0,E
        RET	NZ
        CALL	C783B		        ; recalibrate head

;	  Subroutine select track
;	     Inputs  ________________________
;	     Outputs ________________________

C7819:	LD	A,C
        CP	80
        JP	NC,J76ED	        ; Other errorcode
        LD	(D7FFB),A	        ; set track
        EX	(SP),IY
        EX	(SP),IY
        LD	A,10H		        ; track select command
J7828:	LD	(D7FF8),A
        EX	(SP),IY
        EX	(SP),IY
        CALL	C7834		        ; wait for FDC
        JR	C7858		        ; head settle delay

;	  Subroutine wait for FDC
;	     Inputs  ________________________
;	     Outputs ________________________

C7834:	LD	A,(D7FF8)
        RRA
        JR	C,C7834
        RET

;	  Subroutine recalibrate head
;	     Inputs  ________________________
;	     Outputs ________________________

C783B:	PUSH	BC
        LD	B,5
J783E:	CALL	C7834		        ; wait for FDC
        LD	A,50H		        ; track increase command
        LD	(D7FF8),A
        EX	(SP),HL
        EX	(SP),HL
        DJNZ	J783E
        POP	BC
        CALL	C7834		        ; wait for FDC
        LD	A,02H		        ; track 0 select (slow speed)
        JR	J7828                   ; execute track cmd and wait for head settle

;	  Subroutine motor spin up delay (1/4)
;	     Inputs  ________________________
;	     Outputs ________________________

C7852:	PUSH	HL
        LD	HL,099E1H
        JR	J7862

;	  Subroutine head settle delay (75 ms)
;	     Inputs  ________________________
;	     Outputs ________________________

C7858:	PUSH	HL
        LD	HL,0117BH
        JR	J7862

;	  Subroutine ? delay (5 ms)
;	     Inputs  ________________________
;	     Outputs ________________________

C785E:	PUSH	HL
        LD	HL,0012CH
J7862:	DEC	HL
        LD	A,H
        OR	L
        JR	NZ,J7862
        POP	HL
        XOR	A
        RET

;	  Subroutine INIHRD
;	     Inputs  ________________________
;	     Outputs ________________________

INIHRD:	LD	A,0D0H
        LD	(D7FF8),A	        ; abort command
        EX	(SP),IY
        EX	(SP),IY
        LD	A,0C0H		        ; motor on, in use, b2=0, select drive 0
        CALL	C7883		        ; initialize drive
        LD	A,0C1H		        ; motor on, in use, b2=0, select drive 1
        CALL	C7883		        ; initialize drive
        LD	A,03H		        ; set b1 and b0
        LD	(X7FFD),A	        ; motor off,in use off, b2=0, unselect drive
        RET

;	  Subroutine initialize drive
;	     Inputs  ________________________
;	     Outputs ________________________

C7883:	LD	(X7FFD),A	        ; select drive
        PUSH	BC
        LD	B,5		        ; 5 tracks
J7889:	CALL	C7834		        ; wait for FDC
        LD	A,50H		        ; increase track command
        LD	(D7FF8),A
        EX	(SP),HL
        EX	(SP),HL
        DJNZ	J7889		        ; next track
        POP	BC
        CALL	C7834		        ; wait for FDC
        LD	A,02H
        LD	(D7FF8),A	        ; select track 0 (slow speed)
        EX	(SP),IY
        EX	(SP),IY
        LD	HL,0
J78A5:	LD	A,(D7FF8)
        RRA			        ; command ready ?
        RET	NC		        ; yep, quit
        DEC	HL
        LD	A,L
        OR	H		        ; time out ?
        JR	NZ,J78A5	        ; nope, not yet
        CALL	C7858		        ; head settle delay
        RET

;	  Subroutine DRIVES
;	     Inputs  ________________________
;	     Outputs ________________________

DRIVES:	PUSH	BC
        PUSH	AF
        CALL	GETWRK
        LD	A,0C1H		        ; set b7, b6 and b0
        LD	(X7FFD),A	        ; motor on, in use, b2=0, select drive 1
        LD	B,5		        ; 5 tracks
J78BF:	CALL	C7834		        ; wait for FDC
        LD	A,50H		        ; track increase command
        LD	(D7FF8),A
        EX	(SP),HL
        EX	(SP),HL
        DJNZ	J78BF
        CALL	C7834		        ; wait for FDC
        LD	A,02H
        LD	(D7FF8),A	        ; select track 0 (slow speed)
        EX	(SP),IY
        EX	(SP),IY
        LD	HL,0
J78DA:	LD	A,(D7FF8)
        RRA			        ; command ready ?
        JR	NC,J78E7	        ; yep, then second drive is there!
        DEC	HL
        LD	A,L
        OR	H		        ; time out ?
        JR	NZ,J78DA	        ; nope, not yet
        INC	L		        ; 1 physical drive
        DEFB	0CAH
J78E7:	LD	L,2		        ; 2 physical drives
        LD	(IX+7),L
        LD	A,03H		        ; set b1 and b0
        LD	(X7FFD),A	        ; motor off, in use off, b2=0, unselect drive
        POP	AF
        JR	Z,J78F6		        ; diskkernel started with CTRL, use physical drives
        LD	L,2		        ; started without CTRL, alway two drives (phantoms in case of 1 physical drive)
J78F6:	POP	BC
        RET

;	  Subroutine INIENV
;	     Inputs  ________________________
;	     Outputs ________________________

INIENV:	CALL	GETWRK
        XOR	A
        LD	B,7
J78FE:	LD	(HL),A
        INC	HL
        DJNZ	J78FE		        ; initialize driver workarea (leave number of physical drives alone)
        LD	HL,I7908
        JP	SETINT		        ; install interrupt handler of driver

;	  Subroutine interrupt handler
;	     Inputs  ________________________
;	     Outputs ________________________

I7908:	PUSH	AF
        CALL	GETWRK
        LD	A,(HL)
        AND	A		        ; motor timer finished ?
        JR	Z,J791D		        ; yep, skip motor off
        CP	0FFH		        ; motor timer disabled ?
        JR	Z,J791D		        ; yep, skip motor off
        DEC	A
        LD	(HL),A		        ; decrease timer
        JR	NZ,J791D
        LD	A,03H		        ; set b1 and b0
        LD	(X7FFD),A	        ; motor off, in use off, b2=0, unselect drive
J791D:	INC	HL
        LD	A,(HL)		        ; disk change timer drive 0 finished ?
        AND	A
        JR	Z,J7923
        DEC	(HL)		        ; nope, decrease
J7923:	INC	HL
        LD	A,(HL)
        AND	A		        ; disk change timer drive 0 finished ?
        JR	Z,J7929
        DEC	(HL)		        ; nope, decrease
J7929:	POP	AF
        JP	PRVINT		        ; continue with other interrupt handler

;	  Subroutine DSKCHG
;	     Inputs  ________________________
;	     Outputs ________________________

DSKCHG:	PUSH	HL
        PUSH	BC
        PUSH	AF
        CALL	GETWRK
        POP	AF
        POP	BC
        POP	HL
        LD	B,(IX+7)
        DEC	B		        ; 1 physical drive ?
        JR	Z,J7942		        ; yep,
        AND	A
        LD	B,(IX+2)
        JR	NZ,J7945
J7942:	LD	B,(IX+1)
J7945:	AND	A
        INC	B
        DEC	B
        LD	B,1
        RET	NZ
        PUSH	BC
        PUSH	HL
        LD	DE,1
        LD	HL,($SECBUF)
        CALL	C7613		        ; DSKIO read
        JR	C,J796F
        LD	HL,($SECBUF)
        LD	B,(HL)
        POP	HL
        PUSH	BC
        CALL	GETDPB		        ; GETDPB
        LD	A,12
        JR	C,J796F
        POP	AF
        POP	BC
        CP	C
        SCF
        CCF
        LD	B,0FFH
        RET	NZ
        INC	B
        RET

J796F:	POP	DE
        POP	DE
        RET

;	  Subroutine GETDPB
;	     Inputs  ________________________
;	     Outputs ________________________

GETDPB:	EX	DE,HL
        INC	DE
        LD	A,B
        SUB	0F8H
        RET	C
        LD	L,A
        LD	H,00H
        ADD	HL,HL
        LD	C,L
        LD	B,H
        ADD	HL,HL
        ADD	HL,HL
        ADD	HL,HL
        ADD	HL,BC
        LD	BC,I7405
        ADD	HL,BC
        LD	BC,18
        LDIR
        RET

;	  Subroutine CHOICE
;	     Inputs  ________________________
;	     Outputs ________________________

CHOICE:	LD	HL,0
        RET

;	  Subroutine DSKFMT
;	     Inputs  ________________________
;	     Outputs ________________________

DSKFMT:	LD	IY,I7E5C
        LD	A,(IY+8)
        ADD	A,(IY+9)
        CP	9FH                     ; OEM name tampered ?
        LD	A,16                    ; other error
        JP	NZ,J7A0F	        ; yep, quit with error
        PUSH	HL
        POP	IY                      ; start of workarea
        LD	(IY+1),D                ; store driveid
        LD	A,D
        LD	(X7FFD),A	        ; motor off, in use off, b2=0, select drive
        LD	A,(D7FFF)
        BIT	5,A		        ; TYPE1
        LD	(IY+5),0F8H
        JR	NZ,J79BA	        ; use single sided
        LD	(IY+5),0F9H	        ; use double sided
J79BA:	LD	A,B
        CP	1                       ; workarea size ok ?
        JR	NC,J79C9                ; yep,
        LD	A,C
        CP	15                      ; workarea size ok ?
        JR	NC,J79C9                ; yep,
        LD	A,14                    ; out of memory
        JP	J7A0F                   ; quit with error

J79C9:	LD	DE,0		        ; sector 0
        LD	A,(IY+1)	        ; driveid
        LD	C,(IY+5)	        ; media byte
        LD	B,0
        LD	(IY+2),B	        ; side 0
        CALL	C76E0	        	; setup for disk i/o
        LD	A,16                    ; other error
        JP	C,J7A0F                 ; error, quit with error

J79DF:	CALL	C783B		        ; recalibrate head
        XOR	A
        LD	D,A                     ; track = 0
        LD	A,(IY+2)                ; current side
        LD	(D7FFC),A	        ; set side
        LD	C,A                     ; store side
J79EB:	XOR	A
        INC	A
        LD	E,A                     ; record = 1
        CALL	C7AEC		        ; format track
        AND	0E4H		        ; error ?
        JR	Z,J7A13		        ; nope,
        LD	B,A
        LD	A,10                    ; write fault
        BIT	7,B                     ; FDD not ready ?
        JR	NZ,J7A0A                ; yep, recalibrate and quit with error
        LD	A,0                     ; write proctected
        BIT	6,B                     ; write protect ?
        JR	NZ,J7A0A                ; yep, recalibrate and quit with error
        LD	A,10                    ; write fault
        BIT	5,B                     ; write fault (WD 179X)?
        JR	NZ,J7A0A                ; yep, recalibrate and quit with error
        LD	A,16                    ; other error
J7A0A:	PUSH	AF                      ; store error
        CALL	C783B		        ; recalibrate head
        POP	AF                      ; restore error
J7A0F:	SCF                             ; set error flag
        JP	J749B                   ; DSKIO finish

J7A13:	CALL	C7858		        ; head settle delay
        INC	D
        LD	A,D
        CP	80
        JR	NC,J7A2D
        CALL	C7834		        ; wait for FDC
        LD	A,50H		        ; track increase command
        LD	(D7FF8),A
        CALL	C7858		        ; head settle delay
        CALL	C7834		        ; wait for FDC
        JP	J79EB		        ; next track

J7A2D:	BIT	0,(IY+5)	        ; double sided ?
        JR	Z,J7A40                 ; nope, continue with system sectors
        BIT	0,(IY+2)	        ; already on side 1 ?
        JR	NZ,J7A40	        ; yep, continue with system sectors
        SET	0,(IY+2)	        ; side 1
        JP	J79DF

J7A40:	CALL	C783B		        ; recalibrate head
        BIT	0,(IY+5)	        ; double sided ?
        LD	HL,I7405	        ; DPB 0F8H
        JR	Z,J7A4F
        LD	HL,I7417	        ; DPB 0F9H
J7A4F:	LD	BC,9
        ADD	HL,BC
        LD	A,(HL)
        LD	(IY+3),A                ; number if FATs
        LD	BC,2
        ADD	HL,BC
        LD	A,(HL)
        LD	(IY+6),A                ; first data sector (low byte)
        LD	BC,4
        ADD	HL,BC
        LD	A,(HL)
        LD	(IY+4),A                ; number of FAT sectors
        INC	HL
        LD	A,(HL)
        LD	(IY+7),A                ; first directory sector (low byte)
        LD	HL,I7E5C
        LD	BC,S7E5C
        LD	DE,($SECBUF)
        LDIR
        LD	BC,SECLEN-S7E5C
        EX	DE,HL
        CALL	C7AE3                   ; clear sector buffer (partly)
        LD	(IY+0),0	        ; sector number = 0
        CALL	C7CB4		        ; write sector
        JP	C,J7A0A                 ; error, recalibrate and quit with error
        LD	D,(IY+3)                ; number of FATs
J7A8C:	LD	HL,($SECBUF)
        LD	E,(IY+4)                ; number of FAT sectors
        LD	A,(IY+5)                ; media byte
        LD	(HL),A
        INC	HL
        LD	A,0FFH
        LD	(HL),A
        INC	HL
        LD	(HL),A
        INC	HL
        LD	BC,SECLEN-3
        CALL	C7AE3                   ; clear sector buffer (partly)
        PUSH	DE
        CALL	C7CB4		        ; write sector
        POP	DE
        JP	C,J7A0A                 ; error, recalibrate and quit with error
J7AAB:	DEC	E
        JR	Z,J7AC1
        LD	HL,($SECBUF)
        LD	BC,SECLEN
        CALL	C7AE3                   ; clear sector buffer (partly)
        PUSH	DE
        CALL	C7CB4		        ; write sector
        POP	DE
        JP	C,J7A0A                 ; error, recalibrate and quit with error
        JR	J7AAB                   ; next FAT sector

J7AC1:	DEC	D
        JR	NZ,J7A8C                ; next FAT
        LD	D,(IY+7)                ; first directory sector
        LD	A,(IY+6)                ; first data sector
        SUB	D
        LD	D,A                     ; number of directory sectors
J7ACC:	LD	HL,($SECBUF)
        LD	BC,SECLEN
        CALL	C7AE3                   ; clear sector buffer (partly)
        PUSH	DE
        CALL	C7CB4		        ; write sector
        POP	DE
        JP	C,J7A0A                 ; error, recalibrate and quit with error
        DEC	D
        JR	NZ,J7ACC                ; next directory sector
        JP	J749B                   ; DSKIO finish

;	  Subroutine clear sector buffer (partly)
;	     Inputs  ________________________
;	     Outputs ________________________

C7AE3:	LD	(HL),0
        INC	HL
        DEC	BC
        LD	A,C
        OR	B
        JR	NZ,C7AE3
        RET

;	  Subroutine format track
;	     Inputs  C = side, D = track, E = start record
;	     Outputs ________________________

C7AEC:	CALL	C7834		        ; wait for FDC
        LD	HL,I7CAC
        PUSH	HL
        CALL	DISINT
        DI
        LD	A,0F0H		        ; format track command
        LD	(D7FF8),A
        EX	(SP),IY
        EX	(SP),IY
        LD	B,80                    ; GAP0
        LD	H,4EH
J7B04:	LD	A,(D7FFF)
        ADD	A,A
        RET	P
        JP	C,J7B04
        LD	A,H
        LD	(D7FFB),A
        DJNZ	J7B04
        LD	B,12                    ; pre-amble
        LD	H,00H
J7B16:	LD	A,(D7FFF)
        ADD	A,A
        RET	P
        JP	C,J7B16
        LD	A,H
        LD	(D7FFB),A
        DJNZ	J7B16
        LD	B,3
        LD	H,0F6H                  ; special index marker
J7B28:	LD	A,(D7FFF)
        ADD	A,A
        RET	P
        JP	C,J7B28
        LD	A,H
        LD	(D7FFB),A
        DJNZ	J7B28
        INC	B
        LD	H,0FCH                  ; index address mark
J7B39:	LD	A,(D7FFF)
        ADD	A,A
        RET	P
        JP	C,J7B39
        LD	A,H
        LD	(D7FFB),A
        DJNZ	J7B39
        LD	B,26                    ; GAP1
        LD	H,4EH
J7B4B:	LD	A,(D7FFF)
        ADD	A,A
        RET	P
        JP	C,J7B4B
        LD	A,H
        LD	(D7FFB),A
        DJNZ	J7B4B
J7B59:	LD	B,12                    ; pre-amble
        LD	H,00H
J7B5D:	LD	A,(D7FFF)
        ADD	A,A
        RET	P
        JP	C,J7B5D
        LD	A,H
        LD	(D7FFB),A
        DJNZ	J7B5D
        LD	B,3
        LD	H,0F5H                  ; special data marker
J7B6F:	LD	A,(D7FFF)
        ADD	A,A
        RET	P
        JP	C,J7B6F
        LD	A,H
        LD	(D7FFB),A
        DJNZ	J7B6F
        INC	B
        LD	H,0FEH                  ; id address mark
J7B80:	LD	A,(D7FFF)
        ADD	A,A
        RET	P
        JP	C,J7B80
        LD	A,H
        LD	(D7FFB),A
        DJNZ	J7B80
        INC	B
        LD	H,D                     ; track
J7B90:	LD	A,(D7FFF)
        ADD	A,A
        RET	P
        JP	C,J7B90
        LD	A,H
        LD	(D7FFB),A
        DJNZ	J7B90
        INC	B
        LD	H,C                     ; side
J7BA0:	LD	A,(D7FFF)
        ADD	A,A
        RET	P
        JP	C,J7BA0
        LD	A,H
        LD	(D7FFB),A
        DJNZ	J7BA0
        INC	B
        LD	H,E                     ; record
J7BB0:	LD	A,(D7FFF)
        ADD	A,A
        RET	P
        JP	C,J7BB0
        LD	A,H
        LD	(D7FFB),A
        DJNZ	J7BB0
        INC	B
        LD	H,02H                   ; record length = 512
J7BC1:	LD	A,(D7FFF)
        ADD	A,A
        RET	P
        JP	C,J7BC1
        LD	A,H
        LD	(D7FFB),A
        DJNZ	J7BC1
        INC	B
        LD	H,0F7H                  ; CRC16
J7BD2:	LD	A,(D7FFF)
        ADD	A,A
        RET	P
        JP	C,J7BD2
        LD	A,H
        LD	(D7FFB),A
        DJNZ	J7BD2
        LD	B,24                    ; GAP2
        LD	H,4EH
J7BE4:	LD	A,(D7FFF)
        ADD	A,A
        RET	P
        JP	C,J7BE4
        LD	A,H
        LD	(D7FFB),A
        DJNZ	J7BE4
        LD	B,12                    ; pre-amble
        LD	H,00H
J7BF6:	LD	A,(D7FFF)
        ADD	A,A
        RET	P
        JP	C,J7BF6
        LD	A,H
        LD	(D7FFB),A
        DJNZ	J7BF6
        LD	B,3
        LD	H,0F5H                  ; special data marker
J7C08:	LD	A,(D7FFF)
        ADD	A,A
        RET	P
        JP	C,J7C08
        LD	A,H
        LD	(D7FFB),A
        DJNZ	J7C08
        INC	B
        LD	H,0FBH                  ; data address mark
J7C19:	LD	A,(D7FFF)
        ADD	A,A
        RET	P
        JP	C,J7C19
        LD	A,H
        LD	(D7FFB),A
        DJNZ	J7C19
        LD	H,0E5H                  ; data filer byte
J7C29:	LD	A,(D7FFF)
        ADD	A,A
        RET	P
        JP	C,J7C29
        LD	A,H
        LD	(D7FFB),A
        DJNZ	J7C29
J7C37:	LD	A,(D7FFF)
        ADD	A,A
        RET	P
        JP	C,J7C37
        LD	A,H
        LD	(D7FFB),A
        DJNZ	J7C37
        INC	B
        LD	H,0F7H                  ; CRC16
J7C48:	LD	A,(D7FFF)
        ADD	A,A
        RET	P
        JP	C,J7C48
        LD	A,H
        LD	(D7FFB),A
        DJNZ	J7C48
        LD	B,54                    ; GAP3
        LD	H,4EH
J7C5A:	LD	A,(D7FFF)
        ADD	A,A
        RET	P
        JP	C,J7C5A
        LD	A,H
        LD	(D7FFB),A
        DJNZ	J7C5A
        INC	E                       ; update record
        LD	A,E
        CP	9+1
        JP	C,J7B59                 ; next sector
        LD	B,0                     ; GAP4
        LD	H,4EH
J7C73:	LD	A,(D7FFF)
        ADD	A,A
        RET	P
        JP	C,J7C73
        LD	A,H
        LD	(D7FFB),A
        DJNZ	J7C73
J7C81:	LD	A,(D7FFF)
        ADD	A,A
        RET	P
        JP	C,J7C81
        LD	A,H
        LD	(D7FFB),A
        DJNZ	J7C81
J7C8F:	LD	A,(D7FFF)
        ADD	A,A
        RET	P
        JP	C,J7C8F
        LD	A,H
        LD	(D7FFB),A
        DJNZ	J7C8F
J7C9D:	LD	A,(D7FFF)
        ADD	A,A
        RET	P
        JP	C,J7C9D
        LD	A,H
        LD	(D7FFB),A
        DJNZ	J7C9D
        POP	HL
I7CAC:	EI
        CALL	ENAINT
        LD	A,(D7FF8)
        RET

;	  Subroutine write sector
;	     Inputs  ________________________
;	     Outputs ________________________

C7CB4:	LD	HL,($SECBUF)
        LD	D,0
        LD	E,(IY+0)                ; sector number
        LD	B,1                     ; 1 sector
        LD	C,(IY+5)                ; media byte
        LD	A,(IY+1)                ; driveid
        SCF                             ; write
        CALL	DSKIO		        ; DSKIO
        INC	(IY+0)                  ; update sector number
        RET

;	  Subroutine OEMSTA
;	     Inputs  ________________________
;	     Outputs ________________________

OEMSTA:	PUSH	HL                      ; store BASIC pointer
        LD	HL,PROCNM
        LD	DE,I7D6B	        ; VICTOR
J7CD3:	LD	A,(DE)
        CP	0                       ; end of statement name ?
        JR	Z,J7CE3                 ; yep execute VICTOR statement
        LD	B,(HL)
        CP	B                       ; still ok ?
        JR	NZ,J7CE0                ; nope,
        INC	DE
        INC	HL
        JR	J7CD3

J7CE0:	JP	J7F40                   ; try next OEMSTA

;	  Subroutine VICTOR statement
;	     Inputs  ________________________
;	     Outputs ________________________

J7CE3:	CALL	CLS		        ; clear screen
        LD	HL,I7D05
                                        ; print victor message and wait, then quit

;	  Subroutine print message,wait and return statement handled
;	     Inputs  ________________________
;	     Outputs ________________________

J7CE9:	LD	A,(HL)
        OR	A
        JR	Z,J7CF3
        CALL	CHPUT
        INC	HL
        JR	J7CE9

J7CF3:	LD	B,10
J7CF5:	LD	HL,0
J7CF8:	DEC	HL
        LD	A,L
        OR	H
        JR	NZ,J7CF8
        DJNZ	J7CF5
        CALL	CLS		        ; clear screen
        XOR	A                       ; statement handled
        POP	HL                      ; restore BASIC pointer
        RET

I7D05:	DEFB	13,10
        DEFB	13,10
        DEFB	13,10
        DEFB	13,10
        DEFB	13,10
        DEFB	13,10
        DEFB	13,10
        DEFB	13,10
        DEFB	"   MSX disk basic system",13,10
        DEFB	13,10
        DEFB	"       presented by   ",13,10
        DEFB	13,10
        DEFB	"Victor company of Japan, LTD.",13,10
        DEFB	0

I7D6B:	DEFB	"VICTOR"
        DEFB	0

        DEFB	"This driver soft is made for 3.5 inches"
        DEFB	"floppy disk drive with side detector."
        DEFB	"  Formatter automatically selects side."
        DEFB	"                    May 21st,1984"
        DEFB	"                           by K.Totsuka"
        DEFB	"              Victor Company of Japan, Limited "

I7E5C:

        .PHASE	0C000H

        DEFB	0EBH
        DEFB	0FEH
        DEFB	090H
        DEFB	"JVC  KT2"
        DEFW	512
        DEFB	2
        DEFW	1
        DEFB	2
        DEFW	112
        DEFW	720
        DEFB	0F8H
        DEFW	2
        DEFW	9
        DEFW	1
        DEFW	0

        RET	NC
        LD	(CC058+1),DE
        LD	(DC0C4),A
        LD	(HL),LOW IC056
        INC	HL
        LD	(HL),HIGH IC056
J7E87:	LD	SP,KBUF+256
        LD	DE,IC09F
        LD	C,0FH
        CALL	BDOS
        INC	A
        JP	Z,JC063
        LD	DE,00100H
        LD	C,1AH
        CALL	BDOS
        LD	HL,1
        LD	(IC09F+14),HL
        LD	HL,04000H-00100H
        LD	DE,IC09F
        LD	C,27H
        CALL	BDOS
        JP	00100H

IC056:	DEFW	CC058

CC058:	CALL	0
        LD	A,C
        AND	0FEH
J7EBA:	CP	02H
        JP	NZ,JC06A
JC063:	LD	A,(DC0C4)
        AND	A
        JP	Z,A4022
JC06A:	LD	DE,IC079
        LD	C,09H
        CALL	BDOS
        LD	C,07H
        CALL	BDOS
        JR	J7E87

IC079:	DEFB	"Boot error",13,10
        DEFB	"Press any key for retry",13,10
        DEFB	"$"

IC09F:	DEFB	0
        DEFB	"MSXDOS  "
        DEFB	"SYS"
        DEFW	0
        DEFW	0
        DEFB	0,0,0,0
        DEFW	0
        DEFW	0
        DEFB	0
        DEFB	0
        DEFW	0
        DEFW	0
        DEFW	0
        DEFB	0
        DEFB	0,0,0,0

DC0C4:	DEFB	0

        .DEPHASE

S7E5C   EQU     $-I7E5C

        DEFS	07F40H-$,0FFH

;	  Subroutine OEMSTA2
;	     Inputs  ________________________
;	     Outputs ________________________

J7F40:	LD	HL,PROCNM
        LD	DE,I7F5E	        ; GETVER
J7F46:	LD	A,(DE)
        OR	A                       ; end of statement name ?
        JR	Z,J7F52                 ; yep, execute GETVER
        CP	(HL)                    ; still ok ?
        JP	NZ,J7FD8                ; nope, quit with statement not recognized
        INC	HL
        INC	DE
        JR	J7F46

;	  Subroutine GETVER statement
;	     Inputs  ________________________
;	     Outputs ________________________

J7F52:	CALL	CLS		        ; clear screen
        LD	HL,I7F68
        JP	J7CE9                   ; print message,wait and return statement handled

?7F5B:	DEFS	3,0FFH

I7F5E:	DEFB	"GETVER"
        DEFB	0

        DEFS	3,0FFH

I7F68:	DEFB	13,10
        DEFB	10
        DEFB	10
        DEFB	10
        DEFB	10
        DEFB	10
        DEFB	10
        DEFB	10
        DEFB	"   MSX disk basic system",13,10
        DEFB	10
        DEFB	"   1985/06/20 version.",13,10
        DEFB	10
        DEFB	"presented by JVC",13,10
        DEFB	10
        DEFB	"           (MAEBASHI) Japan.",13,10
        DEFB	0

        DEFS	1,0FFH

J7FD8:	POP	HL                      ; restore BASIC pointer
        SCF                             ; statement not handled
        RET


        DEFS	07FE0H-$,0FFH


J7FE0:	DEFB	"Designed by S. Isozaki"
        DEFB	0

        END

