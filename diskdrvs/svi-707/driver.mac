; Diskdriver Spectravideo SVI-707 (external floppydisk controller)
; FDC	WD2793

; Source re-created by Z80DIS 2.2
; Z80DIS was written by Kenneth Gielow, Palo Alto, CA

; Code Copyrighted by Spectravideo and maybe others
; Source comments by Arjen Zeilemaker

; Sourcecode supplied for STUDY ONLY
; Recreation NOT permitted without authorisation of the copyrightholders

SECLEN  EQU     512
MYSIZE  EQU     8

; offset	function
; 0		motor off timer
; 1		disk change drive 0 timer
; 2		disk change drive 1 timer
; 3		last used drive
; 4		current cylinder drive 0
; 5		current cylinder drive 1
; 6		last used drive (phantom)
; 7		number of physical drives

D7FB8   EQU     07FB8H                  ; WD2793
D7FB9   EQU     07FB9H                  ; WD2793
D7FBA   EQU     07FBAH                  ; WD2793
D7FBB   EQU     07FBBH                  ; WD2793
D7FBC   EQU     07FBCH                  ; IRQ,DRQ

D.BFB8  EQU     D7FB8+04000H
D.BFBA  EQU     D7FBA+04000H
D.BFBB  EQU     D7FBB+04000H
D.BFBC  EQU     D7FBC+04000H

BASENT  EQU     4022H
BDOS    EQU     0F37DH


I$7405:

; Only supports 5.25 single sided media
; DEFDPB should point to the largest media, which should be 0FDH instead of 0FCH

DEFDPB  EQU     I$7405-1

        DB	0FCh
        DW	512
        DB	00Fh
        DB	004h
        DB	000h
        DB	001h
        DW	1
        DB	2
        DB	64
        DW	9
        DW	352
        DB	2
        DW	5

        DB	0FDh
        DW	512
        DB	00Fh
        DB	004h
        DB	001h
        DB	002h
        DW	1
        DB	2
        DB	112
        DW	12
        DW	355
        DB	2
        DW	5

        DB	0FEh
        DW	512
        DB	00Fh
        DB	004h
        DB	000h
        DB	001h
        DW	1
        DB	2
        DB	64
        DW	7
        DW	314
        DB	1
        DW	3

        DB	0FFh
        DW	512
        DB	00Fh
        DB	004h
        DB	001h
        DB	002h
        DW	1
        DB	2
        DB	112
        DW	10
        DW	316
        DB	1
        DW	3

;        Subroutine DSKIO
;           Inputs  ________________________
;           Outputs ________________________

DSKIO:
C$744D: EI
        PUSH    AF
        JP      NC,J$7545               ; DSKIO read

; DSKIO write

        CALL    C$747E                  ; write sectors

; DSKIO finish

J$7455: POP     DE
        PUSH    AF
        LD      C,2*60                  ; assume ok, disk change timer = 2 seconds (note this assumes 60 Hz)
        JR      NC,J$745D               ; ok
        LD      C,0                     ; disk change timer = 0 seconds
J$745D: LD      A,0D0H
        LD      (D7FB8),A               ; terminate operation
        EX      (SP),HL
        EX      (SP),HL
        EX      (SP),HL
        EX      (SP),HL
        LD      A,(D7FBB)               ; reset pending DRQ
        LD      A,(D7FB8)               ; reset pending IRQ
        LD      (IX+0),4*60             ; motor off timer = 4 seconds (note this assumes 60 Hz)
        LD      A,D
        AND     A                       ; physical drive 0 ?
        JR      NZ,J$7479               ; nope, set disk change timer drive 1
        LD      (IX+1),C                ; set disk change timer drive 0
        POP     AF
        RET

J$7479: LD      (IX+2),C
        POP     AF
        RET

;        Subroutine write sectors
;           Inputs  ________________________
;           Outputs ________________________

C$747E: CALL    C.7604                  ; prepare for disk operation
        RET     C                       ; error, quit
        LD      A,H
        AND     A                       ; transfer from page 2 or 3 ?
        JP      M,J.74AE                ; yep, direct transfer
        CALL    C$7C53                  ; install relocatable write sectors routine in $SECBUF
        CALL    C.7CCA                  ; execute routine in $SECBUF
        RET     C                       ; error, quit with error
        INC     B
        DEC     B                       ; sectors left ?
        RET     Z                       ; nope, quit
        LD      A,H
        AND     A                       ; transfer from page 2 or 3 ?
        JP      M,J.74AE                ; yep, direct transfer
        PUSH    HL
        PUSH    DE
        PUSH    BC
        LD      DE,($SECBUF)
        PUSH    DE
        LD      BC,SECLEN
        CALL    XFER
        POP     HL
        POP     BC
        POP     DE
        CALL    C.74BA                  ; write sector
        POP     HL
        JP      J$74B1

J.74AE: CALL    C.74BA                  ; write sector
J$74B1: RET     C                       ; error, quit with error
        DEC     B                       ; update number of sectors
        RET     Z                       ; done, quit
        CALL    C.76B7                  ; prepare for next sector
        JP      J.74AE                  ; next sector

;        Subroutine write sector
;           Inputs  ________________________
;           Outputs ________________________

C.74BA: LD      E,15H
J$74BC: CALL    C.7707                  ; wait for FDC
        LD      A,0A0H
        BIT     6,D
        JR      Z,J.74CD
        OR      02H
        BIT     2,D
        JR      Z,J.74CD
        OR      08H
J.74CD: PUSH    HL
        PUSH    DE
        PUSH    BC
        LD      DE,I$74ED
        PUSH    DE
        CALL    DISINT
        DI
        LD      (D7FB8),A
        LD      BC,D7FBC
        LD      DE,D7FBB
J.74E1: LD      A,(BC)
        ADD     A,A
        RET     C
        JP      M,J.74E1
        LD      A,(HL)
        LD      (DE),A
        INC     HL
        JP      J.74E1

I$74ED: POP     BC
        POP     DE
        POP     HL
        EI
        CALL    ENAINT
        LD      A,(D7FB8)
        AND     0FCH
        RET     Z
        JP      M,J$753E
        BIT     6,A
        JR      NZ,J$751D
        PUSH    AF
        CALL    C.76F4                  ; reseek
        POP     AF
        DEC     E
        JR      NZ,J$74BC
        SCF
        LD      E,A
        BIT     5,E
        LD      A,10
        RET     NZ
        BIT     4,E
        LD      A,8
        RET     NZ
        BIT     3,E
        LD      A,4
        RET     NZ
        LD      A,12
        RET

J$751D: LD      A,0D0H
        LD      (D7FB8),A               ; terminate operation
        EX      (SP),HL
        EX      (SP),HL
        LD      A,80H
        LD      (D7FB8),A
        EX      (SP),HL
        EX      (SP),HL
        LD      HL,D7FBC
        LD      DE,0
J$7531: LD      A,(HL)
        ADD     A,A
        JR      C,J.7542
        JP      P,J.7542
        DEC     DE
        LD      A,E
        OR      D
        JP      NZ,J$7531
J$753E: LD      A,2
        SCF
        RET

J.7542: XOR     A
        SCF
        RET

; DSKIO read

J$7545: CALL    C$754B                  ; read sectors
        JP      J$7455                  ; DSKIO finish

;        Subroutine read sectors
;           Inputs  ________________________
;           Outputs ________________________

C$754B: CALL    C.7604                  ; prepare for disk operation
        RET     C
        LD      A,H
        AND     A
        JP      M,J.7580
        CALL    C$7C3F                  ; install relocatable read sectors routine in $SECBUF
        CALL    C.7CCA                  ; execute routine in $SECBUF
        RET     C
        INC     B
        DEC     B
        RET     Z
        LD      A,H
        AND     A
        JP      M,J.7580
        PUSH    HL
        LD      HL,($SECBUF)
        CALL    C.758C                  ; read sector
        POP     HL
        RET     C                       ; error, quit
        PUSH    HL
        PUSH    DE
        PUSH    BC
        EX      DE,HL
        LD      HL,($SECBUF)
        LD      BC,SECLEN
        CALL    XFER
        POP     BC
        POP     DE
        POP     HL
        AND     A
        JP      J$7584

J.7580: CALL    C.758C                  ; read sector
        RET     C
J$7584: DEC     B
        RET     Z
        CALL    C.76B7                  ; prepare for next sector
        JP      J.7580

;        Subroutine read sector
;           Inputs  ________________________
;           Outputs ________________________

C.758C: LD      E,21
J$758E: CALL    C.7707                  ; wait for FDC
        LD      A,80H
        BIT     6,D
        JR      Z,J.759F
        OR      02H
        BIT     2,D
        JR      Z,J.759F
        OR      08H
J.759F: PUSH    HL
        PUSH    DE
        PUSH    BC
        LD      BC,D7FBC
        LD      DE,I$75D9
        PUSH    DE
        CALL    DISINT
        DI
        LD      (D7FB8),A
        LD      DE,0
J.75B3: LD      A,(BC)
        ADD     A,A
        JP      P,J$75C7
        RET     C
        DEC     E
        JP      NZ,J.75B3
        DEC     D
        JP      NZ,J.75B3
        POP     BC
        POP     BC
        POP     DE
        POP     HL
        JR      J.7600

J$75C7: LD      DE,D7FBB
        JP      J$75D3

J.75CD: LD      A,(BC)
        ADD     A,A
        RET     C
        JP      M,J.75CD
J$75D3: LD      A,(DE)
        LD      (HL),A
        INC     HL
        JP      J.75CD

I$75D9: POP     BC
        POP     DE
        POP     HL
        EI
        CALL    ENAINT
        LD      A,(D7FB8)
        AND     9CH
        RET     Z
        JP      M,J.7600
        PUSH    AF
        CALL    C.76F4                   ; reseek
        POP     AF
        DEC     E
        JR      NZ,J$758E
        SCF
        LD      E,A
        BIT     4,E
        LD      A,8
        RET     NZ
        BIT     3,E
        LD      A,4
        RET     NZ
        LD      A,12
        RET

J.7600: LD      A,2
        SCF
        RET

;        Subroutine prepare for disk operation
;           Inputs  ________________________
;           Outputs ________________________

C.7604: PUSH    AF
        PUSH    BC
        PUSH    HL
        CALL    GETWRK
        POP     HL
        POP     BC
        POP     AF
        CP      02H
        JR      C,J$7615
J$7611: LD      A,12
        SCF
        RET

J$7615: PUSH    AF
        LD      A,C
        CP      0FCH
        JR      NC,J$761E
        POP     AF
        JR      J$7611

J$761E: EX      (SP),HL
        PUSH    HL
        PUSH    BC
        CALL    C.7707                  ; wait for FDC
        BIT     1,C
        LD      C,E
        LD      B,D
        LD      DE,8
        JR      NZ,J$762E
        INC     DE
J$762E: CALL    DIV16                   ; DIV16
        LD      A,L
        INC     A
        LD      (D7FBA),A               ; sector
        LD      L,C
        POP     BC
        POP     AF
        LD      H,A
        LD      A,(IX+7)
        DEC     A
        JR      Z,J$7641
        LD      A,H
J$7641: ADD     A,09H                   ; drive 0 -> 1001, drive 1 -> 1010
        BIT     0,C
        JR      Z,J.764D
        SRL     L
        JR      NC,J.764D
        OR      04H                     ; side 1
J.764D: LD      D,A
        LD      A,C
        RRCA
        RRCA
        AND     0C0H
        OR      D
        LD      D,A
        DI
        LD      (D7FBC),A               ; select drive, side, motor on
        LD      A,(IX+0)
        AND     A                       ; motor off timer finished ?
        LD      (IX+0),0FFH             ; motor off timer disabled
        EI
        JR      NZ,J$766E               ; nope, skip motor spin up delay
        PUSH    HL
        LD      HL,0
J$7668: DEC     HL
        LD      A,L
        OR      H
        JR      NZ,J$7668
        POP     HL
J$766E: LD      C,L
        LD      A,(IX+7)
        DEC     A
        JR      Z,J$769A
        LD      A,(IX+3)
        CP      H
        JR      Z,J.76AE
        XOR     01H
        LD      (IX+3),A
        LD      A,(D7FB9)
        JR      Z,J$768D
        LD      (IX+4),A
        LD      A,(IX+5)
        JR      J$7693

J$768D: LD      (IX+5),A
        LD      A,(IX+4)
J$7693: LD      (D7FB9),A
        EX      (SP),HL
        EX      (SP),HL
        JR      J$76B1

J$769A: LD      A,H
        CP      (IX+6)
        LD      (IX+6),A
        JR      Z,J.76AE
        PUSH    IX
        PUSH    DE
        PUSH    BC
        CALL    PROMPT
        POP     BC
        POP     DE
        POP     IX
J.76AE: LD      A,(D7FB9)
J$76B1: CP      C                       ; already on the request cylinder ?
        CALL    NZ,C$76FA               ; nope, seek to cylinder
        POP     HL
        RET

;        Subroutine prepare for next sector
;           Inputs  ________________________
;           Outputs ________________________

C.76B7: CALL    C.7707                  ; wait for FDC
        INC     H
        INC     H
        LD      A,(D7FBA)
        INC     A
        LD      (D7FBA),A
        BIT     7,D
        JR      NZ,J$76CA
        CP      9+1
        RET     C
J$76CA: CP      8+1
        RET     C
        LD      A,1
        LD      (D7FBA),A
        BIT     6,D
        JR      Z,J.76E1
        BIT     2,D                     ; side 1 ?
        JR      NZ,J.76E1               ; yep, side 0 on next track
        SET     2,D                     ; side 1 on same track
        LD      A,D
        LD      (D7FBC),A
        RET

J.76E1: RES     2,D                     ; side 0
        LD      A,D
        LD      (D7FBC),A
        INC     C
        CALL    C.7707                  ; wait for FDC
        LD      A,54H
        LD      (D7FB8),A
        EX      (SP),HL
        EX      (SP),HL
        JR      C.7707                  ; wait for FDC

;        Subroutine reseek
;           Inputs  ________________________
;           Outputs ________________________

C.76F4: BIT     0,E
        RET     NZ
        CALL    C.770E                  ; wait for FDC, seek to cylinder 0

;        Subroutine seek to cylinder
;           Inputs  ________________________
;           Outputs ________________________

C$76FA: LD      A,C
        LD      (D7FBB),A
        EX      (SP),HL
        EX      (SP),HL
        LD      A,14H                   ; seek to cylinder
J$7702: LD      (D7FB8),A
        EX      (SP),HL
        EX      (SP),HL

;        Subroutine __________________________
;           Inputs  ________________________
;           Outputs ________________________

C.7707: LD      A,(D7FB8)
        RRA
        JR      C,C.7707
        RET

;        Subroutine wait for FDC, seek to cylinder 0
;           Inputs  ________________________
;           Outputs ________________________

C.770E: CALL    C.7707                  ; wait for FDC
        LD      A,00H                   ; seek to cylinder 0
        JR      J$7702

INIHRD:
?.7715: LD      A,0D0H
        LD      (D7FB8),A               ; terminate operation
        EX      (SP),HL
        EX      (SP),HL
        LD      A,01H                   ; 0001, select drive 0, side 0, motor off
        CALL    C.772B                  ; initialize drive
        LD      A,02H                   ; 0010, select drive 1, side 0, motor off
        CALL    C.772B                  ; initialize drive

MTOFF:
        XOR     A
        LD      (D7FBC),A               ; select no drive, side 0, motor off
        RET

;        Subroutine initialize drive
;           Inputs  ________________________
;           Outputs ________________________

C.772B: LD      (D7FBC),A
        CALL    C.7707                  ; wait for FDC
        LD      A,00H
        LD      (D7FB8),A               ; seek to cylinder 0
        EX      (SP),HL
        EX      (SP),HL
        LD      HL,0
J$773B: LD      A,(D7FB8)
        RRA
        RET     NC
        DEC     HL
        LD      A,L
        OR      H
        JR      NZ,J$773B
        RET

DRIVES:
?.7746: PUSH    BC
        PUSH    AF
        CALL    GETWRK
        LD      A,02H
        LD      (D7FBC),A               ; select drive 1, side 0, motor off
        CALL    C.7707                  ; wait for FDC
        LD      A,00H
        LD      (D7FB8),A               ; seek to cylinder 0
        EX      (SP),HL
        EX      (SP),HL
        LD      HL,0
J$775D: LD      A,(D7FB8)
        RRA
        JR      NC,J$776A
        DEC     HL
        LD      A,L
        OR      H
        JR      NZ,J$775D
        INC     L
        DEFB    0CAH
J$776A: LD      L,2
        LD      (IX+7),L
        XOR     A
        LD      (D7FBC),A               ; select no drive, side 0, motor off
        POP     AF
        JR      Z,J$7778
        LD      L,2
J$7778: POP     BC
        RET

INIENV:
?.777A: CALL    GETWRK
        XOR     A
        LD      B,MYSIZE-1
J$7780: LD      (HL),A
        INC     HL
        DJNZ    J$7780
        LD      HL,I$778A
        JP      SETINT

I$778A: PUSH    AF                      ; store vdp status register
        CALL    GETWRK
        LD      A,(HL)
        AND     A                       ; motor off timer finish ?
        JR      Z,J.779D                ; yep, skip
        CP      0FFH                    ; motor off timer disabled ?
        JR      Z,J.779D                ; yep, skip
        DEC     A
        LD      (HL),A                  ; update motor off timer
        JR      NZ,J.779D               ; motor off timer not finished, skip
        LD      (D7FBC),A               ; select no drive, side 0, motor off
J.779D: INC     HL
        LD      A,(HL)
        AND     A                       ; disk change timer drive 0 finished ?
        JR      Z,J$77A3                ; yep, skip
        DEC     (HL)                    ; update disk change timer drive 0
J$77A3: INC     HL
        LD      A,(HL)
        AND     A                       ; disk change timer drive 1 finished ?
        JR      Z,J$77A9                ; yep, skip
        DEC     (HL)                    ; update disk change timer drive 1
J$77A9: POP     AF                      ; restore vdp status register
        JP      PRVINT                  ; next timer interrupt handler

DSKCHG:
?.77AD: EI
        PUSH    HL
        PUSH    BC
        PUSH    AF
        CALL    GETWRK
        POP     AF
        POP     BC
        POP     HL
        AND     A
        LD      B,(IX+2)
        JR      NZ,J$77C0
        LD      B,(IX+1)
J$77C0: INC     B
        DEC     B
        LD      B,1
        RET     NZ
        PUSH    BC
        PUSH    HL
        LD      DE,1
        LD      HL,($SECBUF)
        CALL    C$744D
        JR      C,J.77E9
        LD      HL,($SECBUF)
        LD      B,(HL)
        POP     HL
        PUSH    BC
        CALL    C$77EC
        LD      A,12
        JR      C,J.77E9
        POP     AF
        POP     BC
        CP      C
        SCF
        CCF
        LD      B,0FFH
        RET     NZ
        INC     B
        RET

J.77E9: POP     DE
        POP     DE
        RET

;        Subroutine __________________________
;           Inputs  ________________________
;           Outputs ________________________

GETDPB:
C$77EC: EI
        EX      DE,HL
        INC     DE
        LD      A,B
        SUB     0FCH
        RET     C
        LD      L,A
        LD      H,00H
        ADD     HL,HL
        LD      C,L
        LD      B,H
        ADD     HL,HL
        ADD     HL,HL
        ADD     HL,HL
        ADD     HL,BC
        LD      BC,I$7405
        ADD     HL,BC
        LD      BC,18
        LDIR
        RET

CHOICE:
?.7807: LD      HL,I$780B
        RET

I$780B: DEFB    13,10
        DEFB    "1 - Single Side",13,10
        DEFB    "2 - Double Side",13,10
        DEFB    13,10
        DEFB    0

OEMSTA:
        SCF
        RET

DSKFMT:
?.7834: CALL    C$7840
        PUSH    AF
        LD      A,00H
        LD      (D7FBC),A               ; select no drive, side 0, motor off
        POP     AF
        EI
        RET

;        Subroutine __________________________
;           Inputs  ________________________
;           Outputs ________________________

C$7840: DI
        EX      AF,AF'
        LD      A,D
        CP      0+1                     ; drive 0 ?
        JR      NC,J$789C               ; nope, quit with bad parameter error
        PUSH    HL                      ; store start of format workspace
        LD      HL,12*SECLEN+356
        SBC     HL,BC                   ; format workspace big enough ?
        POP     HL                      ; restore start of format workspace
        JR      NC,J$78A0               ; nope, quit with insufficient memory error
        PUSH    HL                      ; store start of format workspace
        LD      A,0D0H
        LD      (D7FB8),A               ; terminate operation
        EX      (SP),HL
        EX      (SP),HL
        LD      A,09H
        LD      (D7FBC),A               ; select drive 0, side 0, motor on
        CALL    C.7707                  ; wait for FDC
        LD      A,00H
        LD      (D7FB8),A               ; seek to cylinder 0
J$7865: EX      (SP),HL
        EX      (SP),HL
J$7867: LD      HL,0
J$786A: LD      A,(D7FB8)
        RRA                             ; fdc ready ?
        JR      NC,J$7877               ; yep, continue
        DEC     HL                      ; update counter
        LD      A,H
        OR      L
        JR      NZ,J$786A               ; next poll
        JR      J.7897                  ; quit with not ready error

J$7877: LD      HL,0
J$787A: LD      A,(D7FB8)
J$787D: AND     02H                     ; at cylinder 0 ?
        JR      Z,J$7888                ; nope, continue
        DEC     HL                      ; update counter
        LD      A,H
        OR      L
        JR      NZ,J$787A               ; next poll
        JR      J.7897                  ; quit with not ready error

J$7888: LD      HL,0
J$788B: LD      A,(D7FB8)
        AND     02H                     ; at cylinder 0 ?
        JR      NZ,J$78A4               ; yep, continue
        DEC     HL                      ; update counter
        LD      A,H
        OR      L
        JR      NZ,J$788B               ; next poll
J.7897: SCF
        POP     HL
        LD      A,2
        RET

J$789C: SCF
        LD      A,12
        RET

J$78A0: SCF
        LD      A,14
        RET

J$78A4: POP     HL                      ; restore start of format workspace
        PUSH    IX                      ; store pointer to driver workspace
        PUSH    HL                      ; store start of format workspace
        EX      (SP),HL                 ; ??
        EX      (SP),IX                 ; IX = start of format workspace
        EX      (SP),HL                 ; HL = pointer to driver workspace
        POP     HL                      ; restore start of format workspace
        INC     HL
        INC     HL
        INC     HL
        INC     HL
        INC     HL
        INC     HL                      ; +6
        EX      AF,AF'
        LD      (IX+4),A                ; store choice code
        DEC     A                       ; choice code 1 (format single sided) ?
        LD      A,0FCH
        JR      Z,J$78BE                ; yep, 5.25", single sided, 40 cylinders, 9 sectors per cylinder
        LD      A,0FDH                  ; 5.25", double sided, 40 cylinders, 9 sectors per cylinder
J$78BE: LD      (IX+5),A                ; store media descriptor
        XOR     A
        LD      (IX+0),A                ; side = 0
        DEC     A
        LD      (IX+3),A                ; retries = -1
        LD      (IX+1),A                ; cylinder = -1
J$78CC: INC     (IX+1)                  ; update cylinder
J$78CF: INC     (IX+3)                  ; update retries
        CALL    C.79BC
        CALL    C.7A39
        CALL    C.7A82
        JR      NC,J$78EA               ; ok, continue
        LD      A,21
        CP      (IX+3)                  ; retries left ?
        JR      NZ,J$78CF               ; yep, try again
        LD      A,16
        SCF                             ; other error
        POP     IX                      ; clean up stack
        RET

J$78EA: LD      A,(IX+4)
        DEC     A                       ; choice code 1 (format single sided) ?
        JR      Z,J$791B                ; yep, skip side 1
        LD      A,0FFH
        LD      (IX+3),A                ; retries = -1
        LD      A,0DH                   ; 1101
        LD      (D7FBC),A               ; select drive 1, side 1, motor on
        INC     (IX+0)                  ; side 1
J$78FD: INC     (IX+3)                  ; update retries
        CALL    C.79BC
        CALL    C.7A39
        CALL    C.7A82
        JR      NC,J$7918               ; ok, continue
        LD      A,21
        CP      (IX+3)                  ; retries left ?
        JR      NZ,J$78FD               ; yep, try again
        LD      A,16
        SCF                             ; other error
        POP     IX                      ; clean up stack
        RET

J$7918: DEC     (IX+0)                  ; side 0
J$791B: LD      A,40-1
        CP      (IX+1)                  ; cylinders left ?
        JR      Z,J$7931                ; nope, continue
        CALL    C$7997
        LD      A,09H                   ; 1001
        LD      (D7FBC),A               ; select drive 0, side 0, motor on
        LD      A,0FFH
        LD      (IX+3),A                ; retries = -1
        JR      J$78CC                  ; next cylinder

J$7931: CALL    C.770E                  ; wait for FDC, seek to cylinder 0
        PUSH    HL
        EX      DE,HL
        POP     HL
        PUSH    HL
        INC     DE
        XOR     A
        LD      (HL),A
        LD      BC,9*SECLEN-1
        LD      A,(IX+4)
        DEC     A                       ; choice code 1 (format single sided) ?
        JR      Z,J$7947                ; yep,
        LD      BC,12*SECLEN-1
J$7947: LDIR                            ; clean workspace
        POP     HL
        PUSH    HL
        EX      DE,HL
        LD      HL,I$7B7A
        LD      BC,S7B7A-2              ; ??
        LDIR
        POP     HL                      ; copy bootsector content
        PUSH    HL
        LD      BC,SECLEN
        ADD     HL,BC
        LD      A,(IX+5)
        LD      (HL),A                  ; media descriptor
        INC     HL
        LD      A,0FFH
        LD      (HL),A
        INC     HL
        LD      (HL),A                  ; construct 1st FAT sector of 1st FAT
        LD      BC,2*SECLEN-2
        ADD     HL,BC
        LD      A,(IX+5)
        LD      (HL),A
        INC     HL
        LD      A,0FFH
        LD      (HL),A
        INC     HL
        LD      (HL),A                  ; construct 1st FAT sector of 2nd FAT
        LD      B,1+2*2+7
        LD      C,0FDH
        LD      A,(IX+4)
        DEC     A                       ; choice code 1 (format single sided) ?
        JR      NZ,J$798B               ; nope,
        POP     HL
        PUSH    HL
        EX      DE,HL
        LD      HL,I$7B5C
        LD      BC,S7B5C
        LDIR                            ; update bootsector BPB for single sided
        LD      B,1+2*2+4
        LD      C,0FCH
J$798B: XOR     A                       ; drive 0
        LD      DE,0                    ; sector 0
        POP     HL                      ; start of 
        SCF
        CALL    C$7AE8
        POP     IX
        RET

;        Subroutine __________________________
;           Inputs  ________________________
;           Outputs ________________________

C$7997: LD      A,54H
        PUSH    AF
        CALL    C.7707                  ; wait for FDC
        POP     AF
        LD      (D7FB8),A               ; seek to next cylinder
        CALL    C.79AE                  ; wait
J$79A4: LD      A,(D7FBC)
        ADD     A,A
        JR      NC,J$79A4
        CALL    C.7707                  ; wait for FDC
        RET

;        Subroutine __________________________
;           Inputs  ________________________
;           Outputs ________________________

C.79AE: EX      (SP),HL
        EX      (SP),HL
        EX      (SP),HL
        EX      (SP),HL
        RET

I$79B3: DEFB    1,6,2,7,3,8,4,9,5

;        Subroutine __________________________
;           Inputs  ________________________
;           Outputs ________________________

C.79BC: LD      C,01H
        LD      D,H
        LD      E,L
        LD      A,4EH
        LD      B,32H
        CALL    C.7A33
J$79C7: XOR     A
        LD      B,0CH
        CALL    C.7A33
        LD      A,0F5H
        LD      B,03H
        CALL    C.7A33
        LD      A,0FEH
        LD      (DE),A
        INC     DE
        LD      A,(IX+1)
        LD      (DE),A
        INC     DE
        LD      A,(IX+0)
        LD      (DE),A
        INC     DE
        PUSH    HL
        LD      HL,I$79B3-1
        LD      B,0
        ADD     HL,BC
        LD      A,(HL)
        POP     HL
        LD      (DE),A
        INC     DE
        LD      A,02H
        LD      (DE),A
        INC     DE
        LD      A,0F7H
        LD      (DE),A
        INC     DE
        LD      A,4EH
        LD      B,16H
        CALL    C.7A33
        XOR     A
        LD      B,0CH
        CALL    C.7A33
        LD      A,0F5H
        LD      B,03H
        CALL    C.7A33
        LD      A,0FBH
        LD      (DE),A
        INC     DE
        LD      A,0E5H
        LD      B,00H
        CALL    C.7A33
        CALL    C.7A33
        LD      A,0F7H
        LD      (DE),A
        INC     DE
        LD      A,4EH
        LD      B,20H
        CALL    C.7A33
        INC     C
        LD      A,C
        CP      0AH
        JR      NZ,J$79C7
        LD      A,4EH
        LD      B,00H
        CALL    C.7A33
        CALL    C.7A33
        RET

;        Subroutine __________________________
;           Inputs  ________________________
;           Outputs ________________________

C.7A33: LD      (DE),A
        INC     DE
        DEC     B
        JR      NZ,C.7A33
        RET

;        Subroutine __________________________
;           Inputs  ________________________
;           Outputs ________________________

C.7A39: PUSH    HL
        LD      DE,I$7A57
        PUSH    DE
        LD      BC,D7FBC
        LD      DE,D7FBB
        CALL    C.7707                  ; wait for FDC
        LD      A,0F4H
        LD      (D7FB8),A
J.7A4C: LD      A,(BC)
        ADD     A,A
        RET     C
        JP      M,J.7A4C
        LD      A,(HL)
        LD      (DE),A
        INC     HL
        JR      J.7A4C

I$7A57: POP     HL
        LD      A,(D7FB8)
        LD      E,A
        AND     0E4H
        RET     Z
        POP     BC
J$7A60: SCF
        POP     IX
        JP      P,J$7A69
        LD      A,02H
        RET

J$7A69: BIT     6,A
        JR      Z,J$7A70
        LD      A,00H
        RET

J$7A70: BIT     5,E
        LD      A,0AH
        RET     NZ
        BIT     4,E
        LD      A,08H
        RET     NZ
        BIT     3,E
        LD      A,04H
        RET     NZ
        LD      A,10H
        RET

;        Subroutine __________________________
;           Inputs  ________________________
;           Outputs ________________________

C.7A82: PUSH    HL
        XOR     A
J$7A84: PUSH    AF
        CALL    C.7707                  ; wait for FDC
        POP     AF
        INC     A
        LD      (D7FBA),A
        PUSH    AF
        CALL    C.7707                  ; wait for FDC
        LD      DE,I$7AAB
        PUSH    DE
        LD      A,80H
        LD      (D7FB8),A
        LD      BC,D7FBC
        LD      DE,D7FBB
J.7AA0: LD      A,(BC)
        ADD     A,A
        RET     C
        JP      M,J.7AA0
        LD      A,(DE)
        LD      (HL),A
        INC     HL
        JR      J.7AA0

I$7AAB: LD      A,(D7FB8)
        LD      E,A
        AND     0FCH
        JR      Z,J$7ACE
        POP     AF
        POP     HL
        SCF
        JP      P,J$7ABC
        LD      A,02H
        RET

J$7ABC: BIT     5,E
        LD      A,0AH
        RET     NZ
        BIT     4,E
        LD      A,08H
        RET     NZ
        BIT     3,E
        LD      A,04H
        RET     NZ
        LD      A,10H
        RET

J$7ACE: POP     AF
        CP      09H     ; 9 
        JR      C,J$7A84
        POP     HL
        PUSH    HL
        LD      BC,9*SECLEN
J$7AD8: LD      A,0E5H
        CP      (HL)
        JR      NZ,J$7AE5
        INC     HL
        DEC     BC
        LD      A,B
        OR      C
        JR      NZ,J$7AD8
        POP     HL
        RET

J$7AE5: SCF
        POP     HL
        RET

;        Subroutine __________________________
;           Inputs  ________________________
;           Outputs ________________________

C$7AE8: AND     A                       ; ??
        CALL    C$7AFD                  ; write sectors
        PUSH    AF
        LD      A,0D0H
        LD      (D7FB8),A               ; terminate operation
        CALL    C.79AE                  ; wait
        LD      A,(D7FBB)               ; reset DRQ
        LD      A,(D7FB8)               ; reset IRQ
        POP     AF
        RET

;        Subroutine __________________________
;           Inputs  ________________________
;           Outputs ________________________

C$7AFD: LD      A,09H                   ; drive 0, side 0, motor on
        LD      (D7FBC),A
        XOR     A
        LD      (IX+2),A                ; record = 0
        LD      B,9
J.7B08: PUSH    BC
        INC     (IX+2)                  ; update record
        CALL    C.7707                  ; wait for FDC
        LD      A,(IX+2)
        LD      (D7FBA),A
        CALL    C.7707                  ; wait for FDC
        LD      A,0A0H                  ; write sector
        LD      DE,I$7B33
        PUSH    DE
        LD      (D7FB8),A
        LD      BC,D7FBC
        LD      DE,D7FBB
J.7B27: LD      A,(BC)
        ADD     A,A                     ; IRQ ?
        RET     C                       ; yep, quit
        JP      M,J.7B27                ; no DRQ, wait
        LD      A,(HL)
        LD      (DE),A
        INC     HL
        JP      J.7B27

I$7B33: LD      A,(D7FB8)
        AND     0FCH
        POP     BC
        JP      NZ,J$7A60               ; error,
        LD      A,(IX+2)
        CP      9
        JR      Z,J$7B49
        DEC     B
        JR      NZ,J.7B08               ; next sector
J$7B46: SCF
        CCF                             ; no error
        RET

J$7B49: LD      A,(IX+4)
        DEC     A                       ; choice code 1 (format single sided) ?
        JR      Z,J$7B46                ; yep, quit without error
        LD      A,0DH                   ; 1101
        LD      (D7FBC),A               ; select drive 0, side 1, motor on
        LD      B,12-9                  ; rest of the sectors
        XOR     A
        LD      (IX+2),A                ; record = 0
        JR      J.7B08                  ; write sectors and quit

I$7B5C:
        .PHASE  0C000H

        DEFB	0EBH			; 00H, x86 JMP +0100H
        DEFB	0FEH
        DEFB	090H			; 02H, x86 NOP
	DEFB	"SVI-707S"		; 03H, OEM system name

					;      BPB (BIOS Parameter Block)
        DEFW	512			; 0BH, bytes per sector
        DEFB	1			; 0DH, sectors per cluster
        DEFW	1			; 0EH, reserved sectors (= 1st FAT sector)
        DEFB	2			; 10H, number of FATs
        DEFW	64			; 11H, number of (root) directory entries
        DEFW	360			; 13H, total number of sectors on disk
        DEFB	0FCH			; 15H, media descriptor byte
        DEFW	2			; 16H, sectors per FAT
        DEFW	9			; 18H, sectors per track
        DEFW	1			; 1AH, number of sides
        DEFW	0			; 1CH, number of hidden sectors

        .DEPHASE

S7B5C   EQU     $-I$7B5C

I$7B7A:
        .PHASE  0C000H

        DEFB	0EBH			; 00H, x86 JMP +0100H
        DEFB	0FEH
        DEFB	090H			; 02H, x86 NOP
	DEFB	"SVI-707D"		; 03H, OEM system name

					;      BPB (BIOS Parameter Block)
        DEFW	512			; 0BH, bytes per sector
        DEFB	2			; 0DH, sectors per cluster
        DEFW	1			; 0EH, reserved sectors (= 1st FAT sector)
        DEFB	2			; 10H, number of FATs
        DEFW	112			; 11H, number of (root) directory entries
        DEFW	720			; 13H, total number of sectors on disk
        DEFB	0FDH			; 15H, media descriptor byte
        DEFW	2			; 16H, sectors per FAT
        DEFW	9			; 18H, sectors per track
        DEFW	2			; 1AH, number of sides
        DEFW	0			; 1CH, number of hidden sectors

					;      MSX boot loader

C.C01E:	RET	NC
	LD	(C.C058+1),DE
	LD	(D.C0DA),A
	LD	(HL),LOW C.C056
	INC	HL
	LD	(HL),HIGH C.C056
J$C02B:	LD	SP,KBUF+256
	LD	DE,I.C0B5
	LD	C,0FH
	CALL	BDOS
	INC	A
	JP	Z,J$C063
	LD	DE,0100H
	LD	C,1AH
	CALL	BDOS
	LD	HL,1
	LD	(I.C0B5+14),HL
	LD	HL,4000H-0100H
	LD	DE,I.C0B5
	LD	C,27H
	CALL	BDOS
	JP	0100H

C.C056: DEFW    C.C058

C.C058:	CALL	0
	LD	A,C
	AND	0FEH
	CP	02H
	JP	NZ,J$C06A
J$C063:	LD	A,(D.C0DA)
	AND	A
	JP	Z,BASENT
J$C06A: LD	DE,I$C079
        LD	C,09H
        CALL	BDOS
        LD	C,07H
        CALL	BDOS
        JR	J$C02B

I$C079:	DEFB	"Boot error",13,10
        DEFB	"Press any key for retry",13,10
        DEFB	'$'

I.C0B5:	DEFB	0
        DEFB	"MSXDOS  "
        DEFB	"SYS"
        DEFW	0
        DEFW	0
        DEFB	0,0,0,0
        DEFW	0
        DEFW	0
        DEFB	0
        DEFB	0
        DEFW	0
        DEFW	0
        DEFW	0
        DEFB	0
        DEFB	0,0,0,0

D.C0DA:	DEFB	0

        .DEPHASE

S7B7A   EQU     $-I$7B7A

;        Subroutine install relocatable read sectors routine in $SECBUF
;           Inputs  ________________________
;           Outputs ________________________

C$7C3F: PUSH    HL
        PUSH    DE
        PUSH    BC
J$7C42: LD      HL,I$7CD0
        LD      DE,($SECBUF)
        LD      BC,S7CD0
        LDIR
        LD      HL,I$7CA6
        JR      J.7C65

;        Subroutine install relocatable write sectors routine in $SECBUF
;           Inputs  ________________________
;           Outputs ________________________

C$7C53: PUSH    HL
        PUSH    DE
        PUSH    BC
        LD      HL,I$7DF0
        LD      DE,($SECBUF)
        LD      BC,S7DF0
        LDIR
        LD      HL,I$7C86

J.7C65: LD      E,(HL)
        INC     HL
        LD      D,(HL)
        INC     HL
        LD      A,E
        OR      D
        JR      Z,J$7C82
        PUSH    HL
        LD      HL,($SECBUF)
        ADD     HL,DE
        INC     HL
        LD      C,(HL)
        INC     HL
        LD      B,(HL)
        EX      DE,HL
        LD      HL,($SECBUF)
        ADD     HL,BC
        EX      DE,HL
        LD      (HL),D
        DEC     HL
        LD      (HL),E
        POP     HL
        JR      J.7C65

J$7C82: POP     BC
        POP     DE
        POP     HL
        RET

; relocation table write sectors routine

I$7C86: DEFW    Y0006
        DEFW    Y0020
        DEFW    Y0025
        DEFW    Y0039
        DEFW    Y004D
        DEFW    Y0053
        DEFW    Y0067
        DEFW    Y006C
        DEFW    Y0074
        DEFW    Y00AA
        DEFW    Y00B0
        DEFW    Y00D6
        DEFW    Y0107
        DEFW    Y0116
        DEFW    Y012D
        DEFW    0

; relocation table read sectors routine

I$7CA6: DEFW    X0006
        DEFW    X0020
        DEFW    X0025
        DEFW    X003C
        DEFW    X004C
        DEFW    X0051
        DEFW    X0055
        DEFW    X0061
        DEFW    X0067
        DEFW    X006D
        DEFW    X0081
        DEFW    X0086
        DEFW    X008A
        DEFW    X00C2
        DEFW    X00F3
        DEFW    X0102
        DEFW    X0119
        DEFW    0

;        Subroutine execute routine in $SECBUF
;           Inputs  ________________________
;           Outputs ________________________

C.7CCA: PUSH    HL
        LD      HL,($SECBUF)
        EX      (SP),HL
        RET

;        Subroutine relocatable read sectors routine
;           Inputs  ________________________
;           Outputs ________________________

I$7CD0:
        .PHASE  0

        PUSH    HL
        PUSH    DE
        PUSH    BC
        CALL    GETSLT
X0006:  LD      (X00B5+1),A
        LD      H,HIGH 8000H
        CALL    ENASLT
        EI
        LD      A,(RAMAD1)
        LD      H,HIGH 4000H
        CALL    ENASLT
        EI
        POP     BC
        POP     DE
        POP     HL
X001B:  DEC     HL
        LD      A,H
        ADD     A,HIGH SECLEN
        INC     HL
X0020:  JP      M,X00A5
        LD      E,21
X0025:  CALL    X0112                   ; wait for FDC
        LD      A,80H
        BIT     6,D
        JR      Z,X0036
        OR      02H
        BIT     2,D
        JR      Z,X0036
        OR      08H
X0036:  PUSH    HL
        PUSH    DE
        PUSH    BC
        LD      BC,D.BFBC
X003C:  LD      DE,X0070
        PUSH    DE
        CALL    DISINT
        DI
        LD      (D.BFB8),A
        LD      DE,0
X004A:  LD      A,(BC)
        ADD     A,A
X004C:  JP      P,X005E
        RET     C
        DEC     E
X0051:  JP      NZ,X004A
        DEC     D
X0055:  JP      NZ,X004A
        POP     BC
        POP     BC
        POP     DE
        POP     HL
        JR      X00A2

X005E:  LD      DE,D.BFBB
X0061:  JP      X006A

X0064:  LD      A,(BC)
        ADD     A,A
        RET     C
X0067:  JP      M,X0064
X006A:  LD      A,(DE)
        LD      (HL),A
        INC     HL
X006D:  JP      X0064

X0070:  POP     BC
        POP     DE
        POP     HL
        EI
        CALL    ENAINT
        LD      A,(D.BFB8)
        AND     9CH
        JR      NZ,X0086
        DEC     B
        JR      Z,X00A5
X0081:  CALL    X00C2                   ; prepare for next sector
        JR      X001B

X0086:  JP      M,X00A2
        PUSH    AF
X008A:  CALL    X00FF                   ; reseek
        POP     AF
        DEC     E
        JR      NZ,X0025
        LD      E,A
        BIT     4,E
        LD      A,08H
        JR      NZ,X00A4
        BIT     3,E
        LD      A,04H
        JR      NZ,X00A4
        LD      A,0CH
        JR      X00A4

X00A2:  LD      A,02H
X00A4:  SCF
X00A5:  PUSH    HL
        PUSH    DE
        PUSH    BC
        PUSH    AF
        LD      A,(RAMAD2)
        LD      H,HIGH 8000H
        CALL    ENASLT
        CALL    $DOSON
        EI
X00B5:  LD      A,0
        LD      H,HIGH 4000H
        CALL    ENASLT
        EI
        POP     AF
        POP     BC
        POP     DE
        POP     HL
        RET

;        Subroutine prepare for next sector
;           Inputs  ________________________
;           Outputs ________________________

X00C2:  CALL    X0112                   ; wait for FDC
        INC     H
        INC     H
        LD      A,(D.BFBA)
        INC     A
        LD      (D.BFBA),A
        BIT     7,D
        JR      NZ,X00D5
        CP      9+1
        RET     C
X00D5:  CP      8+1
        RET     C
        LD      A,1
        LD      (D.BFBA),A
        BIT     6,D
        JR      Z,X00EC
        BIT     2,D
        JR      NZ,X00EC
        SET     2,D
        LD      A,D
        LD      (D.BFBC),A
        RET

X00EC:  RES     2,D
        LD      A,D
        LD      (D.BFBC),A
        INC     C
X00F3:  CALL    X0112                   ; wait for FDC
        LD      A,54H
        LD      (D.BFB8),A              ; seek to next cylinder
        EX      (SP),HL
        EX      (SP),HL
        JR      X0112                   ; wait for FDC and quit

;        Subroutine reseek
;           Inputs  ________________________
;           Outputs ________________________

X00FF:  BIT     0,E
        RET     NZ
X0102:  CALL    X0119                   ; seek to cylinder 0
        LD      A,C
        LD      (D.BFBB),A
        EX      (SP),HL
        EX      (SP),HL
        LD      A,14H                   ; seek to cylinder

;        Subroutine execute seek operation
;           Inputs  ________________________
;           Outputs ________________________

X010D:  LD      (D.BFB8),A
        EX      (SP),HL
        EX      (SP),HL

;        Subroutine wait for FDC
;           Inputs  ________________________
;           Outputs ________________________

X0112:  LD      A,(D.BFB8)
        RRA
        JR      C,X0112
        RET

;        Subroutine seek to cylinder 0
;           Inputs  ________________________
;           Outputs ________________________

X0119:  CALL    X0112                   ; wait for FDC and quit
        LD      A,00H                   ; seek to cylinder 0
        JR      X010D                   ; execute seek operation

        .DEPHASE

S7CD0   EQU     $-I$7CD0

;        Subroutine relocatable write sectors routine
;           Inputs  ________________________
;           Outputs ________________________

I$7DF0:
        .PHASE  0

        PUSH    HL
        PUSH    DE
        PUSH    BC
        CALL    GETSLT
Y0006:  LD      (Y00C9+1),A
        LD      H,HIGH 8000H
        CALL    ENASLT
        EI
        LD      A,(RAMAD1)
        LD      H,HIGH 4000H
        CALL    ENASLT
        EI
        POP     BC
        POP     DE
        POP     HL
Y001B:  DEC     HL
        LD      A,H
        ADD     A,HIGH SECLEN
        INC     HL
Y0020:  JP      M,Y00B9
        LD      E,21
Y0025:  CALL    Y0126                   ; wait for FDC
        LD      A,0A0H
        BIT     6,D
        JR      Z,Y0036
        OR      02H
        BIT     2,D
        JR      Z,Y0036
        OR      08H
Y0036:  PUSH    HL
        PUSH    DE
        PUSH    BC
Y0039:  LD      DE,Y0056
        PUSH    DE
        CALL    DISINT
        DI
        LD      (D.BFB8),A
        LD      BC,D.BFBC
        LD      DE,D.BFBB
Y004A:  LD      A,(BC)
        ADD     A,A
        RET     C
Y004D:  JP      M,Y004A
        LD      A,(HL)
        LD      (DE),A
        INC     HL
Y0053:  JP      Y004A

Y0056:  POP     BC
        POP     DE
        POP     HL
        EI
        CALL    ENAINT
        LD      A,(D.BFB8)
        AND     0FCH
        JR      NZ,Y006C
        DEC     B
        JR      Z,Y00B9
Y0067:  CALL    Y00D6                   ; prepare for next sector
        JR      Y001B

Y006C:  JP      M,Y00B3
        BIT     6,A
        JR      NZ,Y0092
        PUSH    AF
Y0074:  CALL    Y0113                   ; reseek
        POP     AF
        DEC     E
        JR      NZ,Y0025
        LD      E,A
        BIT     5,E
        LD      A,10
        JR      NZ,Y00B8
        BIT     4,E
        LD      A,8
        JR      NZ,Y00B8
        BIT     3,E
        LD      A,4
        JR      NZ,Y00B8
        LD      A,12
        JR      Y00B8

Y0092:  LD      A,0D0H
        LD      (D.BFB8),A              ; terminate operation
        EX      (SP),HL
        EX      (SP),HL
        LD      A,80H
        LD      (D.BFB8),A              ; read sector
        EX      (SP),HL
        EX      (SP),HL
        LD      HL,D.BFBC
        LD      DE,0
Y00A6:  LD      A,(HL)
        ADD     A,A
        JR      C,Y00B7
Y00AA:  JP      P,Y00B7
        DEC     DE
        LD      A,E
        OR      D
Y00B0:  JP      NZ,Y00A6
Y00B3:  LD      A,02H
        JR      Y00B8

Y00B7:  XOR     A
Y00B8:  SCF
Y00B9:  PUSH    HL
        PUSH    DE
        PUSH    BC
        PUSH    AF
        LD      A,(RAMAD2)
        LD      H,HIGH 8000H
        CALL    ENASLT
        CALL    $DOSON
        EI
Y00C9:  LD      A,0
        LD      H,HIGH 4000H
        CALL    ENASLT
        EI
        POP     AF
        POP     BC
        POP     DE
        POP     HL
        RET

;        Subroutine prepare for next sector
;           Inputs  ________________________
;           Outputs ________________________

Y00D6:  CALL    Y0126                   ; wait for FDC
        INC     H
        INC     H
        LD      A,(D.BFBA)
        INC     A
        LD      (D.BFBA),A
        BIT     7,D
        JR      NZ,Y00E9
        CP      9+1
        RET     C
Y00E9:  CP      8+1
        RET     C
        LD      A,1
        LD      (D.BFBA),A
        BIT     6,D
        JR      Z,Y0100
        BIT     2,D
        JR      NZ,Y0100
        SET     2,D
        LD      A,D
        LD      (D.BFBC),A
        RET

Y0100:  RES     2,D
        LD      A,D
        LD      (D.BFBC),A
        INC     C
Y0107:  CALL    Y0126                   ; wait for FDC
        LD      A,54H
        LD      (D.BFB8),A              ; seek to next cylinder
        EX      (SP),HL
        EX      (SP),HL
        JR      Y0126                   ; wait for FDC and quit

;        Subroutine reseek
;           Inputs  ________________________
;           Outputs ________________________

Y0113:  BIT     0,E
        RET     NZ
Y0116:  CALL    Y012D                   ; seek to cylinder 0
        LD      A,C
        LD      (D.BFBB),A              ; update cylinder register
        EX      (SP),HL
        EX      (SP),HL
        LD      A,14H                   ; seek to cylinder

;        Subroutine execute seek operation
;           Inputs  ________________________
;           Outputs ________________________

Y0121:  LD      (D.BFB8),A
        EX      (SP),HL
        EX      (SP),HL

;        Subroutine wait for FDC
;           Inputs  ________________________
;           Outputs ________________________

Y0126:  LD      A,(D.BFB8)
        RRA
        JR      C,Y0126
        RET

;        Subroutine seek to cylinder 0
;           Inputs  ________________________
;           Outputs ________________________

Y012D:  CALL    Y0126                   ; wait for FDC
        LD      A,00H                   ; seek to cylinder 0
        JR      Y0121                   ; execute seek operation and quit

        .DEPHASE

S7DF0   EQU     $-I$7DF0

        DEFS    8000H-$,0FFH

        END
