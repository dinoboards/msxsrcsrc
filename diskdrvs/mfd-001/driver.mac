; Diskdriver Sanyo MFD-001 (external floppydisk controller)
; FDC	MB8877A

; Source re-created by Z80DIS 2.2
; Z80DIS was written by Kenneth Gielow, Palo Alto, CA

; Code Copyrighted by SANYO and maybe others
; Source comments by Arjen Zeilemaker

; Sourcecode supplied for STUDY ONLY
; Recreation NOT permitted without authorisation of the copyrightholders
; Driver

MYSIZE	equ	8
                                        ; +0 motor off timer
                                        ; +1 disk change timer drive 0
                                        ; +2 disk change timer drive 1
                                        ; +3 physical drive current operation
                                        ; +4 store current cylinder physical drive 0
                                        ; +5 store current cylinder physical drive 1
                                        ; +6 phantom drive current operation
                                        ; +7 number of physical drives
SECLEN	equ	512

D7FF8	EQU	07FF8H			; MB8877A
D7FF9	EQU	D7FF8+1			; MB8877A
D7FFA	EQU	D7FF8+2			; MB8877A
D7FFB	EQU	D7FF8+3			; MB8877A

D7FFC	EQU	07FFCH			; b7 = INT (1 = INT)
                                        ; b6 = DRQ (1 = DRQ)
                                        ; b3 = motor on
                                        ; b2 = side select
                                        ; b1 = select drive 1
                                        ; b0 = select drive 0

BASENT  EQU     4022H
BDOS	EQU	0F37DH


I7405:

; Only supports 5.25 single sided media
; DEFDPB should point to the largest media, which should be 0FDH instead of 0FCH

DEFDPB	EQU	$-1

        DB	0FCh
        DW	512
        DB	00Fh
        DB	004h
        DB	000h
        DB	001h
        DW	1
        DB	2
        DB	64
        DW	9
        DW	352
        DB	2
        DW	5

        DB	0FDh
        DW	512
        DB	00Fh
        DB	004h
        DB	001h
        DB	002h
        DW	1
        DB	2
        DB	112
        DW	12
        DW	355
        DB	2
        DW	5

        DB	0FEh
        DW	512
        DB	00Fh
        DB	004h
        DB	000h
        DB	001h
        DW	1
        DB	2
        DB	64
        DW	7
        DW	314
        DB	1
        DW	3

        DB	0FFh
        DW	512
        DB	00Fh
        DB	004h
        DB	001h
        DB	002h
        DW	1
        DB	2
        DB	112
        DW	10
        DW	316
        DB	1
        DW	3


;	  Subroutine DSKIO
;	     Inputs  ________________________
;	     Outputs ________________________

DSKIO:	JP	NC,C753A                ; read sectors

; DSKIO write

        CALL	C747D                   ; write sectors

; DSKIO finish

J7453:	PUSH	AF
        LD	C,120
        JR	NC,J745A
        LD	C,0
J745A:	LD	A,0D0H
        LD	(D7FF8),A               ; terminate command
        EX	(SP),HL
        EX	(SP),HL
        EX	(SP),HL
        EX	(SP),HL
        LD	A,(D7FFB)               ; reset IRQ
        LD	A,(D7FF8)               ; reset DRQ
        LD	(IX+0),4*60             ; motor off timer = 4 seconds (assumes 60 Hz)
        LD	A,(IX+3)
        AND	A                       ; current physical drive 0 ?
        JR	NZ,J7478                ; nope, drive 1
        LD	(IX+1),C                ; set disk change timer drive 0
        POP	AF
        RET
J7478:	LD	(IX+2),C                ; set disk change timer drive 1
        POP	AF
        RET

;	  Subroutine write sectors
;	     Inputs  ________________________
;	     Outputs ________________________

C747D:	CALL	C75EC                   ; prepare for DSKIO
        RET	C                       ; error, quit
J7481:	LD	A,L
        ADD	A,LOW (SECLEN-1)
        LD	A,H
        ADC	A,HIGH (SECLEN-1)
        CP	HIGH 4000H              ; transfer from page 0 ?
        JP	C,J74A9                 ; yep, direct transfer
        LD	A,H
        AND	A                       ; transfer from page 2 or 3 ?
        JP	M,J74A9                 ; yep, direct transfer
        PUSH	HL
        PUSH	DE
        PUSH	BC
        LD	DE,($SECBUF)
        PUSH	DE
        LD	BC,SECLEN
        CALL	XFER
        POP	HL
        POP	BC
        POP	DE                      ; transfer content from transfer address to sector buffer
        CALL	C74B5                   ; write sector
        POP	HL
        JP	J74AC                   ; continue

J74A9:	CALL	C74B5                   ; write sector
J74AC:	RET	C                       ; error, quit with error
        DEC	B                       ; update number of sectors
        RET	Z                       ; no more sectors, quit without error
        CALL	C76A5                   ; prepare for next sector
        JP	J7481                   ; next sector

;	  Subroutine write sector
;	     Inputs  ________________________
;	     Outputs ________________________

C74B5:	LD	E,21
J74B7:	CALL	C76F5			; wait for command ready
        LD	A,0A0H
        BIT	6,D
        JR	Z,J74C8
        OR	02H
        BIT	2,D
        JR	Z,J74C8
        OR	08H
J74C8:	PUSH	HL
        PUSH	DE
        PUSH	BC
        LD	DE,I74E5
        PUSH	DE
        DI
        LD	(D7FF8),A
        LD	BC,D7FFC
        LD	DE,D7FFB
J74D9:	LD	A,(BC)
        ADD	A,A
        RET	C                       ; IRQ, quit
        JP	P,J74D9                 ; no DRQ, wait
        LD	A,(HL)
        LD	(DE),A
        INC	HL
        JP	J74D9

I74E5:	POP	BC
        POP	DE
        POP	HL
        EI
        LD	A,(D7FF8)
        AND	0FCH
        RET	Z
        JP	M,J7533                 ; quit with NOT READY
        BIT	6,A
        JR	NZ,J7512                ; test if real write protect and quit
        PUSH	AF
        CALL	C76E2                   ; reseek cylinder on retry
        POP	AF
        DEC	E                       ; update retries
        JR	NZ,J74B7                ; next retry
J74FE:	SCF
        LD	E,A
        BIT	5,E
        LD	A,10
        RET	NZ
        BIT	4,E
        LD	A,8
        RET	NZ
        BIT	3,E
        LD	A,4
        RET	NZ
        LD	A,12
        RET

; test if real write protect and quit

J7512:	LD	A,0D0H
        LD	(D7FF8),A               ; terminate command
        EX	(SP),HL
        EX	(SP),HL
        LD	A,80H
        LD	(D7FF8),A               ; read sector
        EX	(SP),HL
        EX	(SP),HL
        LD	HL,D7FFC
        LD	DE,0
J7526:	LD	A,(HL)
        ADD	A,A
        JR	C,J7537                 ; IRQ, quit with WRITE PROTECT error
        JP	P,J7537                 ; no DRQ, quit with WRITE PROTECT error
        DEC	DE
        LD	A,E
        OR	D
        JP	NZ,J7526
J7533:	LD	A,2                     ; NOT READY
        SCF
        RET

J7537:	XOR	A                       ; WRITE PROTECT
        SCF
        RET

;	  Subroutine DSKIO read
;	     Inputs  ________________________
;	     Outputs ________________________

C753A:	CALL	C7540                   ; read sectors
        JP	J7453                   ; DSKIO finish

;	  Subroutine read sectors
;	     Inputs  ________________________
;	     Outputs ________________________

C7540:	CALL	C75EC                   ; prepare for DSKIO
        RET	C                       ; error, quit
J7544:	LD	A,L
        ADD	A,LOW (SECLEN-1)
        LD	A,H
        ADC	A,HIGH (SECLEN-1)
        CP	HIGH 4000H              ; transfer to page 0 ?
        JP	C,J7571                 ; yep, direct transfer
        LD	A,H
        AND	A                       ; transfer to page 2 or 3 ?
        JP	M,J7571                 ; yep, direct transfer
        PUSH	HL
        LD	HL,($SECBUF)
        CALL	C757D                   ; read sector in sector buffer
        POP	HL
        RET	C                       ; error, quit with error
        PUSH	HL
        PUSH	DE
        PUSH	BC
        EX	DE,HL
        LD	HL,($SECBUF)
        LD	BC,SECLEN
        CALL	XFER
        POP	BC
        POP	DE
        POP	HL                      ; transfer sector buffer content to transfer address
        AND	A                       ; clear Cx
        JP	J7575                   ; continue

J7571:	CALL	C757D                   ; read sector
        RET	C                       ; error, quit
J7575:	DEC	B                       ; update number of sectors
        RET	Z                       ; no more sectors, quit without error
        CALL	C76A5                   ; prepare for next sector
        JP	J7544                   ; next sector

;	  Subroutine read sector
;	     Inputs  ________________________
;	     Outputs ________________________

C757D:	LD	E,21
J757F:	CALL	C76F5			; wait for command ready
        LD	A,80H
        BIT	6,D
        JR	Z,J7590
        OR	02H
        BIT	2,D
        JR	Z,J7590
        OR	08H
J7590:	PUSH	HL
        PUSH	DE
        PUSH	BC
        LD	BC,D7FFC
        LD	DE,I75C4
        PUSH	DE
        DI
        LD	(D7FF8),A
        LD	DE,0
J75A1:	LD	A,(BC)
        ADD	A,A
        JP	P,J75B5                 ; no DRQ, continue
        RET	C                       ; IRQ, quit
        DEC	E
        JP	NZ,J75A1
        DEC	D
        JP	NZ,J75A1
        POP	BC
        POP	BC
        POP	DE
        POP	HL
        JR	J75E8

J75B5:	LD	DE,D7FFB
J75B8:	LD	A,(BC)
        ADD	A,A
        RET	C                       ; IRQ, quit
        JP	P,J75B8                 ; no DRQ, wait
        LD	A,(DE)
        LD	(HL),A
        INC	HL
        JP	J75B8

I75C4:	POP	BC
        POP	DE
        POP	HL
        EI
        LD	A,(D7FF8)
        AND	9CH
        RET	Z
        JP	M,J75E8
        PUSH	AF
        CALL	C76E2                   ; reseek cylinder on retry
        POP	AF
        DEC	E                       ; update retries
        JR	NZ,J757F                ; next retry
        SCF
        LD	E,A
        BIT	4,E
        LD	A,8
        RET	NZ
        BIT	3,E
        LD	A,4
        RET	NZ
        LD	A,12
        RET
J75E8:	LD	A,2
        SCF
        RET

;	  Subroutine prepare for DSKIO
;	     Inputs  ________________________
;	     Outputs ________________________

C75EC:	PUSH	AF
        PUSH	BC
        PUSH	HL
        CALL	GETWRK
        POP	HL
        POP	BC
        POP	AF
        CP	1+1
        JR	C,J75FD
J75F9:	LD	A,12
        SCF
        RET

J75FD:	PUSH	AF
        LD	A,C
        CP	0FCH
        JR	NC,J7606
        POP	AF
        JR	J75F9

J7606:	EX	(SP),HL
        PUSH	HL
        PUSH	BC
        CALL	C76F5			; wait for command ready
        BIT	1,C			; 8 sectors per track ?
        LD	C,E
        LD	B,D
        LD	DE,8
        JR	NZ,J7616
        INC	DE
J7616:	CALL	DIV16
        LD	A,L
        INC	A
        LD	(D7FFA),A
        LD	L,C
        POP	BC
        POP	AF
        LD	H,A
        LD	A,(IX+7)
        DEC	A                       ; 1 physical drive ?
        JR	Z,J7629                 ; yep, use physical drive 0
        LD	A,H
J7629:	ADD	A,09H
        BIT	0,C
        JR	Z,J7635
        SRL	L
        JR	NC,J7635
        OR	04H
J7635:	LD	D,A
        LD	A,C
        RRCA
        RRCA
        AND	0C0H
        OR	D
        LD	D,A
        DI
        LD	(D7FFC),A
        LD	A,(IX+0)
        AND	A                       ; motor off timer finished (motor off) ?
        LD	(IX+0),0FFH             ; motor off timer disabled
        EI
        JR	NZ,J765C                ; nope, skip motor spin up delay
        PUSH	HL
        PUSH	BC
        LD	B,2
J7650:	LD	HL,0
J7653:	DEC	HL
        LD	A,L
        OR	H
        JR	NZ,J7653
        DJNZ	J7650
        POP	BC
        POP	HL
J765C:	LD	C,L
        LD	A,(IX+7)
        DEC	A                       ; 1 physical drive ?
        JR	Z,J7688                 ; yep, handle driveid as phantom drive
        LD	A,(IX+3)
        CP	H                       ; same physical drive as last operation ?
        JR	Z,J769C                 ; yep, skip cylinder register
        XOR	01H
        LD	(IX+3),A                ; update current physical drive
        LD	A,(D7FF9)
        JR	Z,J767B
        LD	(IX+4),A                ; store current cylinder physical drive 0
        LD	A,(IX+5)                ; restore current cylinder physical drive 1
        JR	J7681

J767B:	LD	(IX+5),A                ; store current cylinder physical drive 1
        LD	A,(IX+4)                ; restore current cylinder physical drive 0
J7681:	LD	(D7FF9),A               ; update cylinder register
        EX	(SP),HL
        EX	(SP),HL
        JR	J769F

J7688:	LD	A,H
        CP	(IX+6)                  ; same phantom drive ?
        LD	(IX+6),A                ; update current phantom drive
        JR	Z,J769C                 ; yep, skip prompt
        PUSH	IX
        PUSH	DE
        PUSH	BC
        CALL	PROMPT
        POP	BC
        POP	DE
        POP	IX
J769C:	LD	A,(D7FF9)
J769F:	CP	C                       ; current cylinder same as requested ?
        CALL	NZ,C76E8		; nope, seek to cylinder
        POP	HL
        RET

;	  Subroutine prepare for next sector
;	     Inputs  ________________________
;	     Outputs ________________________

C76A5:	CALL	C76F5			; wait for command ready
        INC	H
        INC	H
        LD	A,(D7FFA)
        INC	A
        LD	(D7FFA),A
        BIT	7,D
        JR	NZ,J76B8
        CP	9+1
        RET	C
J76B8:	CP	8+1
        RET	C
        LD	A,1
        LD	(D7FFA),A
        BIT	6,D
        JR	Z,J76CF
        BIT	2,D
        JR	NZ,J76CF
        SET	2,D
        LD	A,D
        LD	(D7FFC),A
        RET
J76CF:	RES	2,D
        LD	A,D
        LD	(D7FFC),A
        INC	C                       ; next cylinder
        CALL	C76F5			; wait for command ready
        LD	A,50H
        LD	(D7FF8),A               ; seek to next cylinder
        EX	(SP),HL
        EX	(SP),HL
        JR	C76F5			; wait for command ready

;	  Subroutine reseek cylinder on retry
;	     Inputs  ________________________
;	     Outputs ________________________

C76E2:	BIT	0,E
        RET	NZ
        CALL	C76FC                   ; seek to cylinder 0

;	  Subroutine seek to cylinder
;	     Inputs  ________________________
;	     Outputs ________________________

C76E8:	LD	A,C
        LD	(D7FFB),A
        EX	(SP),HL
        EX	(SP),HL
        LD	A,10H
J76F0:	LD	(D7FF8),A
        EX	(SP),HL
        EX	(SP),HL

;	  Subroutine wait for command ready
;	     Inputs  ________________________
;	     Outputs ________________________

C76F5:	LD	A,(D7FF8)
        RRA
        JR	C,C76F5
        RET

;	  Subroutine seek to cylinder 0
;	     Inputs  ________________________
;	     Outputs ________________________

C76FC:	CALL	C76F5			; wait for command ready
        LD	A,00H
        JR	J76F0

;	  Subroutine INIHRD
;	     Inputs  ________________________
;	     Outputs ________________________

INIHRD:	LD	A,0D0H
        LD	(D7FF8),A               ; terminate command
        EX	(SP),HL
        EX	(SP),HL
        LD	A,01H
        CALL	C7719
        LD	A,02H
        CALL	C7719
        XOR	A
        LD	(D7FFC),A
        RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C7719:	LD	(D7FFC),A
        CALL	C76F5			; wait for command ready
        LD	A,00H
        LD	(D7FF8),A
        EX	(SP),HL
        EX	(SP),HL
        LD	HL,0
J7729:	LD	A,(D7FF8)
        RRA
        RET	NC
        DEC	HL
        LD	A,L
        OR	H
        JR	NZ,J7729
        RET

;	  Subroutine DRIVES
;	     Inputs  ________________________
;	     Outputs ________________________

DRIVES:	PUSH	BC
        PUSH	AF
        CALL	GETWRK
        LD	A,02H
        LD	(D7FFC),A
        CALL	C76F5			; wait for command ready
        LD	A,00H
        LD	(D7FF8),A
        EX	(SP),HL
        EX	(SP),HL
        LD	HL,0
J774B:	LD	A,(D7FF8)
        RRA
        JR	NC,J7758
        DEC	HL
        LD	A,L
        OR	H
        JR	NZ,J774B
        INC	L                       ; 1 physical drive
        DEFB	0CAH                    ; JP Z,xxxx, skip next instruction
J7758:	LD	L,2
        LD	(IX+7),L                ; 2 physical drives
        XOR	A
        LD	(D7FFC),A
        POP	AF
        JR	Z,J7766                 ; CTRL pressed, return physical drives
        LD	L,2                     ; return 2 drives (either physical or phantom)
J7766:	POP	BC
        RET

;	  Subroutine INIENV
;	     Inputs  ________________________
;	     Outputs ________________________

INIENV:	CALL	GETWRK
        XOR	A
        LD	B,7
J776E:	LD	(HL),A
        INC	HL
        DJNZ	J776E
        LD	HL,I7778
        JP	SETINT

;	  Subroutine timer interrupt handler
;	     Inputs  ________________________
;	     Outputs ________________________

I7778:	PUSH	AF                      ; store vdp status register
        CALL	GETWRK
        LD	A,(HL)
        AND	A                       ; motor off timer finished ?
        JR	Z,J778B                 ; yep, skip
        CP	0FFH                    ; motor off timer disabled ?
        JR	Z,J778B                 ; yep, skip
        DEC	A
        LD	(HL),A                  ; update motor off timer
        JR	NZ,J778B                ; timer not finished, skip
        LD	(D7FFC),A               ; motor off
J778B:	INC	HL
        LD	A,(HL)
        AND	A                       ; disk change timer drive 0 finished ?
        JR	Z,J7791                 ; yep, skip
        DEC	(HL)                    ; update disk change timer drive 0
J7791:	INC	HL
        LD	A,(HL)
        AND	A                       ; disk change timer drive 1 finished ?
        JR	Z,J7797                 ; yep, skip
        DEC	(HL)                    ; update disk change timer drive 1
J7797:	POP	AF                      ; restore vdp status register
        JP	PRVINT                  ; next timer interrupt handler

;	  Subroutine DSKCHG
;	     Inputs  ________________________
;	     Outputs ________________________

DSKCHG:	PUSH	HL
        PUSH	BC
        PUSH	AF
        CALL	GETWRK
        POP	AF
        POP	BC
        POP	HL
        LD	B,(IX+7)
        DEC	B                       ; 1 physical drive ?
        JR	Z,J77B0                 ; yep, use physical drive 0
        AND	A
        LD	B,(IX+2)                ; assume disk change timer drive 1
        JR	NZ,J77B3
J77B0:	LD	B,(IX+1)                ; disk change timer drive 0
J77B3:	AND	A
        INC	B
        DEC	B                       ; timer finished ?
        LD	B,1
        RET	NZ                      ; nope, quit with disk unchanged
        PUSH	BC
        PUSH	HL
        LD	DE,1                    ; 1st FAT sector of 1st FAT
        LD	HL,($SECBUF)
        CALL	C753A                   ; DSKIO read
        JR	C,J77DD                 ; error, quit with error
        LD	HL,($SECBUF)
        LD	B,(HL)                  ; media descriptor
        POP	HL
        PUSH	BC
        CALL	GETDPB                  ; update DPB
        LD	A,0CH
        JR	C,J77DD                 ; error, quit with error
        POP	AF
        POP	BC
        CP	C                       ; same media descriptor ?
        SCF
        CCF                             ; clear Cx
        LD	B,0FFH
        RET	NZ                      ; nope, quit with disk changed
        INC	B
        RET                             ; quit with disk change unknown

J77DD:	POP	DE
        POP	DE
        RET

;	  Subroutine GETDPB
;	     Inputs  ________________________
;	     Outputs ________________________

GETDPB:	EX	DE,HL
        INC	DE
        LD	A,B
        SUB	0FCH
        RET	C
        LD	L,A
        LD	H,00H
        ADD	HL,HL
        LD	C,L
        LD	B,H
        ADD	HL,HL
        ADD	HL,HL
        ADD	HL,HL
        ADD	HL,BC
        LD	BC,I7405
        ADD	HL,BC
        LD	BC,18
        LDIR
        RET

CHOICE:	LD	HL,0
        RET

DSKFMT:	LD	A,D                     ; drive
        PUSH	AF                      ; store drive
        PUSH	HL
        LD	C,0FDH                  ; default media descriptor
        LD	DE,0                    ; boot sector
        LD	B,1                     ; 1 sector
        CALL	C75EC                   ; prepare for DSKIO
        POP	HL
        JR	C,J783F                 ; error, quit with error
        POP	AF                      ; restore drive
        PUSH	AF                      ; store drive
        OR	A
        LD	A,09H			; motor on, side 0, select drive 0
        JR	Z,J7817
        LD	A,0AH			; motor on, side 0, select drive 1
J7817:	PUSH	AF
        CALL	C7899                   ; create format track data
        CALL	C78DF                   ; fill with record number
        CALL	C76FC			; seek to cylinder 0
        CALL	C7842			; format all tracks (side 0)
        JR	C,J783F                 ; error, quit format with error
        CALL	C76FC			; seek to cylinder 0
        POP	AF
        OR	04H
        LD	(D7FFC),A		; select side 1
        LD	A,1
        CALL	C78C4                   ; fill with side
        CALL	C7842			; format all tracks (side 1)
        JR	C,J7840                 ; error, quit format with error
        POP	AF
        CALL	C78F8			; write boot sector, FATs and directory
        OR	A                       ; clear Cx
        RET

J783F:	POP	HL
J7840:	POP	HL
        RET

;	  Subroutine format all tracks
;	     Inputs  ________________________
;	     Outputs ________________________

C7842:	XOR	A
J7843:	PUSH	AF
        LD	C,A
        CALL	C76E8			; seek to cylinder
        POP	AF
        PUSH	HL
        CALL	C7855			; format track
        POP	HL
        RET	C                       ; error, quit
        INC	A                       ; update cylinder
        CP	40
        JR	NZ,J7843                ; next cylinder
        RET

;	  Subroutine format track
;	     Inputs  ________________________
;	     Outputs ________________________

C7855:	PUSH	HL
        CALL	C78CC                   ; fill with cylinder
        CALL	C76F5			; wait for command ready
        LD	B,4                     ; 4 tries
        POP	HL
J785F:	PUSH	HL
        PUSH	BC
        LD	A,0F0H                  ; format track
        LD	DE,I787D
        PUSH	DE
        LD	BC,D7FFC
        LD	DE,D7FFB
        DI
        LD	(D7FF8),A
J7871:	LD	A,(BC)
        ADD	A,A
        RET	C                       ; IRQ, quit
        JP	P,J7871                 ; no DRQ, wait
        LD	A,(HL)
        LD	(DE),A
        INC	HL
        JP	J7871

I787D:	POP	BC
        POP	HL
        LD	A,(D7FF8)
        EI
        AND	0E4H
        JR	J7894                   ; patch, skip

?.7887:	JP	M,J7533                 ; quit with NOT READY
        BIT	6,A
        JP	NZ,J7512                ; test if real write protect and quit
        DJNZ	J785F                   ; next try
        JP	J74FE                   ; quit with errorcode

J7894:	LD	A,(D7FF9)
        OR	A
        RET

;	  Subroutine create format track data
;	     Inputs  ________________________
;	     Outputs ________________________

C7899:	PUSH	HL
        LD	DE,I7A06                ; pre sector format data
        CALL	C78B2                   ; create format data
        LD	B,9
J78A2:	LD	DE,I7A11                ; sector format data
        CALL	C78B2                   ; create format data
        DJNZ	J78A2
        LD	DE,I7A32                ; post sector format data
        CALL	C78B2                   ; create format data
        POP	HL
        RET

;	  Subroutine create format data
;	     Inputs  ________________________
;	     Outputs ________________________

C78B2:	PUSH	BC
J78B3:	LD	A,(DE)
        CP	37H
        JR	Z,J78C2
        LD	B,A
        INC	DE
        LD	A,(DE)
J78BB:	LD	(HL),A
        INC	HL
        DJNZ	J78BB
        INC	DE
        JR	J78B3

J78C2:	POP	BC
        RET

;	  Subroutine fill with side
;	     Inputs  ________________________
;	     Outputs ________________________

C78C4:	LD	A,1
        LD	DE,163
        JP	J78D2

;	  Subroutine fill with cylinder
;	     Inputs  ________________________
;	     Outputs ________________________

C78CC:	LD	DE,162
        JP	J78D2

J78D2:	PUSH	HL
        ADD	HL,DE
        LD	DE,512+144
        LD	B,9
J78D9:	LD	(HL),A
        ADD	HL,DE
        DJNZ	J78D9
        POP	HL
        RET

;	  Subroutine fill with record number
;	     Inputs  ________________________
;	     Outputs ________________________

C78DF:	PUSH	HL
        LD	IX,I7A3B
        LD	DE,164
        ADD	HL,DE
        LD	DE,512+144
        LD	B,9
J78ED:	LD	A,(IX+0)
        INC	IX
        LD	(HL),A
        ADD	HL,DE
        DJNZ	J78ED
        POP	HL
        RET

;	  Subroutine write boot sector, FATs and directory
;	     Inputs  ________________________
;	     Outputs ________________________

C78F8:	PUSH	AF
        PUSH	HL
        CALL	C7931			; clear non-data sectors buffer
        PUSH	HL
        EX	DE,HL
        LD	HL,I7941
        LD	BC,S7941
        LDIR	                        ; boot sector
        POP	HL
        LD	DE,1*512
        ADD	HL,DE
        CALL	C7925			; 1st FAT sector 1st FAT
        ADD	HL,DE
        ADD	HL,DE
        CALL	C7925			; 1st FAT sector 2nd FAT
        POP	HL
        POP	AF
        LD	B,1+2+2+7               ; boot sector, 2 FATs, directory
        LD	C,0FDH
        LD	DE,0                    ; sector 0 (boot sector)
        SCF                             ; write
        CALL	DSKIO
        RET	NC                      ; no error, quit
        JP	J7840                   ; quit format with error

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C7925:	PUSH	HL
        LD	A,0FDH
        LD	(HL),A
        INC	HL
        LD	A,0FFH
        LD	(HL),A
        INC	HL
        LD	(HL),A
        POP	HL
        RET

;	  Subroutine clear non-data sectors buffer
;	     Inputs  ________________________
;	     Outputs ________________________

C7931:	PUSH	AF
        PUSH	HL
        LD	BC,12*512
J7936:	XOR	A
        LD	(HL),A
        INC	HL
        DEC	BC
        LD	A,B
        OR	C
        JR	NZ,J7936
        POP	HL
        POP	AF
        RET

I7941:
        .PHASE	0C000H

        DEFB	0EBH			; 00H, x86 JMP +0100H
        DEFB	0FEH
        DEFB	090H			; 02H, x86 NOP
	DEFB	"MSX_02  "		; 03H, OEM system name

					;      BPB (BIOS Parameter Block)
        DEFW	512			; 0BH, bytes per sector
        DEFB	2			; 0DH, sectors per cluster
        DEFW	1			; 0EH, reserved sectors (= 1st FAT sector)
        DEFB	2			; 10H, number of FATs
        DEFW	112			; 11H, number of (root) directory entries
        DEFW	720			; 13H, total number of sectors on disk
        DEFB	0FDH			; 15H, media descriptor byte
        DEFW	2			; 16H, sectors per FAT
        DEFW	9			; 18H, sectors per track
        DEFW	2			; 1AH, number of sides
        DEFW	0			; 1CH, number of hidden sectors

					;      MSX boot loader

C.C01E:	RET	NC
	LD	(C.C058+1),DE
	LD	(D.C0DA),A
	LD	(HL),LOW C.C056
	INC	HL
	LD	(HL),HIGH C.C056
J$C02B:	LD	SP,KBUF+256
	LD	DE,I.C0B5
	LD	C,0FH
	CALL	BDOS
	INC	A
	JP	Z,J$C063
	LD	DE,0100H
	LD	C,1AH
	CALL	BDOS
	LD	HL,1
	LD	(I.C0B5+14),HL
	LD	HL,4000H-0100H
	LD	DE,I.C0B5
	LD	C,27H
	CALL	BDOS
	JP	0100H

C.C056: DEFW    C.C058

C.C058:	CALL	0
	LD	A,C
	AND	0FEH
	CP	02H
	JP	NZ,J$C06A
J$C063:	LD	A,(D.C0DA)
	AND	A
	JP	Z,BASENT
J$C06A: LD	DE,I$C079
        LD	C,09H
        CALL	BDOS
        LD	C,07H
        CALL	BDOS
        JR	J$C02B

I$C079:	DEFB	"Boot error",13,10
        DEFB	"Press any key for retry",13,10
        DEFB	'$'

I.C0B5:	DEFB	0
        DEFB	"MSXDOS  "
        DEFB	"SYS"
        DEFW	0
        DEFW	0
        DEFB	0,0,0,0
        DEFW	0
        DEFW	0
        DEFB	0
        DEFB	0
        DEFW	0
        DEFW	0
        DEFW	0
        DEFB	0
        DEFB	0,0,0,0

D.C0DA:	DEFB	0

        .DEPHASE
S7941   EQU     $-I7941

I7A06:  DEFB    80,4EH                  ; gap
        DEFB    12,00H                  ; gap
        DEFB    3,0F6H                  ; special sync
        DEFB    1,0FCH                  ; index mark
        DEFB    50,4EH                  ; gap
        DEFB    37H

I7A11:  DEFB    12,00H                  ; gap
        DEFB    3,0F5H                  ; special sync
        DEFB    1,0FEH                  ; id address mark
        DEFB    1,0                     ; cylinder
        DEFB    1,0                     ; side
        DEFB    1,1                     ; record
        DEFB    1,2                     ; length (512 bytes)
        DEFB    1,0F7H                  ; crc
        DEFB    22,4EH                  ; gap
        DEFB    12,00H                  ; gap
        DEFB    3,0F5H                  ; special sync
        DEFB    1,0FBH                  ; data address mark
        DEFB    0,0E5H                  ; data
        DEFB    0,0E5H                  ; data
        DEFB    1,0F7H                  ; crc
        DEFB    84,4EH                  ; gap
        DEFB    37H

I7A32:  DEFB    0,4EH                   ; gap
        DEFB    0,4EH                   ; gap
        DEFB    0,4EH                   ; gap
        DEFB    0,4EH                   ; gap
        DEFB	37H

I7A3B:  DEFB    1,4,7,2,5,8,3,6,9

        DEFB    0

OEMSTA: SCF
        RET

        DEFB    0

        DEFS    8000H-$,0FFH

        END
