; WAVESCSI (SCC), DOS2
;
; DSKIO		7849
; DSKCHG	79E0
; GETDPB	7A8D
; CHOICE	7B37
; DSKFMT	7B4D
; MTOFF		7B41
; INIHRD	7B51
; DRIVES	7BBC
; INIENV	7C07
; DEFDPB	7404
; MYSIZE	4
; OEMSTA	- (patched)

; 4002:		DEFW	4092
; 4092:		XOR 	A
;		LD	(05000H),A
;		INC	A
;		LD	(07000H),A
;		JP	07000H

;  
;   MEGA3 -> Source re-created by Z80DIS 2.2
;      Z80DIS was written by Kenneth Gielow
;                            Palo Alto, CA
	.Z80
	ORG	6FC0H
I.0000	EQU	0000H	; ----I
BDOS	EQU	0005H	; ----I
I.000F	EQU	000FH	; ----I
I$0010	EQU	0010H	; ----I
I$0012	EQU	0012H	; ----I
C.0014	EQU	0014H	; -C---
C.001C	EQU	001CH	; JC---
IDBYT2	EQU	002DH
C.0038	EQU	0038H	; -C---
C.0049	EQU	0049H	; -C---
I$0102	EQU	0102H	; ----I
I$0118	EQU	0118H	; ----I
C.0141	EQU	0141H	; -C---
C.0180	EQU	0180H	; JC---
I$0197	EQU	0197H	; ----I
I$01CD	EQU	01CDH	; ----I
I$01FF	EQU	01FFH	; ----I
I.0200	EQU	0200H	; ----I
I$0215	EQU	0215H	; ----I
J$0302	EQU	0302H	; J----
I$0307	EQU	0307H	; ----I
I$0800	EQU	0800H	; ----I
C$087C	EQU	087CH	; -C---
D$312E	EQU	312EH	; --S--
I$32CD	EQU	32CDH	; ----I
C$3549	EQU	3549H	; -C---
I$4000	EQU	4000H	; ----I
I.4001	EQU	4001H	; ----I
I$4010	EQU	4010H	; ----I
I$4013	EQU	4013H	; ----I
C$4100	EQU	4100H	; -C---
J$47D6	EQU	47D6H	; J----
J$4969	EQU	4969H	; J----
D$4A3A	EQU	4A3AH	; ---L-
C$4DD8	EQU	4DD8H	; -C---
C$4E3A	EQU	4E3AH	; -C---
D.5000	EQU	5000H	; --S--
D$5417	EQU	5417H	; --S--
D$5494	EQU	5494H	; --S--
D$562B	EQU	562BH	; --S--
D$5685	EQU	5685H	; --S--
I$576F	EQU	576FH	; ----I
D$579A	EQU	579AH	; --S--
D$583E	EQU	583EH	; --S--
I.5E00	EQU	5E00H	; ----I
I.5E01	EQU	5E01H	; ----I
D$5F00	EQU	5F00H	; --S--
D.5F80	EQU	5F80H	; --S-I
D.5F88	EQU	5F88H	; --S-I
D.5F90	EQU	5F90H	; --S-I
I$5F98	EQU	5F98H	; ----I
I$5FA0	EQU	5FA0H	; ----I
I.5FF0	EQU	5FF0H	; ----I
D.6000	EQU	6000H	; --S--
I$6800	EQU	6800H	; ----I
C$6A9A	EQU	6A9AH	; -C---
J$8040	EQU	8040H	; J----
J$8054	EQU	8054H	; J----
J$8060	EQU	8060H	; J----
I$D300	EQU	0D300H	; ----I
I$D33C	EQU	0D33CH	; ----I
I.D9CD	EQU	0D9CDH	; ----I
I$DB00	EQU	0DB00H	; ----I

I$F1C5	EQU	0F1C5H	; ----I
C.F1C6	EQU	0F1C6H	; -C---
J$F2C0	EQU	0F2C0H	; J----
D$F2FD	EQU	0F2FDH	; --S--
I.F314	EQU	0F314H	; ----I
D$F33F	EQU	0F33FH	; --S--
MASTER	EQU	0F348H	; ---L-
$SECBUF	EQU	0F34DH	; --SL-
XFER	EQU	0F36EH	; -C---
I$FB21	EQU	0FB21H	; ----I
D.FB22	EQU	0FB22H	; --SL-
I$FB29	EQU	0FB29H	; ----I
D$FB2C	EQU	0FB2CH	; --S--
D$FB2D	EQU	0FB2DH	; --S--
DEVICE	EQU	0FD99H	; ----I

J$6FC0:	PUSH	AF
	CALL	C$6A9A
	CALL	C$6FCB
	POP	AF
	JP	J$F2C0			; old H.TIMI

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C$6FCB:	LD	DE,I$FB21
	LD	HL,I$FB29
	LD	B,04H	; 4 
J$6FD3:	LD	A,(DE)
	AND	A
	RET	Z
	INC	DE
	LD	A,(DE)
	INC	DE
	CP	(HL)
	JR	NZ,J$6FF4
	LD	A,(MASTER)
	CP	(HL)
	LD	A,(HL)
	PUSH	BC
	PUSH	DE
	PUSH	HL
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	PUSH	AF
	POP	IY
	PUSH	DE
	POP	IX
	CALL	C$6FFA
	POP	HL
	POP	DE
	POP	BC
J$6FF4:	INC	HL
	INC	HL
	INC	HL
	DJNZ	J$6FD3
	RET

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C$6FFA:	JP	NZ,C.001C
	JP	(IX)

	DEFS	07000H-$,0

D$7000:	CALL	C$7067			; get fast cpu patch table pointer
J$7003:	JR	NC,J$700E		; MSX2 or higher, try DOS2
	LD	HL,I$576F
	PUSH	HL			; start DOS1
	LD	A,3
	JP	J$7FD0			; select DOS2 segment 3

J$700E:	XOR	A
	LD	(D.7FFE),A		; SCC disable SRAM write
	LD	(D.6000),A		; ASCII select BANK0 (DOS2 segment 0) at 04000H-5FFFH, disable SRAM write
	LD	(D.5000),A		; SCC select BANK0 (DOS2 segment 0) at 04000H-5FFFH
	OR	80H
	LD	(D.6000),A		; ASCII select BANK0 (DOS2 segment 0) at 04000H-5FFFH, enable SRAM write
	LD	A,10H
	LD	(D.7FFE),A		; SCC enable SRAM write

	LD	A,3
J$7024:	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	LD	BC,5
	LDIR
	DEC	A
	JR	NZ,J$7024		; patch CPU switch related routines

	LD	(D.7FFE),A		; SCC disable SRAM write
	LD	(D.6000),A		; ASCII select BANK0 (DOS2 segment 0) at 04000H-5FFFH, disable SRAM write
	LD	A,2
	LD	(D.5000),A		; SCC select BANK2 (DOS2 segment 1) at 04000H-5FFFH
	OR	80H
	LD	(D.6000),A		; ASCII select BANK0 (DOS2 segment 0) at 04000H-5FFFH, enable SRAM write
	LD	A,10H
	LD	(D.7FFE),A		; SCC enable SRAM write

	LD	A,8
J$7047:	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	LD	BC,5
	LDIR
	DEC	A
	JR	NZ,J$7047		; patch CPU switch and mapper pages related routines

	LD	(D.7FFE),A		; disable SRAM write
	LD	(D.6000),A		; ASCII select BANK0 (DOS2 segment 0) at 04000H-5FFFH, disable SRAM write
	LD	(D.5000),A		; SCC select BANK0 (DOS2 segment 0) at 04000H-5FFFH
	CALL	C$4E3A			; GETSLT_P3
	CALL	C$4100			; check and invoke memorymapper of 6 or more segments
	JR	C,J$7003		; failed, start DOS1
	JP	J$47D6			; DOS2 orginal init

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C$7067:	LD	A,(IDBYT2)
	OR	A			; MSX1 ?
	SCF
	RET	Z			; yep, quit
	CP	3			; Turbo-R or higher ?
	JR	C,J$707F		; nope,
	XOR	A
	CALL	SNSMAT
	AND	04H			; @ (INT) " (JAP) pressed ?
	LD	HL,I$70BF
	RET	NZ			; nope, fast CPU mode = R800 DRAM
	LD	HL,I$710C		; fast CPU mode = R800 ROM
	RET

J$707F:	LD	A,8
	OUT	(40H),A			; Matsushita
	IN	A,(40H)
	XOR	0F7H			; Matsushita hardware found ?
	LD	HL,I$71A6		; assume hardware without fast CPU mode
	RET	NZ			; nope, quit
	IN	A,(41H)
	OR	A			; firmware switch OFF ?
	RET	M			; yep, quit
	LD	A,11
	CALL	SNSMAT
	AND	02H			; YES key pressed ?
	RET	Z			; yep, quit

; disable panasonic firmware from autostart

	LD	A,8FH
	LD	E,12
	LD	HL,I$6800
	CALL	WRSLT			; Switch the segment 12 on page 4000h-5FFFh
	LD	A,8FH
	INC	E
	LD	H,6CH
	CALL	WRSLT			; Switch the segment 13 on page 6000h-7FFFh
	LD	A,8FH
	LD	E,18
	LD	H,70H
	CALL	WRSLT			; Switch the segment 18 on page 8000h-9FFFh
	LD	A,8FH
	INC	E
	LD	H,78H
	CALL	WRSLT			; Switch the segment 19 on page A000h-BFFFh

	LD	HL,I$7159		; Panasonic with fast CPU mode
	XOR	A
	RET

; Turbo-R R800 DRAM
;
;

I$70BF:	DEFW	X4826			; set cpu mode when disk system is disabled
	LD	A,82H			; R800 DRAM, update CPU led
	JP	CHGCPU

	DEFW	X5195			; set fast cpu mode when dos2 is started
	LD	A,82H			; R800 DRAM, update CPU led
	JP	CHGCPU

	DEFW	X51AF			; set slow cpu mode when dos1 is started
	LD	A,80H			; Z80, update CPU led
	CALL	CHGCPU

	DEFW	X4499+2			; save current CPU mode
	DEFW	GETCPU			; BIOS routine GETCPU
	CALL	0F1D9H			; call MAIN BIOS

	DEFW	X44A2+2			; set slow CPU mode
	DEFW	CHGCPU			; BIOS routine CHGCPU
	CALL	0F1D9H			; call MAIN BIOS

	DEFW	X44B5+2			; restore CPU mode
	DEFW	CHGCPU			; BIOS routine CHGCPU
	CALL	0F1D9H			; call MAIN BIOS

	DEFW	X49A0			; test if R800 RAM mode
	LD	A,(HL)
	BIT	2,A
	DEFB	028H,003H

	DEFW	X49B7			; number of system segments
	LD	(HL),10
	LD	DE,I.F314

	DEFW	X49EC			; set (system) reserved segments part #1
	DEC	(HL)
	DEC	HL
	DEC	(HL)
	DEC	HL
	DEC	(HL)

	DEFW	X49EC+2			; set (system) reserved segments part #2
	DEC	(HL)
	DEC	HL
	DEC	(HL)
	DEC	HL
	DEC	(HL)

	DEFW	X4A36
	PUSH	BC
	LD	C,A
	LD	A,(HL)
	OR	A
	DEFB	028H

; Turbo-R R800 ROM
;
;

I$710C:	DEFW	X4826
	LD	A,81H			; R800 ROM, update CPU led
	JP	CHGCPU

	DEFW	X5195
	LD	A,81H			; R800 ROM, update CPU led
	JP	CHGCPU

	DEFW	X51AF
	LD	A,80H			; Z80, update CPU led
	CALL	CHGCPU

	DEFW	X449B
	DEFW	GETCPU
	CALL	0F1D9H

	DEFW	X44A4
	DEFW	CHGCPU
	CALL	0F1D9H

	DEFW	X44B7
	DEFW	CHGCPU
	CALL	0F1D9H

	DEFW	X49A0
	LD	A,(HL)
	JR	J$7142
	DEFB	028H,003H

	DEFW	X49B7
	LD	(HL),6
	LD	DE,I.F314

	DEFW	X49EC
	NOP
	NOP
	NOP
	NOP
	NOP

	DEFW	X49EE
	NOP
	NOP
	NOP
	NOP
	NOP

	DEFW	X4A36
	PUSH	BC
	LD	C,A
	LD	A,(HL)
	OR	A
	DEFB	028H

; Panasonic with fast CPU mode
;
;

I$7159:	DEFW	X4826
	LD	A,0
	OUT	(41H),A			; Panasonic 5.37 Mhz mode
	RET

	DEFW	X5195
	LD	A,0
	OUT	(41H),A			; Panasonic 5.37 Mhz mode
	RET

	DEFW	X51AF
	LD	A,1
	OUT	(41H),A			; Panasonic 3.57 Mhz mode
	NOP

	DEFW	X449B
	DEFW	GETCPU
	NOP
	IN	A,(41H)

	DEFW	X44A4
	DEFW	CHGCPU
	DEFB	03CH
	OUT	(041H),A

	DEFW	X44B7
	DEFW	CHGCPU
	NOP
	OUT	(041H),A

	DEFW	X49A0
	DEFB	07EH
	DEFB	018H,007H
	DEFB	028H,003H

	DEFW	X49B7
	LD	(HL),6
	LD	DE,I.F314

	DEFW	X49EC
	NOP
	NOP
	NOP
	NOP
	NOP
	
	DEFW	X49EE
	NOP
	NOP
	NOP
	NOP
	NOP

	DEFW	X4A36
	PUSH	BC
	LD	C,A
	LD	A,(HL)
	DEFB	018H,016H

; MSX without fast CPU mode
;
;

I$71A6:	DEFW	X4826
	RET
	RET
	RET
	RET
	RET

	DEFW	X5195
	RET
	RET
	RET
	RET
	RET

	DEFW	X51AF
	NOP
	NOP
	NOP
	NOP
	NOP

	DEFW	X449B
	DEFW	0183H
	NOP
	NOP
	NOP
	
	DEFW	X44A4
	DEFW	0180H
	NOP
	NOP
	NOP
	
	DEFW	X44B7
	DEFW	0180H
	NOP
	NOP
	NOP

	DEFW	X49A0
	DEFB	07EH
	DEFB	018H,007H
	DEFB	028H,003H

	DEFW	X49B7
	LD	(HL),6
	LD	DE,I.F314

	DEFW	X49EC
	NOP
	NOP
	NOP
	NOP
	NOP
	
	DEFW	X49EE
	NOP
	NOP
	NOP
	NOP
	NOP

	DEFW	X4A36
	PUSH	BC
	LD	C,A
	LD	A,(HL)
	DEFB	018H,016H


	DEFS	07405H-$,0


I$7405:	LD	SP,HL
	NOP
	LD	(BC),A
	RRCA
	INC	B
	LD	BC,I$0102
	NOP
	LD	(BC),A
	LD	(HL),B
	LD	C,00H
	JP	Z,J$0302
	RLCA
	NOP


;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C.7417:	JR	C.741A
?.7419:	LD	(HL),H

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C.741A:	EXX
	LD	L,A
	EX	AF,AF'
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	BIT	2,H
	LD	H,7FH
	JR	Z,J$7428
	DEC	H
J$7428:	LD	A,(HL)
	PUSH	HL
	POP	IX
	EXX
	SUB	0FFH
	RET	NC
	DEC	A
	RET
?.7432:	EXX
	LD	C,A
	EX	AF,AF'
	LD	A,C
	ADD	A,8CH
	LD	C,A
J$7439:	LD	HL,(D$7FAA)
	CALL	C.74A4
	JR	Z,J$744A
	EX	AF,AF'
	LD	B,7FH
	LD	A,(BC)
	SET	6,A
	EXX
	EI
	RET
J$744A:	IN	A,(0AAH)
	LD	L,A
J$744D:	CALL	C.745C
	JR	Z,J$744D
J$7452:	CALL	C.745C
	JR	NZ,J$7452
	LD	A,L
	OUT	(0AAH),A
	JR	J$7439

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C.745C:	PUSH	HL
	LD	H,10H	; 16 
	LD	DE,I$7FB0
J$7462:	DJNZ	J$7462
J$7464:	PUSH	HL
	LD	A,(DE)
	LD	L,A
	CALL	C$74C5
	JR	NZ,J$7482
	CALL	C.7545			; select DOS2 driver in BANK1 and enable write
	LD	A,50H	; "P"
	SUB	H
	LD	B,5FH	; "_"
	LD	(BC),A
	ADD	A,A
	ADD	A,A
	ADD	A,A
	ADD	A,A
	LD	L,A
	LD	H,5EH	; "^"
	INC	HL
	RES	7,(HL)
	CALL	C.79BD
J$7482:	POP	HL
	INC	DE
	DEC	H
	JR	NZ,J$7464
	POP	HL
	INC	H
	LD	A,H
	AND	40H	; "@"
	XOR	L
	OUT	(0AAH),A
	BIT	6,B
	RET

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C.7492:	PUSH	HL
	LD	HL,I$F1C5
	JR	C,J$749C
	LD	(HL),01H	; 1 
	POP	HL
	RET

J$749C:	SRA	(HL)
	POP	HL
	CCF
	RET	NC
	LD	A,06H	; 6 
	RET

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C.74A4:	CALL	C.74A9
	RET	NZ
	LD	L,H

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C.74A9:	PUSH	HL
	LD	A,L
	AND	0FH	; 15 
	LD	H,A
	IN	A,(0AAH)
	AND	0F0H
	OR	H
	OUT	(0AAH),A
	IN	A,(0A9H)
	LD	H,A
	LD	A,L
	RLCA
J$74BA:	RLC	H
	ADD	A,20H	; " "
	JR	NC,J$74BA
	XOR	H
	RRA
	SBC	A,A
	POP	HL
	RET

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C$74C5:	CALL	C.74A9
	RET	NZ
J$74C9:	CALL	C.74A9
	JR	Z,J$74C9
	XOR	A
	RET

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C.74D0:	LD	A,(IX)
J$74D3:	LD	(IY+4),0FFH
	LD	(IY+8),00H
	OR	(IY)
	LD	(IY+11),A
	LD	(IY+12),0FH	; 15 
	LD	(IY+13),43H	; "C"
	LD	(IY+14),04H	; 4 
	LD	(IY+2),20H	; " "
J$74F1:	LD	A,(IY+4)
	AND	14H	; 20 
	JR	Z,J$74F1
	LD	(IY+4),0FFH
	CP	10H	; 16 
	JR	NZ,J$750A
J$7500:	LD	A,(IY+5)
	RLA
	JR	NC,J$7500
	RRA
	AND	07H	; 7 
	RET
J$750A:	XOR	A
	LD	(IY+2),A
	LD	(IY+11),A
	LD	A,02H	; 2 
	SCF
	RET

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C.7515:	XOR	A
J$7516:	BIT	3,(IY+5)
	JR	NZ,J$7516
	BIT	5,(IY+4)
	LD	(IY+4),0FFH
	RET	NZ
	LD	(IY+11),A
	LD	(IY+2),A
	LD	A,0CH	; 12 
	SCF
	RET

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C.752F:	SCF
	CALL	C.7492
	RET	C
;

;	 Subroutine enable SPC
;	    Inputs  ________________________
;	    Outputs ________________________

C.7534:	PUSH	AF
	LD	A,40H
	LD	(D.7FFE),A		; enable SPC
	POP	AF
	LD	IY,I.5FF0
	RET

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C.7540:	SCF
	CALL	C.7492
	RET	C
;

;	 Subroutine select DOS2 driver in BANK1 and enable write
;	    Inputs  ________________________
;	    Outputs ________________________

C.7545:	PUSH	AF
	LD	A,1
	LD	(D.5000),A		; SCC select BANK1 (DOS2 segment 0 driver) at 04000H-5FFFH
	LD	A,10H
	DI
	LD	(D.7FFE),A		; enable SRAM write
	POP	AF
	RET

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C.7553:	LD	A,B
	EXX
	LD	E,A
	LD	B,(IX+8)
	LD	C,(IX+9)
	LD	A,B
	SUB	02H	; 2 
	OR	C
	LD	D,A
	EXX
	RET	Z
	EXX
	LD	A,B
	OR	C
	EXX
	LD	A,02H	; 2 
	SCF
	RET	Z
	EXX
	LD	D,00H
	LD	A,B
	DEC	A
	OR	C
	EXX
	LD	A,0AH	; 10 
	SCF
	RET	NZ
	SLA	E
	RL	D
	RL	C
	EXX
	SLA	E
	XOR	A
	EXX
	RET

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C$7582:	LD	A,C
	PUSH	DE
	EXX
	POP	HL
	ADD	HL,DE
	ADC	A,D
	LD	D,A
	LD	A,(IX+7)
	SUB	L
	LD	A,(IX+6)
	SBC	A,H
	LD	A,(IX+5)
	SBC	A,D
	EXX
	LD	A,0CH	; 12 
	RET	C
	LD	A,E
	ADD	A,(IX+4)
	LD	E,A
	LD	A,D
	ADC	A,(IX+3)
	LD	D,A
	LD	A,C
	ADC	A,(IX+2)
	LD	C,A
	XOR	A
	RET

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C.75AA:	XOR	A
	LD	(IY+4),0FFH
	LD	(IY+1),A
	LD	(IY+2),10H	; 16 
J$75B6:	EX	(SP),HL
	EX	(SP),HL
	DEC	A
	JR	NZ,J$75B6
	LD	(IY+2),A

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C$75BE:	LD	(IY+1),0D8H
	LD	A,(D$7F90)
	LD	(IY),A
	XOR	A
	LD	(IY+2),A
	LD	(IY+3),A
	LD	(IY+8),A
	LD	(IY+11),A
	LD	(IY+12),A
	LD	(IY+13),A
	LD	(IY+14),A
	LD	(IY+5),A
	LD	(IY+1),18H
	RET

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C.75E6:	BIT	7,D
	JR	NZ,C.7619
	EX	AF,AF'
	DEC	DE
	LD	A,D
	INC	DE
	CP	3EH	; ">"
	PUSH	BC
	LD	B,01H	; 1 
	JR	NC,J$75FD
	EX	AF,AF'
	CALL	C.7619
J$75F9:	POP	BC
	DJNZ	C.75E6
	RET
J$75FD:	EX	AF,AF'
	PUSH	DE
	LD	DE,($SECBUF)
	CALL	C.7619
	POP	DE
	PUSH	HL
	LD	B,HIGH 512
	LD	HL,($SECBUF)
	CALL	C.79AD
	CALL	XFER
	LD	(D.5000),A		; SCC select BANK at 04000H-5FFFH
	POP	HL
	JR	J$75F9

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C.7619:	EX	AF,AF'
	LD	A,B
	EX	AF,AF'
	BIT	6,A
	JR	Z,J$7627
	LD	B,A
	LD	A,50H
	LD	(D.7FFE),A		; enable SRAM write, set MA18
	LD	A,B
J$7627:	EX	AF,AF'
	LD	B,HIGH 512
	CALL	C.F1C6			; transfer
	LD	B,A
	XOR	A
	LD	(D.7FFE),A		; disable SRAM write
	EX	AF,AF'
	BIT	5,H
	JR	Z,J$763D
	LD	H,40H	; "@"
	INC	A
	LD	(D.5000),A		; SCC select BANK at 04000H-5FFFH
J$763D:	DJNZ	C.7619
	RET

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C.7640:	BIT	7,H
	JR	NZ,C.7674
	EX	AF,AF'
	DEC	HL
	LD	A,H
	INC	HL
	CP	3EH	; ">"
	PUSH	BC
	JR	NC,J$7657
	EX	AF,AF'
	LD	B,01H	; 1 
	CALL	C.7674
J$7653:	POP	BC
	DJNZ	C.7640
	RET
J$7657:	EX	AF,AF'
	PUSH	DE
	LD	B,HIGH 512
	LD	DE,($SECBUF)
	CALL	C.79AD
	CALL	XFER
	LD	(D.5000),A		; SCC select BANK at 04000H-5FFFH
	POP	DE
	PUSH	HL
	INC	B
	LD	HL,($SECBUF)
	CALL	C.7674
	POP	HL
	JR	J$7653

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C.7674:	EX	AF,AF'
	LD	A,B
	EX	AF,AF'
	LD	B,A
	AND	40H			; MA18
	OR	10H			; enable SRAM write
	DI
	LD	(D.7FFE),A
	LD	A,B
	EX	AF,AF'
	LD	B,HIGH 512
	CALL	C.F1C6			; transfer
	LD	B,A
	XOR	A
	LD	(D.7FFE),A		; disable SRAM write
	EX	AF,AF'
	BIT	5,D
	JR	Z,J$7697
	LD	D,40H	; "@"
	INC	A
	LD	(D.5000),A		; SCC select BANK at 04000H-5FFFH
J$7697:	DJNZ	C.7674
	RET

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C.769A:	OR	A
J$769B:	LD	E,(HL)
	CALL	C.76A8
	RET	NC
	LD	(HL),E
	INC	HL
	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,J$769B
	RET

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C.76A8:	LD	A,(IY+5)
	BIT	3,A
	RET	Z
	RLA
	JR	NC,C.76A8
	RRA
	AND	07H	; 7 
	XOR	D
	RET	NZ
	LD	(IY+8),D
	BIT	0,D
	JR	NZ,J$76C6
	LD	(IY+11),E
	LD	(IY+2),0E0H
	JR	J.76CD
J$76C6:	LD	(IY+2),0E0H
	LD	E,(IY+11)
J.76CD:	BIT	7,(IY+5)
	JR	NZ,J.76CD
	LD	(IY+2),0C0H
	SCF
	RET

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C.76D9:	LD	A,(IY+5)
	RLA
	JR	NC,C.76D9
	RRA
	AND	07H	; 7 
	CP	D
	RET	NZ
	LD	(IY+4),0FFH
	LD	A,B
	SUB	02H	; 2 
	OR	C
	JR	Z,J$7703
	PUSH	HL
	LD	A,E
	LD	HL,I.0000
J$76F3:	ADD	HL,BC
	DEC	A
	JR	NZ,J$76F3
	LD	(IY+12),A
	LD	(IY+13),H
	LD	(IY+14),L
	POP	HL
	JR	J$770E
J$7703:	LD	(IY+12),A
	LD	(IY+14),A
	LD	A,E
	ADD	A,A
	LD	(IY+13),A
J$770E:	LD	(IY+8),D
	LD	(IY+2),80H
	BIT	0,D
	LD	D,40H	; "@"
	JR	Z,J$7731
	EX	DE,HL
	CALL	C.7736
	EX	DE,HL
J$7720:	RET	C
J$7721:	BIT	4,(IY+4)
	JR	Z,J$7721
J$7727:	LD	A,(IY+5)
	RLA
	JR	NC,J$7727
	RRA
	AND	07H	; 7 
	RET
J$7731:	CALL	C.77A5
	JR	J$7720

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C.7736:	BIT	7,D
	JR	NZ,C.7786
	PUSH	HL
	LD	L,E
	LD	H,D
	ADD	HL,BC
	DEC	HL
	LD	A,H
	CP	40H	; "@"
	JR	NC,J$7750
	LD	HL,I.4001
	CALL	C.7786
J$774A:	POP	HL
	DEC	L
	RET	C
	JR	NZ,C.7736
	RET
J$7750:	CALL	C.7755
	JR	J$774A

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C.7755:	DEC	BC
	LD	A,B
	INC	BC
	CP	02H	; 2 
	JR	C,C.776C
	DEC	B
	DEC	B
	CALL	C.7755
	PUSH	BC
	LD	BC,I.0200
	CALL	NC,C.776C
	POP	BC
	INC	B
	INC	B
	RET

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C.776C:	PUSH	DE
	LD	DE,($SECBUF)
	LD	HL,I.4001
	CALL	C.7786
	POP	DE
	CALL	C.79AD
	PUSH	BC
	LD	HL,($SECBUF)
	CALL	XFER
	POP	BC
	JP	C.7534			; enable SPC

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C.7786:	BIT	0,(IY+6)
	JR	Z,J$7797
	LD	A,(IY+4)
	AND	18H
	JR	Z,C.7786
	LD	A,04H	; 4 
	SCF
	RET

J$7797:	LD	A,L
	PUSH	BC
	CALL	C.F1C6			; transfer
	POP	BC
	DEC	A
	LD	L,A
	LD	H,40H	; "@"
	JR	NZ,C.7786
	XOR	A
	RET

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C.77A5:	BIT	7,H
	JR	NZ,C.7807
	PUSH	HL
	ADD	HL,BC
	DEC	HL
	LD	A,H
	CP	40H	; "@"
	POP	HL
	PUSH	DE
	JR	NC,J$77BE
	LD	E,01H	; 1 
	CALL	C.7807
J$77B8:	POP	DE
	DEC	E
	RET	C
	JR	NZ,C.77A5
	RET
J$77BE:	CALL	C.77C3
	JR	J$77B8

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C.77C3:	DEC	BC
	LD	A,B
	INC	BC
	CP	02H	; 2 
	JR	C,C.77DA
	DEC	B
	DEC	B
	CALL	C.77C3
	PUSH	BC
	LD	BC,I.0200
	CALL	NC,C.77DA
	POP	BC
	INC	B
	INC	B
	RET

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C.77DA:	CALL	C.79AD
	PUSH	BC
	LD	DE,($SECBUF)
	CALL	XFER
	POP	BC
	CALL	C.7534			; enable SPC
	PUSH	HL
	LD	HL,-9
	ADD	HL,BC
	LD	DE,I.4001
	LD	HL,($SECBUF)
	JR	NC,J.77FB
	CALL	C.7807
	POP	HL
	RET
J.77FB:	BIT	1,(IY+6)
	JR	NZ,J.77FB
	LD	A,C
	LDIR
	LD	C,A
	POP	HL
	RET

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C.7807:	BIT	1,(IY+6)
	JR	Z,J$7818
	LD	A,(IY+4)
	AND	18H
	JR	Z,C.7807
	LD	A,04H	; 4 
	SCF
	RET
J$7818:	LD	A,E
	PUSH	BC
	LDI
	LDI
	LDI
	LDI
	LDI
	LDI
	LDI
	LDI
J$782A:	BIT	1,(IY+6)
	JR	Z,J$783D
	LD	E,A
	LD	A,(IY+4)
	AND	18H
	LD	A,E
	JR	Z,J$782A
	LD	A,04H	; 4 
	SCF
	RET

J$783D:	CALL	C.F1C6			; transfer
	POP	BC
	DEC	A
	LD	E,A
	LD	D,40H	; "@"
	JR	NZ,C.7807
	XOR	A
	RET

DSKIO:	EI
	CALL	C.7417


;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C$784D:	JR	NZ,J$78A3
	JR	NC,J.7874
	EX	AF,AF'
	LD	IX,I$4010
J$7856:	EX	AF,AF'
	PUSH	AF
	LD	A,(D.7F88)
	DEC	A
	CP	8FH
	JR	C,J$7866
	POP	AF
	EX	AF,AF'
	LD	A,02H	; 2 
	SCF
	RET
J$7866:	EX	AF,AF'
	LD	A,00H
	LD	IY,(D$7F87)
	CALL	C.001C
	EX	AF,AF'
	POP	AF
	EX	AF,AF'
	RET
J.7874:	SCF
	CALL	C.7492
	RET	C
	PUSH	HL
	EX	DE,HL
	ADD	HL,HL
	LD	A,L
	OR	40H	; "@"
	AND	5FH	; "_"
	LD	E,00H
	LD	D,A
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	A,(D$7F9A)
	ADD	A,H
	LD	C,E
	LD	(D.5000),A		; SCC select BANK at 04000H-5FFFH
	POP	HL
	EX	AF,AF'
	JR	NC,J$7899
	EX	AF,AF'
	CALL	C.7640
	JR	J$789F
J$7899:	EX	AF,AF'
	EX	DE,HL
	CALL	C.75E6
	EX	DE,HL
J$789F:	XOR	A
	JP	C.799E
J$78A3:	BIT	7,C
	JR	Z,J$78A9
	LD	C,00H
J$78A9:	CALL	C.7553
	RET	C
J$78AD:	CALL	C$7582
	RET	C
	CALL	C.752F
	RET	C
	EX	AF,AF'
	LD	A,(D$7F91)
	EXX
	LD	D,01H	; 1 
	JR	NC,J.78CB
	DEC	D
	BIT	6,(IX+1)
	JR	Z,J.78CB
	EXX
	LD	A,00H
J$78C8:	JP	C.799E
J.78CB:	EXX
J$78CC:	EX	AF,AF'
	CALL	C.74D0
	JR	C,J$78C8
	XOR	A
	XOR	A
	LD	(IY+12),A
	LD	(IY+13),A
	LD	(IY+14),0AH	; 10 
	LD	(IY+8),02H	; 2 
	LD	(IY+2),84H
	EX	AF,AF'
	JR	NC,J$78EF
	LD	(IY+10),2AH	; "*"
	JR	J$78F3
J$78EF:	LD	(IY+10),28H	; "("
J$78F3:	EX	AF,AF'
	LD	(IY+10),A
	LD	(IY+10),A
	LD	(IY+10),C
	LD	(IY+10),D
	LD	(IY+10),E
	LD	(IY+10),A
	PUSH	HL
	EXX
	POP	HL
	PUSH	DE
	LD	(IY+10),A
J$790D:	BIT	0,(IY+6)
	JR	Z,J$790D
	LD	(IY+10),E
	LD	(IY+10),A
J$7919:	BIT	4,(IY+4)
	JR	Z,J$7919
	CALL	C.76D9
	LD	D,03H	; 3 
	CALL	C.76A8
	LD	L,E
	LD	D,07H	; 7 
	CALL	C.76A8
	CALL	C.7515
	POP	DE
	LD	A,L
	OR	A
	EXX
	JR	NZ,J$7939
	LD	B,A
	JR	C.799E
J$7939:	CP	18H
	LD	A,08H	; 8 
	SCF
	JR	Z,C.799E
	EX	AF,AF'
	DEC	A
	JP	P,J$78CC
	CALL	C.74D0
	JR	C,C.799E
	XOR	A
	LD	(IY+12),A
	LD	(IY+13),A
	LD	(IY+14),06H	; 6 
	LD	(IY+8),02H	; 2 
	LD	(IY+2),84H
	LD	(IY+10),03H	; 3 
	LD	(IY+10),A
	LD	(IY+10),A
	LD	(IY+10),A
	LD	(IY+10),04H	; 4 
	LD	(IY+10),A
J$7971:	BIT	4,(IY+4)
	JR	Z,J$7971
	LD	D,01H	; 1 
	CALL	C.76A8
	CALL	C.76A8
	CALL	C.76A8
	LD	A,E
	PUSH	AF
	CALL	C.76A8
	LD	D,03H	; 3 
	CALL	C.76A8
	LD	D,07H	; 7 
	CALL	C.76A8
	CALL	C.7515
	POP	AF
	CP	07H	; 7 
	LD	A,00H
	SCF
	JR	Z,C.799E
	LD	A,02H	; 2 

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C.799E:	PUSH	AF
	XOR	A
	LD	(D.7FFE),A		; disable SRAM write
	LD	A,0
	LD	(D.5000),A		; SCC select BANK0 (DOS2 segment 0) at 04000H-5FFFH
	CALL	C.7492
	POP	AF
	RET

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C.79AD:	PUSH	AF
	LD	A,0
	LD	(D.7FFE),A		; disable SRAM write
	LD	(D.5000),A		; SCC select BANK0 (DOS2 segment 0) at 04000H-5FFFH
	POP	AF
	RET

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C.79B8:	CALL	C.79BD
	JR	C.799E

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C.79BD:	PUSH	AF
	PUSH	BC
	PUSH	DE
	PUSH	HL
	LD	A,3*2+1
	LD	(D.7FFE),A		; disable SRAM write
	LD	(D.5000),A		; SCC select BANK7 (DOS2 segment 3 (DOS1) driver) at 04000H-5FFFH
	LD	A,10H
	DI
	LD	(D.7FFE),A		; enable SRAM write
	LD	BC,I$01CD
	LD	DE,I.5E00
	LD	HL,I$7E00
	LDIR
	POP	HL
	POP	DE
	POP	BC
	POP	AF
	JR	C.79AD

DSKCHG:	EI
	CALL	C.7417
J$79E4:	PUSH	HL
	CALL	C,C$7A23
	POP	DE
	LD	B,00H
	RET	C
	INC	B
	BIT	7,(IX+1)
	RET	NZ
	LD	A,(IX)
	DEC	A
	CP	0FEH
	JR	NC,J$7A01
	INC	A
J$79FB:	RRCA
	JR	NC,J$79FB
	ADD	A,A
	JR	NZ,J$7A11
J$7A01:	CALL	C.7540
	DEC	B
	RET	C
	PUSH	IX
	POP	HL
	INC	HL
	RES	5,H
	SET	7,(HL)
	CALL	C.79B8
J$7A11:	EX	AF,AF'
	EX	DE,HL
	OR	A
	CALL	C.741A
	CALL	C$7A92
	LD	B,0FFH
	RET	NC
	CP	0AH	; 10 
	RET	Z
	SCF
	INC	B
	RET

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C$7A23:	JR	NZ,J$7A2C
	LD	IX,I$4013
	JP	J$7856
J$7A2C:	CALL	C.752F
	RET	C
	CALL	C.74D0
	JP	C,C.799E
	LD	HL,I$4000
	LD	(IY+12),L
	LD	(IY+13),L
	LD	(IY+14),06H	; 6 
	LD	(IY+8),02H	; 2 
	LD	(IY+2),80H
	LD	(HL),L
	LD	(HL),L
	LD	(HL),L
	LD	(HL),L
	LD	(HL),L
	LD	(HL),L
J$7A51:	BIT	4,(IY+4)
	JR	Z,J$7A51
	LD	D,03H	; 3 
	CALL	C.76A8
	LD	H,E
	LD	D,07H	; 7 
	CALL	C.76A8
	CALL	C.7515
	CALL	C.799E
	LD	A,H
	OR	A
	RET	Z
	CP	18H
	LD	A,08H	; 8 
	SCF
	RET	Z
	CALL	C.7540
	RET	C
	LD	B,18H
	LD	DE,I.000F
	LD	HL,I.5E00
	LD	A,(IX)
J$7A80:	CP	(HL)
	INC	HL
	JR	NZ,J$7A86
	RES	7,(HL)
J$7A86:	ADD	HL,DE
	DJNZ	J$7A80
	XOR	A
	JP	C.79B8

GETDPB:	EI
	OR	A
	CALL	C.7417
;

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C$7A92:	PUSH	HL
	LD	HL,($SECBUF)
	LD	DE,I.0000
	LD	BC,I$01FF
	CALL	C$784D
	POP	HL
	RET	C
	LD	IY,($SECBUF)
	INC	HL
	PUSH	HL
	LD	BC,I$0012
	EX	DE,HL
	LD	HL,I$7405
	LDIR
	POP	HL
	LD	A,(IY+21)
	CP	0F9H
	RET	Z
	LD	(HL),A
	INC	HL
	LD	A,(IY+11)
	LD	(HL),A
	INC	HL
	LD	A,(IY+12)
	LD	(HL),A
	INC	HL
	LD	(HL),0FH	; 15 
	INC	HL
	LD	(HL),04H	; 4 
	INC	HL
	LD	A,(IY+13)
	DEC	A
	LD	(HL),A
	INC	HL
	ADD	A,01H	; 1 
	LD	B,00H
J$7AD3:	INC	B
	RRA
	JR	NC,J$7AD3
	LD	(HL),B
	INC	HL
	PUSH	BC
	LD	A,(IY+14)
	LD	(HL),A
	INC	HL
	LD	D,(IY+15)
	LD	(HL),D
	INC	HL
	LD	B,(IY+16)
	LD	(HL),B
	INC	HL
J$7AE9:	ADD	A,(IY+22)
	JR	NC,J$7AEF
	INC	D
J$7AEF:	DJNZ	J$7AE9
	LD	C,A
	LD	B,D
	LD	E,(IY+17)
	LD	D,(IY+18)
	LD	A,D
	OR	A
	LD	A,0FEH
	JR	NZ,J$7B00
	LD	A,E
J$7B00:	LD	(HL),A
	INC	HL
	DEC	DE
	LD	A,04H	; 4 
J$7B05:	SRL	D
	RR	E
	DEC	A
	JR	NZ,J$7B05
	INC	DE
	EX	DE,HL
	ADD	HL,BC
	EX	DE,HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
	INC	HL
	LD	A,(IY+19)
	SUB	E
	LD	E,A
	LD	A,(IY+20)
	SBC	A,D
	LD	D,A
	POP	AF
J$7B1F:	DEC	A
	JR	Z,J$7B28
	SRL	D
	RR	E
	JR	J$7B1F
J$7B28:	INC	DE
	LD	(HL),E
	INC	HL
	LD	(HL),D
	INC	HL
	LD	A,(IY+22)
	LD	(HL),A
	INC	HL
	LD	(HL),C
	INC	HL
	LD	(HL),B
	XOR	A
	RET

CHOICE:	CALL	C.7417
	LD	HL,0
	RET	NC
	LD	HL,I$7B43

MTOFF:	XOR	A
	RET

I$7B43:	DEFB	0

        DEFB	"SCSI5FF0"
        DEFB	0

DSKFMT:	LD	A,16
	SCF
	RET

INIHRD:	LD	HL,(D$7FA2)
	CALL	C.74A4
	JR	NZ,J$7B5B
	POP	AF
	RET
J$7B5B:	CALL	C.7534			; enable SPC
	CALL	C$75BE
	LD	HL,(D$7FA4)
	CALL	C.74A4
	CALL	Z,C.75AA
	CALL	C.79AD
	CALL	C.7545			; select DOS2 driver in BANK1 and enable write
	LD	HL,(D$7FA0)
	CALL	C.74A4
	JR	NZ,J$7B94
	LD	HL,I.5E00
	LD	DE,I.5E01
	LD	BC,I$0197
	LD	(HL),L
	LDIR
	LD	A,0FFH
	LD	(D$5F00),A
	LD	A,01H	; 1 
	LD	(D.5F80),A
	LD	HL,I$0307
	LD	(D.5F90),HL
J$7B94:	LD	B,18H
	LD	DE,I.000F
	LD	HL,I.5E00
J$7B9C:	LD	A,(HL)
	INC	HL
	OR	A
	JR	Z,J$7BA3
	SET	7,(HL)
J$7BA3:	ADD	HL,DE
	DJNZ	J$7B9C
	LD	HL,(D$7FA8)
	CALL	C.74A4
	JR	NZ,J$7BB1
	LD	(D.5F88),A
J$7BB1:	LD	A,(D.7F88)
	CP	0FEH
	JR	NZ,J$7BB9
	POP	AF
J$7BB9:	JP	C.79BD

DRIVES:	PUSH	AF
	PUSH	BC
	PUSH	DE
	CALL	C$4DD8
	LD	A,0*2+1
	CALL	C.7C08
	LD	A,3*2+1
	CALL	C.7C08
	LD	(HL),1
	INC	HL
	LD	(HL),0EDH
	INC	HL
	LD	(HL),0B0H
	INC	HL
	LD	(HL),0C9H
	CALL	GETSLT
	LD	DE,(D$7F99)
	LD	H,90H
	CALL	C.0014
	INC	E
	LD	H,0B0H
	CALL	C.0014
	LD	A,(D.7F88)
	OR	A
	JR	NZ,J$7BFC
	LD	HL,(D$7FA6)
	CALL	C.74A4
	AND	02H	; 2 
	LD	(D$F33F),A
	JR	J$7C01
J$7BFC:	LD	HL,DEVICE
	INC	(HL)
	POP	DE
J$7C01:	LD	HL,(D$7F80)
	POP	DE
	POP	BC
	POP	AF
INIENV:	RET


;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C.7C08:	LD	(D.5000),A		; SCC select BANK at 04000H-5FFFH
	LD	A,10H
	LD	(D.7FFE),A		; enable SRAM write
	PUSH	HL
	LD	(D$5494),HL
	INC	HL
	LD	(D$562B),HL
	LD	(D$5685),HL
	LD	(D$579A),HL
	LD	(D$583E),HL
	LD	A,(D.7F88)
	OR	A
	LD	HL,I$32CD
	JR	NZ,J$7C38
	LD	C,0FFH
	LD	DE,I.5E01
	LD	HL,I.5E00
	LD	(HL),L
	LDIR
	LD	HL,I$0118
J$7C38:	LD	(D$5417),HL
	POP	HL
	JP	C.79AD
?.7C3F:	LD	A,(D.7F88)
	OR	A
	JR	Z,J$7C62
	CALL	C.7545			; select DOS2 driver in BANK1 and enable write
	LD	A,(D.FB22)
	LD	(D.5F88),A
	CALL	C.79BD
	CALL	GETSLT
	LD	(D.FB22),A
	LD	(D$FB2C),A
	LD	HL,I$7FDA
	LD	(D$FB2D),HL
	JR	J.7C6B
J$7C62:	LD	A,(D$7F81)
	OR	A
	JR	Z,J.7C6B
	LD	(D$F2FD),A		; bootdrive
J.7C6B:	JP	J$4969
J$7C6E:	PUSH	HL
	PUSH	AF
	LD	HL,I$7C86
J$7C73:	SUB	(HL)
	INC	HL
	JR	C,J$7C7B
	INC	HL
	INC	HL
	JR	J$7C73
J$7C7A	EQU	$-1
J$7C7B:	LD	A,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,A
	POP	AF
J$7C80:	EX	(SP),HL
	LD	IY,I.5FF0
J$7C83	EQU	$-2
	RET
I$7C86:	EX	AF,AF'
	CALL	PE,C$087C
	JP	(HL)
?.7C8B:	LD	A,H
J$7C8C:	EX	AF,AF'
	RET	M
	LD	A,H
J$7C8F:	JR	Z,J$7C7A
	LD	A,H
	DJNZ	J$7C80
	LD	A,H
	DJNZ	J$7C8F
	LD	A,H
	JR	NZ,J$7C83
	LD	A,H
	INC	B
	CP	7CH	; "|"
	INC	B
	DEC	HL
	LD	A,L
	JR	J$7C8C
?.7CA3:	LD	A,H
	LD	BC,I$7D4C
	LD	BC,I.7CE9
	LD	(BC),A
	LD	D,E
	LD	A,L
	LD	(BC),A
	LD	E,D
	LD	A,L
	LD	(BC),A
	LD	H,C
	LD	A,L
	LD	(BC),A
	LD	L,B
	LD	A,L
	LD	(BC),A
	LD	L,A
	LD	A,L
	INC	D
	JP	(HL)
?.7CBB:	LD	A,H
	LD	BC,I$7D76
	LD	BC,C.75AA
	LD	BC,I.7CE9
	LD	BC,C.7492
	LD	BC,C.799E
	LD	BC,C.79AD
	LD	BC,C.752F
	LD	BC,C.7534
	LD	BC,I$7DB8
	LD	BC,C.7515
	LD	BC,I$7DBC
	LD	BC,I$7DC2
	LD	BC,C.769A
	LD	BC,C.76D9
	RST	38H
	JP	(HL)
?.7CE8:	LD	A,H
I.7CE9:	SCF
	SBC	A,A
	RET
?.7CEC:	CALL	C.741A
	JP	NC,J.7874
	CALL	C.7553
	JP	J$78AD
?.7CF8:	CALL	C.741A
	JP	J$79E4
?.7CFE:	RRA
	JR	C,J$7D27
	PUSH	HL
	RRA
	LD	BC,I$0800
	LD	DE,I$0010
	LD	HL,I$7F00
	JR	NC,J.7D11
	SLA	B
	DEC	H
J.7D11:	LD	A,(HL)
	OR	A
	JR	Z,J$7D1E
	ADD	HL,DE
	INC	C
	DJNZ	J.7D11
	POP	HL
	LD	A,0CH	; 12 
	SCF
	RET
J$7D1E:	POP	DE
	RES	5,H
	PUSH	BC
	CALL	C$7D3A
	POP	BC
	RET
J$7D27:	LD	HL,I$7FC0
	RLA
	LD	D,5FH	; "_"
	BIT	1,A
	JR	Z,J$7D32
	DEC	D
J$7D32:	LD	B,A
	LD	A,C
	ADD	A,A
	ADD	A,A
	ADD	A,A
	ADD	A,A
	LD	E,A
	LD	A,B

;	 Subroutine __________________________
;	    Inputs  ________________________
;	    Outputs ________________________

C$7D3A:	LD	C,10H	; 16 
J.7D3C:	LD	B,00H
	RRA
	JR	C,J$7D42
	EX	DE,HL
J$7D42:	CALL	C.7540
	RET	C
	LDIR
	XOR	A
	JP	C.79B8
I$7D4C:	XOR	A
	LD	A,03H	; 3 
	LD	BC,I$0215
	RET
?.7D53:	LD	C,02H	; 2 
	LD	DE,D.5F90
	JR	J.7D3C
?.7D5A:	LD	C,04H	; 4 
	LD	DE,I$5F98
	JR	J.7D3C
?.7D61:	LD	C,08H	; 8 
	LD	DE,D.5F80
	JR	J.7D3C
?.7D68:	LD	C,08H	; 8 
	LD	DE,D.5F88
	JR	J.7D3C
?.7D6F:	LD	C,0CH	; 12 
	LD	DE,I$5FA0
	JR	J.7D3C
I$7D76:	PUSH	HL
	POP	IX
	CALL	C.752F
	RET	C
	CALL	C.74D0
	JR	C,J$7DB5
	LD	BC,I.0000
	LD	D,02H	; 2 
	LD	L,(IX+2)
	LD	H,(IX+3)
	CALL	C.769A
	AND	01H	; 1 
	LD	D,A
	LD	L,(IX+4)
	LD	H,(IX+5)
	CALL	C.769A
	LD	D,03H	; 3 
	LD	L,(IX+6)
	LD	H,(IX+7)
	CALL	C.769A
	LD	D,07H	; 7 
	LD	L,(IX+8)
	LD	H,(IX+9)
	CALL	C.769A
	CALL	C.7515
J$7DB5:	JP	C.799E
I$7DB8:	LD	A,C
	JP	J$74D3
I$7DBC:	LD	(IY+2),60H	; "`"
	XOR	A
	RET
I$7DC2:	LD	(IY+2),40H	; "@"
	XOR	A
	RET
?.7DC8:	LDIR
	RET
?.7DCB:	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0
I$7E00:	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
I$7F00:	RST	38H
	ADD	A,B
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0
D$7F80:	LD	BC,I.0000
D$7F81	EQU	$-2
	DEFB	0,0,0,0
D$7F87:	DEFB	0
D.7F88:	DEFB	0,0,0,0,0,0,0,0
D$7F90:	RLCA
D$7F91:	INC	BC
	DEFB	0,0,0,0,0,0
	ADD	A,B
D$7F99:	EX	AF,AF'
D$7F9A:	EX	AF,AF'
	LD	A,B
	DEFB	0,0,0,0
D$7FA0:	LD	H,27H	; "'"
D$7FA2:	LD	H,38H	; "8"
D$7FA4:	LD	H,37H	; "7"
D$7FA6:	LD	D,16H
D$7FA8:	LD	H,28H	; "("
D$7FAA:	LD	B,(HL)
	LD	B,(HL)
	DEFB	0,0,0,0
I$7FB0:	ADD	HL,SP
	LD	C,C
	LD	E,C
	LD	L,C
	LD	A,C
	LD	A,(BC)
	LD	A,(DE)
	LD	HL,(D$4A3A)
	LD	A,D
	LD	L,D
	ADD	HL,DE
	LD	E,D
	ADD	HL,BC
	ADD	HL,HL
I$7FC0:	DEFB	0,0,0,0,0,0,0,0,0,0,0,0
	EI
	JP	J$7C6E

;	  Subroutine MSXDOS2 bank selector
;	     Inputs  A = MSXDOS2 bank number (0-3)
;	     Outputs ________________________

J$7FD0:	PUSH	AF
	ADD	A,A
	LD	(D.5000),A		; SCC select BANK at 04000H-5FFFH
	INC	A
	LD	(D$7000),A		; SCC select BANK at 06000H-7FFFH
	POP	AF
I$7FDA:	RET

?.7FDB:	JP	J$6FC0
?.7FDE:	RET
?.7FDF:	RET

?.7FE0:	LD	C,L
	LD	B,L
	LD	B,A
	LD	B,C
	LD	D,E
	LD	B,E
	LD	D,E
	LD	C,C
	JR	NZ,J$8060
	LD	H,L
	LD	(HL),D
	LD	(D$312E),A
	DEC	(HL)
	JR	NZ,J$8054
	LD	A,C
	JR	NZ,J$8040
	LD	L,54H	; "T"
	LD	(HL),E
	LD	(HL),L
	LD	L,D
	LD	L,C
	LD	L,E
	LD	H,C
	LD	(HL),A
D.7FFE:	LD	H,C
	DEFB	2EH		; << Illegal Op Code Byte >>
	END
