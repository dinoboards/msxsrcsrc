; Diskdriver Canon V-30F (internal floppydisk controller)
; FDC	MB8877A

; Source re-created by Z80DIS 2.2
; Z80DIS was written by Kenneth Gielow, Palo Alto, CA

; Code Copyrighted by Canon and maybe others
; Source comments by Arjen Zeilemaker

; Sourcecode supplied for STUDY ONLY
; Recreation NOT permitted without authorisation of the copyrightholders


MYSIZE	EQU	7
SECLEN	EQU	512

BASENT	EQU	4022H

D7FF8	EQU	07FF8H			; MB8877A
D7FF9	EQU	07FF9H			; MB8877A
D7FFA	EQU	07FFAH			; MB8877A
D7FFB	EQU	07FFBH			; MB8877A
D7FFC	EQU	07FFCH			; drive control
					; b1,b0	R/W	drive select (0 = drive 0, 1 = drive 1, 3 = deselect drive)
					; b2	R/W	side select (0 = side 0, 1 = side 1)
					; b3	R/W	motor on (1 = motor on)
					; b4	R	disk changed (0 = changed)
					; b5	R	some sort of ready (1 = ready)
					; b6	R	DRQ (1 = DRQ)
					; b7	R	IRQ (1 = IRQ)

DBFF8	EQU	D7FF8+4000H
DBFFA	EQU	D7FFA+4000H
DBFFB	EQU	D7FFB+4000H
DBFFC	EQU	D7FFC+4000H


I7405:
        DEFB	0F8h			; Media F8
        DEFW	512			; 80 Tracks
        DEFB	0Fh			; 9 sectors
        DEFB	04h			; 1 side
        DEFB	01h			; 3.5" 360 Kb
        DEFB	02h
        DEFW	1
        DEFB	2
        DEFB	112
        DEFW	12
        DEFW	355
        DEFB	2
        DEFW	5

DEFDPB  EQU     $-1

I7417:
	DEFB	0F9h			; Media F9
        DEFW	512			; 80 Tracks
        DEFB	0Fh			; 9 sectors
        DEFB	04h			; 2 sides
        DEFB	01h			; 3.5" 720 Kb
        DEFB	02h
        DEFW	1
        DEFB	2
        DEFB	112
        DEFW	14
        DEFW	714
        DEFB	3
        DEFW	7

I7429:
        DEFB	0FAh			; Media FA
        DEFW	512			; 80 Tracks
        DEFB	0Fh			; 8 sectors
        DEFB	04h			; 1 side
        DEFB	01h			; 3.5" 320 Kb
        DEFB	02h
        DEFW	1
        DEFB	2
        DEFB	112
        DEFW	10
        DEFW	315
        DEFB	1
        DEFW	3

I743B:
        DEFB	0FBh			; Media FB
        DEFW	512			; 80 Tracks
        DEFB	0Fh			; 8 sectors
        DEFB	04h			; 2 sides
        DEFB	01h			; 3.5" 640 Kb
        DEFB	02h
        DEFW	1
        DEFB	2
        DEFB	112
        DEFW	10
        DEFW	635
        DEFB	2
        DEFW	5


;	  Subroutine DSKIO
;	     Inputs  ________________________
;	     Outputs ________________________

DSKIO:
C744D:	EI
	JP	NC,J7539
	CALL	C746B

; finish DSKIO

J7454:	PUSH	AF
	LD	A,0D0H
	LD	(D7FF8),A
	EX	(SP),HL
	EX	(SP),HL
	EX	(SP),HL
	EX	(SP),HL
	LD	A,(D7FFB)		; reset DRQ
	LD	A,(D7FF8)		; reset IRQ
	LD	A,3
	LD	(D7FFC),A		; deselect drive, motor off
	POP	AF
	RET

;	  Subroutine DSKIO write
;	     Inputs  ________________________
;	     Outputs ________________________

C746B:	CALL	C75EB			; setup for disk operation
	RET	C
	LD	A,H
	AND	A
	JP	M,J749B
	CALL	C787F			; install write sector routine in $SECBUF
	CALL	C78FE			; start routine in $SECBUF
	RET	C
	INC	B
	DEC	B
	RET	Z
	LD	A,H
	AND	A
	JP	M,J749B
	PUSH	HL
	PUSH	DE
	PUSH	BC
	LD	DE,($SECBUF)
	PUSH	DE
	LD	BC,SECLEN
	CALL	XFER
	POP	HL
	POP	BC
	POP	DE
	CALL	C74A7			; write sector
	POP	HL
	JP	J749E

J749B:	CALL	C74A7			; write sector
J749E:	RET	C
	DEC	B
	RET	Z
	CALL	C769B			; setup for next sector
	JP	J749B			; next sector

;	  Subroutine write sector
;	     Inputs  ________________________
;	     Outputs ________________________

C74A7:	LD	E,11
J74A9:	CALL	C76F3			; wait for ready
	LD	A,0A0H
	BIT	6,D
	JR	Z,J74BA
	OR	02H
	BIT	2,D
	JR	Z,J74BA
	OR	08H
J74BA:	PUSH	HL
	PUSH	DE
	PUSH	BC
	LD	DE,I74DC
	PUSH	DE
	CALL	DISINT
	DI
	LD	(D7FF8),A
	EX	(SP),HL
	EX	(SP),HL
	LD	BC,D7FFC
	LD	DE,D7FFB
J74D0:	LD	A,(BC)
	ADD	A,A
	RET	M			; IRQ, quit
	JP	NC,J74D0		; no DRQ, wait
	LD	A,(HL)
	LD	(DE),A
	INC	HL
	JP	J74D0

I74DC:	POP	BC
	POP	DE
	POP	HL
	EI
	CALL	ENAINT
	LD	A,(D7FF8)
	AND	0FCH
	RET	Z
	JP	M,J752D
	BIT	6,A
	JR	NZ,J750C
	PUSH	AF
	CALL	C76DB			; reseek cylinder
	POP	AF
	DEC	E			; retries left ?
	JR	NZ,J74A9		; yep, try again
J74F8:	SCF
	LD	E,A
J74FA:	BIT	5,E
	LD	A,0AH
	RET	NZ
	BIT	4,E
	LD	A,08H
	RET	NZ
	BIT	3,E
	LD	A,04H
	RET	NZ
	LD	A,0CH			; OTHER ERROR
	RET

J750C:	LD	A,0D0H
	LD	(D7FF8),A
	EX	(SP),HL
	EX	(SP),HL
	LD	A,80H
	LD	(D7FF8),A
	EX	(SP),HL
	EX	(SP),HL
	LD	HL,D7FFC
	LD	DE,0
J7520:	LD	A,(HL)
	ADD	A,A
	JP	M,J7536			; IRQ,
	JR	C,J7536			; DRQ,
	DEC	DE
	LD	A,E
	OR	D
	JP	NZ,J7520

J752D:	LD	A,3
	LD	(D7FFC),A		; deselect drive, motor off
	LD	A,2
	SCF
	RET

J7536:	XOR	A
	SCF
	RET

;	  Subroutine DSKIO read
;	     Inputs  ________________________
;	     Outputs ________________________

J7539:	CALL	C753F
	JP	J7454			; finish DSKIO

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C753F:	CALL	C75EB			; setup for disk operation
	RET	C
	LD	A,H
	AND	A
	JP	M,J7574
	CALL	C786B			; install read sector routine in $SECBUF
	CALL	C78FE			; start routine in $SECBUF
	RET	C
	INC	B
	DEC	B
	RET	Z
	LD	A,H
	AND	A
	JP	M,J7574
	PUSH	HL
	LD	HL,($SECBUF)
	CALL	C7580			 ; read sector
	POP	HL
	RET	C
	PUSH	HL
	PUSH	DE
	PUSH	BC
	EX	DE,HL
	LD	HL,($SECBUF)
	LD	BC,SECLEN
	CALL	XFER
	POP	BC
	POP	DE
	POP	HL
	AND	A
	JP	J7578

J7574:	CALL	C7580			; read sector
	RET	C

J7578:	DEC	B
	RET	Z
	CALL	C769B			; setup for next sector
	JP	J7574

;	  Subroutine read sector
;	     Inputs  ________________________
;	     Outputs ________________________

C7580:	LD	E,11
J7582:	CALL	C76F3			; wait for ready
	LD	A,80H
	BIT	6,D
	JR	Z,J7593
	OR	02H
	BIT	2,D
	JR	Z,J7593
	OR	08H
J7593:	PUSH	HL
	PUSH	DE
	PUSH	BC
	LD	BC,D7FFC
	LD	DE,I75D0
	PUSH	DE
	CALL	DISINT
	DI
	LD	(D7FF8),A
	EX	(SP),HL
	EX	(SP),HL
	LD	DE,0
J75A9:	LD	A,(BC)
	ADD	A,A
	JP	C,J75BE			; DRQ,
	RET	M			; IRQ, quit
	DEC	E
	JP	NZ,J75A9
	DEC	D
	JP	NZ,J75A9
	POP	BC
	POP	BC
	POP	DE
	POP	HL
	JP	J752D

J75BE:	LD	DE,D7FFB
	JP	J75CA

J75C4:	LD	A,(BC)
	ADD	A,A
	RET	M			; IRQ, quit
	JP	NC,J75C4		; no DRQ, wait
J75CA:	LD	A,(DE)
	LD	(HL),A
	INC	HL
	JP	J75C4

I75D0:	POP	BC
	POP	DE
	POP	HL
	EI
	CALL	ENAINT
	LD	A,(D7FF8)
	AND	9CH
	RET	Z
	JP	M,J752D
	PUSH	AF
	CALL	C76DB			; reseek cylinder
	POP	AF
	DEC	E			; retries left ?
	JR	NZ,J7582		; yep, try again
	JP	J74F8

;	  Subroutine setup for disk operation
;	     Inputs  ________________________
;	     Outputs ________________________

C75EB:	PUSH	AF
	PUSH	BC
	PUSH	HL
	CALL	GETWRK			; GETWRK
	POP	HL
	POP	BC
	POP	AF
	CP	1+1			; driveid valid ?
	JR	C,J75FC			; yep, continue
J75F8:	LD	A,0CH
	SCF
	RET

J75FC:	PUSH	AF
	LD	A,C
	CP	0F8H			; mediabyte valid ?
	JR	NC,J7605
	POP	AF
	JR	J75F8			; nope, quit with OTHER ERROR

J7605:	EX	(SP),HL			; restore drive, store transfer address
	PUSH	HL			; store drive
	PUSH	BC			; store mediabyte, number of sectors
	CALL	C76F3			; wait for ready
	BIT	1,C			; 8 sectors per track ?
	LD	C,E
	LD	B,D			; sector number
	LD	DE,8
	JR	NZ,J7615		; yep,
	INC	DE			; nope, 9 sectors per track
J7615:	CALL	DIV16			; DIV16
	LD	A,L
	INC	A			; record is 1 based
	LD	(D7FFA),A		; record
	LD	L,C			; track number
	POP	BC			; restore mediabyte, number of sectors
	POP	AF			; restore drive
	LD	H,A
	LD	A,(IX+6)
	DEC	A			; 1 physical drive ?
	JR	Z,J7628			; yep, use physical drive 0
	LD	A,H			; physical drive
J7628:	ADD	A,8			; motor on
	BIT	0,C			; double sided media ?
	JR	Z,J7634			; nope, cylinder = track
	SRL	L			; cylinder = track/2
	JR	NC,J7634
	OR	04H			; side 1
J7634:	LD	D,A
	LD	A,C
	RRCA
	RRCA
	AND	0C0H
	OR	D
	LD	D,A
	LD	(D7FFC),A		; select drive, select side, motor on
	LD	C,L
	LD	A,(IX+6)
	DEC	A			; 1 physical drive ?
	JR	Z,J766B			; yep,
	LD	A,(IX+2)
	CP	H			; same physical drive ?
	JR	Z,J7692			; yep, skip cylinder register update
	XOR	1
	LD	(IX+2),A		; update physical drive saved cylinder register
	LD	A,(D7FF9)		; cylinder register
	JR	Z,J765E
	LD	(IX+3),A		; update saved cylinder drive 0
	LD	A,(IX+4)		; saved cylinder drive 1
	JR	J7664

J765E:	LD	(IX+4),A		; update saved cylinder drive 1
	LD	A,(IX+3)		; saved cylinder drive 0
J7664:	LD	(D7FF9),A		; update cylinder register
	EX	(SP),HL
	EX	(SP),HL
	JR	J7695

J766B:	LD	A,H
	CP	(IX+5)			; same phantom drive ?
	LD	(IX+5),A
	JR	Z,J7692			; yep, skip prompt
	PUSH	IX
	PUSH	DE
	PUSH	BC
	LD	A,(D7FFC)
	PUSH	AF			; save drive, motor, side
	LD	A,3
	LD	(D7FFC),A		; deselect drive, motor off
	CALL	PROMPT			; PROMPT
	POP	AF
	LD	(D7FFC),A		; restore drive, select side, motor on
	CALL	C7710			; seek to cylinder 0
	CALL	C76CC			; seek to next cylinder (resets disk change)
	POP	BC
	POP	DE
	POP	IX
J7692:	LD	A,(D7FF9)
J7695:	CP	C			; already on the correct cylinder ?
	CALL	NZ,C76E1		; nope, seek to cylinder
	POP	HL
	RET

;	  Subroutine setup for next sector
;	     Inputs  ________________________
;	     Outputs ________________________

C769B:	CALL	C76F3			; wait for ready
	INC	H
	INC	H			; update transfer address
	LD	A,(D7FFA)
	INC	A
	LD	(D7FFA),A		; update record
	BIT	7,D
	JR	NZ,J76AE
	CP	9+1
	RET	C
J76AE:	CP	8+1
	RET	C
	LD	A,1
	LD	(D7FFA),A		; record 1
	BIT	6,D			; single sided ?
	JR	Z,J76C5			; yep, next cylinder, side 0
	BIT	2,D			; side 1 ?
	JR	NZ,J76C5		; yep, next cylinder, side 0
	SET	2,D			; side 1
	LD	A,D
	LD	(D7FFC),A		; update side
	RET

J76C5:	RES	2,D			; side 0
	LD	A,D
	LD	(D7FFC),A		; update side
	INC	C

;	  Subroutine seek to next cylinder
;	     Inputs  ________________________
;	     Outputs ________________________

C76CC:	CALL	C76F3			; wait for ready
	LD	A,50H			; STEP IN with cylinder update

;	  Subroutine execute seek operation
;	     Inputs  ________________________
;	     Outputs ________________________

C76D1:	LD	(D7FF8),A
	EX	(SP),HL
	EX	(SP),HL
	CALL	C76F3			; wait for ready
	JR	C771D			; wait for head settle and quit

;	  Subroutine reseek cylinder
;	     Inputs  ________________________
;	     Outputs ________________________

C76DB:	BIT	0,E			; even retry ?
	RET	NZ			; nope, quit (no reseek)
	CALL	C7710			; seek to cylinder 0

;	  Subroutine seek to cylinder
;	     Inputs  ________________________
;	     Outputs ________________________

C76E1:	LD	A,C
	LD	(D7FFB),A
	EX	(SP),HL
	EX	(SP),HL
	LD	A,10H			; SEEK
J76E9:	LD	(D7FF8),A
	EX	(SP),HL
	EX	(SP),HL
	CALL	C76F3			; wait for ready
	JR	C771D			; wait for head settle and quit

;	  Subroutine wait for ready
;	     Inputs  ________________________
;	     Outputs ________________________

C76F3:	PUSH	HL
	LD	A,(D7FFC)
	BIT	5,A			; ? ready ?
	LD	A,(D7FF8)		; reset FDC IRQ
	JR	NZ,J7708		; yep, skip wait
	LD	HL,0DA78H
J7701:	EX	(SP),HL
	EX	(SP),HL
	DEC	HL
	LD	A,H
	OR	L
	JR	NZ,J7701
J7708:	POP	HL
J7709:	LD	A,(D7FF8)
	RRA				; FDC ready ?
	JR	C,J7709			; nope, wait
	RET

;	  Subroutine seek to cylinder 0
;	     Inputs  ________________________
;	     Outputs ________________________

C7710:	CALL	C76F3			; wait for ready
	LD	A,00H			; RESTORE
	JR	J76E9

;	  Subroutine wait for head load
;	     Inputs  ________________________
;	     Outputs ________________________

C7717:	PUSH	HL
	LD	HL,00C8H
	JR	J7721

;	  Subroutine wait for head settle
;	     Inputs  ________________________
;	     Outputs ________________________

C771D:	PUSH	HL
	LD	HL,0AC2H
J7721:	DEC	HL
	LD	A,H
	OR	L
	JR	NZ,J7721
	POP	HL
	RET

INIHRD:
?7728:	LD	A,0D0H
	LD	(D7FF8),A		; force interrupt, terminate without IRQ
	EX	(SP),HL
	EX	(SP),HL
	LD	A,0			; physical drive 0, side 0, motor off
	CALL	C7749			; initialize drive
	JR	NC,J7738		; initialized ok,
	POP	HL
	RET				; quit disk interface initialization

J7738:	CALL	C771D			; wait for head settle
	LD	A,1			; physical drive 1, side 0, motor off
	CALL	C7749			; initialize drive
	CALL	C771D			; wait for head settle
	LD	A,3
	LD	(D7FFC),A		; deselect drive, motor off

MTOFF:
	RET

;	  Subroutine initialize drive
;	     Inputs  ________________________
;	     Outputs ________________________

C7749:	LD	(D7FFC),A		; select drive, select side, motor
	CALL	C76CC			; seek to next cylinder
	CALL	C76CC			; seek to next cylinder (resets disk change, force from track 0)
	CALL	C76F3			; wait for ready
	LD	A,00H
	LD	(D7FF8),A		; RESTORE (seek to cylinder 0)
	EX	(SP),HL
	EX	(SP),HL
	LD	HL,0
J775F:	LD	A,(D7FF8)
	RRA				; FDC still busy ?
	RET	NC			; nope, quit
	DEC	HL
	LD	A,L
	OR	H
	JR	NZ,J775F
	SCF
	RET

DRIVES:
?776B:	PUSH	BC
	PUSH	AF
	CALL	GETWRK			; GETWRK
	LD	A,1
	LD	(D7FFC),A		; select drive 1, side 0, motor off
	CALL	C76F3			; wait for ready
	LD	A,00H
	LD	(D7FF8),A		; RESTORE
	EX	(SP),HL
	EX	(SP),HL
	LD	HL,0
J7782:	LD	A,(D7FF8)
	RRA				; FDC busy ?
	JR	NC,J778F		; nope, FDD is connected, 2 physical drives
	DEC	HL
	LD	A,L
	OR	H
	JR	NZ,J7782
	INC	L			; 1 physical drive
	DEFB	0CAH			; JP Z,xxxx: trick to skip next instruction
J778F:	LD	L,2
	LD	(IX+6),L		; number of physical drives
	LD	A,3
	LD	(D7FFC),A		; deselect drive, motor off
	POP	AF
	JR	Z,J779E			; CTRL pressed, return physical drive
	LD	L,2			; return 2 phantom drives
J779E:	POP	BC
	RET

INIENV:
?77A0:	CALL	GETWRK			; GETWRK
	XOR	A
	LD	B,MYSIZE-1
J77A6:	LD	(HL),A
	INC	HL
	DJNZ	J77A6			; initialize driver workarea
	RET

DSKCHG:
?77AB:	EI
	PUSH	HL
	PUSH	BC
	PUSH	AF
	CALL	GETWRK			; GETWRK
	POP	AF
	POP	BC
	LD	D,(IX+6)
	DEC	D			; 1 physical drive ?
	LD	B,1			; assume disk unchanged
	PUSH	AF			; store drive
	JR	NZ,J77C3		; nope, physical drive = drive
	CP	(IX+5)			; same phantom drive ?
	JR	NZ,J77E7		; nope, reread disk and quit
	XOR	A			; drive 0
J77C3:	LD	HL,D7FFC
	LD	(HL),A			; select drive, side 0, motor off
	EX	(SP),HL
	EX	(SP),HL
	POP	AF
	BIT	4,(HL)			; disk changed ?
	JR	Z,J77DE			; yep, reset disk change and reread disk
	LD	A,3
	LD	(HL),A			; deselect drive
	AND	A			; ok
	POP	HL
	RET

?77D4:	LD	A,(D7FFC)
	XOR	1
	LD	(D7FFC),A
	JR	J77E7			; reread disk and quit

J77DE:	PUSH	AF
	CALL	C76CC			; seek to next cylinder
	LD	A,70H			; STEP OUT with cylinder update
	CALL	C76D1			; execute seek operation

J77E7:	POP	AF
	POP	HL
	PUSH	BC
	PUSH	HL
	LD	DE,1			; 1st FAT sector (mediabyte)
	LD	HL,($SECBUF)
	AND	A			; read sector
	CALL	C744D			; read/write sectors
	JR	C,J7813			; error, quit
	LD	HL,($SECBUF)
	LD	B,(HL)			; mediabyte
	POP	HL
	PUSH	BC
	CALL	C7816			; update DPB
	LD	A,3
	LD	(D7FFC),A		; deselect drive, motor off
	LD	A,0CH
	JR	C,J7813			; error, quit with OTHER ERROR
	POP	AF
	POP	BC
	CP	C			; same mediabyte ?
	SCF
	CCF				; no error
	LD	B,0FFH			; assume disk changed
	RET	NZ			; nope, quit
	INC	B			; disk change unknown
	RET

J7813:	POP	DE
	POP	DE
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

GETDPB:
C7816:	EI
	EX	DE,HL
	INC	DE
	LD	A,B
	LD	HL,I743B		; assume media 0FBH
	CP	0F8H
	JR	Z,J782F
	CP	0F9H
	JR	Z,J7834
	CP	0FAH
	JR	Z,J7839
	CP	0FBH
	JR	Z,J783C
					; return error

OEMSTA:
					; return statement not recognized
	SCF
	RET

J782F:	LD	HL,I7405
	JR	J783C

J7834:	LD	HL,I7417
	JR	J783C

J7839:	LD	HL,I7429
J783C:	LD	BC,18
	LDIR
	RET

CHOICE:
?7842:	LD	HL,I7846
	RET
I7846:
	DEFB	13,10
	DEFB	"1 - Single side",13,10
	DEFB	"2 - Double side",13,10
	DEFB	0

;	  Subroutine install read sector routine in $SECBUF
;	     Inputs  ________________________
;	     Outputs ________________________
;
C786B:	PUSH	HL
	PUSH	DE
	PUSH	BC
	LD	HL,I7904
	LD	DE,($SECBUF)
	LD	BC,S7904
	LDIR
	LD	HL,I78D6
	JR	J7891

;	  Subroutine install write sector routine in $SECBUF
;	     Inputs  ________________________
;	     Outputs ________________________

C787F:	PUSH	HL
	PUSH	DE
	PUSH	BC
	LD	HL,I7A54
	LD	DE,($SECBUF)
	LD	BC,S7A54
	LDIR
	LD	HL,I78B2
J7891:	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	LD	A,E
	OR	D
	JR	Z,J78AE
	PUSH	HL
	LD	HL,($SECBUF)
	ADD	HL,DE
	INC	HL
	LD	C,(HL)
J78A0:	INC	HL
	LD	B,(HL)
J78A2:	EX	DE,HL
	LD	HL,($SECBUF)
	ADD	HL,BC
	EX	DE,HL
	LD	(HL),D
	DEC	HL
	LD	(HL),E
	POP	HL
	JR	J7891

J78AE:	POP	BC
	POP	DE
	POP	HL
	RET

; relocation table write sector routine

I78B2:	DEFW	Q0006
	DEFW	Q0020
	DEFW	Q0025
	DEFW	Q0039
	DEFW	Q004F
	DEFW	Q0055
	DEFW	Q0069
	DEFW	Q006E
	DEFW	Q0076
	DEFW	Q00AA
	DEFW	Q00B2
	DEFW	Q00DD
	DEFW	Q010E
	DEFW	Q0118
	DEFW	Q0120
	DEFW	Q0130
	DEFW	Q0152
	DEFW	0

; relocation table read sector routine

I78D6:	DEFW	P0006
	DEFW	P0020
	DEFW	P0025
	DEFW	P003C
	DEFW	P004E
	DEFW	P0053
	DEFW	P0057
	DEFW	P0063
	DEFW	P0069
	DEFW	P006F
	DEFW	P0083
	DEFW	P0088
	DEFW	P008C
	DEFW	P00C9
	DEFW	P00FA
	DEFW	P0104
	DEFW	P010C
	DEFW	P011C
	DEFW	P013E
	DEFW	0

;	  Subroutine start routine in $SECBUF
;	     Inputs  ________________________
;	     Outputs ________________________

C78FE:	PUSH	HL
	LD	HL,($SECBUF)
	EX	(SP),HL
	RET

;	  Subroutine relocatable read sector routine
;	     Inputs  ________________________
;	     Outputs ________________________

I7904:
	.PHASE	0

P0000:	PUSH	HL
	PUSH	DE
	PUSH	BC
	CALL	GETSLT
P0006:	LD	(P00BC+1),A
	LD	H,HIGH 8000H
	CALL	ENASLT
	EI
	LD	A,(RAMAD1)
	LD	H,HIGH 4000H
	CALL	ENASLT
	EI
	POP	BC
	POP	DE
	POP	HL
P001B:	DEC	HL
	LD	A,H
	ADD	A,HIGH SECLEN
	INC	HL
P0020:	JP	M,P00AC			; finish without error
	LD	E,11
P0025:	CALL	P0121
	LD	A,80H
	BIT	6,D
	JR	Z,Q0036
	OR	02H
	BIT	2,D
	JR	Z,Q0036
	OR	08H
Q0036:	PUSH	HL
	PUSH	DE
	PUSH	BC
	LD	BC,DBFFC
P003C:	LD	DE,P0072
	PUSH	DE
	CALL	DISINT
	DI
	LD	(DBFF8),A
	EX	(SP),HL
	EX	(SP),HL
	LD	DE,0
P004C:	LD	A,(BC)
	ADD	A,A
P004E:	JP	C,P0060			; DRQ, start transfer
	RET	M			; IRQ, quit
	DEC	E
P0053:	JP	NZ,P004C
	DEC	D
P0057:	JP	NZ,P004C
	POP	BC
	POP	BC
	POP	DE
	POP	HL
	JR	P00A4

P0060:	LD	DE,DBFFB
P0063:	JP	P006C

P0066:	LD	A,(BC)
	ADD	A,A
	RET	M			; IRQ, quit
P0069:	JP	NC,P0066		; no DRQ, wait
P006C:	LD	A,(DE)
	LD	(HL),A
	INC	HL
P006F:	JP	P0066

P0072:	POP	BC
	POP	DE
	POP	HL
	EI
	CALL	ENAINT
	LD	A,(DBFF8)
	AND	9CH
	JR	NZ,P0088
	DEC	B
	JR	Z,P00AC			; finish without error
P0083:	CALL	P00C9
	JR	P001B

P0088:	JP	M,P00A4
	PUSH	AF
P008C:	CALL	P0109
	POP	AF
	DEC	E
	JR	NZ,P0025
	LD	E,A
	BIT	4,E
	LD	A,08H
	JR	NZ,P00AB
	BIT	3,E
	LD	A,04H
	JR	NZ,P00AB
	LD	A,0CH
	JR	P00AB

P00A4:	LD	A,3
	LD	(DBFFC),A		; deselect drive, motor off
	LD	A,02H
P00AB:	SCF

P00AC:	PUSH	HL
	PUSH	DE
	PUSH	BC
	PUSH	AF
	LD	A,(RAMAD2)
	LD	H,HIGH 8000H
	CALL	ENASLT
	CALL	$DOSON
	EI
P00BC:	LD	A,0
	LD	H,HIGH 4000H
	CALL	ENASLT
	EI
	POP	AF
	POP	BC
	POP	DE
	POP	HL
	RET

;	  Subroutine setup for next sector
;	     Inputs  ________________________
;	     Outputs ________________________

P00C9:	CALL	P0121
	INC	H
	INC	H
	LD	A,(DBFFA)
	INC	A
	LD	(DBFFA),A
	BIT	7,D
	JR	NZ,P00DC
	CP	9+1
	RET	C
P00DC:	CP	8+1
	RET	C
	LD	A,1
	LD	(DBFFA),A
	BIT	6,D
	JR	Z,P00F3
	BIT	2,D
	JR	NZ,P00F3
	SET	2,D
	LD	A,D
	LD	(DBFFC),A		; update side
	RET

P00F3:	RES	2,D
	LD	A,D
	LD	(DBFFC),A		; update side
	INC	C
P00FA:	CALL	P0121
	LD	A,50H
	LD	(DBFF8),A
	EX	(SP),HL
	EX	(SP),HL
P0104:	CALL	P0121
	JR	P0145

;	  Subroutine reseek cylinder
;	     Inputs  ________________________
;	     Outputs ________________________

P0109:	BIT	0,E
	RET	NZ
P010C:	CALL	P013E
	LD	A,C
	LD	(DBFFB),A
	EX	(SP),HL
	EX	(SP),HL
	LD	A,10H
P0117:	LD	(DBFF8),A
	EX	(SP),HL
	EX	(SP),HL
P011C:	CALL	P0121
	JR	P0145

;	  Subroutine wait for ready
;	     Inputs  ________________________
;	     Outputs ________________________

P0121:	PUSH	HL
	LD	A,(DBFFC)
	BIT	5,A
	JR	NZ,P0136
	LD	A,(DBFF8)
	LD	HL,0DA78H
P012F:	EX	(SP),HL
	EX	(SP),HL
	DEC	HL
	LD	A,H
	OR	L
	JR	NZ,P012F
P0136:	POP	HL
P0137:	LD	A,(DBFF8)
	RRA
	JR	C,P0137
	RET

;	  Subroutine seek to cylinder 0
;	     Inputs  ________________________
;	     Outputs ________________________

P013E:	CALL	P0121
	LD	A,00H
	JR	P0117

;	  Subroutine wait for head settle
;	     Inputs  ________________________
;	     Outputs ________________________

P0145:	PUSH	HL
	LD	HL,0AC2H
P0149:	DEC	HL
	LD	A,H
	OR	L
	JR	NZ,P0149
	POP	HL
	RET

	.DEPHASE

S7904	EQU	$-I7904

;	  Subroutine relocatable write sector routine
;	     Inputs  ________________________
;	     Outputs ________________________

I7A54:
	.PHASE	0

Q0000:	PUSH	HL
	PUSH	DE
	PUSH	BC
	CALL	GETSLT
Q0006:	LD	(Q00D0+1),A
	LD	H,HIGH 8000H
	CALL	ENASLT
	EI
	LD	A,(RAMAD1)
	LD	H,HIGH 4000H
	CALL	ENASLT
	EI
	POP	BC
	POP	DE
	POP	HL
Q001B:	DEC	HL
	LD	A,H
	ADD	A,HIGH SECLEN
	INC	HL
Q0020:	JP	M,Q00C0			; finish without error
	LD	E,11
Q0025:	CALL	Q0135
	LD	A,0A0H
	BIT	6,D
	JR	Z,Q0036
	OR	02H
	BIT	2,D
	JR	Z,Q0036
	OR	08H
Q0036:	PUSH	HL
	PUSH	DE
	PUSH	BC
Q0039:	LD	DE,Q0058
	PUSH	DE
	CALL	DISINT
	DI
	LD	(DBFF8),A
	EX	(SP),HL
	EX	(SP),HL
	LD	BC,DBFFC
	LD	DE,DBFFB
Q004C:	LD	A,(BC)
	ADD	A,A
	RET	M			; IRQ, quit
Q004F:	JP	NC,Q004C		; no DRQ, wait
	LD	A,(HL)
	LD	(DE),A
	INC	HL
Q0055:	JP	Q004C

Q0058:	POP	BC
	POP	DE
	POP	HL
	EI
	CALL	ENAINT
	LD	A,(DBFF8)
	AND	0FCH
	JR	NZ,Q006E
	DEC	B
	JR	Z,Q00C0			; finish without error
Q0069:	CALL	Q00DD
	JR	Q001B

Q006E:	JP	M,Q00B5
	BIT	6,A
	JR	NZ,Q0094
	PUSH	AF
Q0076:	CALL	Q011D
	POP	AF
	DEC	E
	JR	NZ,Q0025
	LD	E,A
	BIT	5,E
	LD	A,0AH
	JR	NZ,Q00BF
	BIT	4,E
	LD	A,08H
	JR	NZ,Q00BF
	BIT	3,E
	LD	A,04H
	JR	NZ,Q00BF
	LD	A,0CH
	JR	Q00BF

Q0094:	LD	A,0D0H
	LD	(DBFF8),A
	EX	(SP),HL
	EX	(SP),HL
	LD	A,80H
	LD	(DBFF8),A
	EX	(SP),HL
	EX	(SP),HL
	LD	HL,DBFFC
	LD	DE,0
Q00A8:	LD	A,(HL)
	ADD	A,A
Q00AA:	JP	M,Q00BE			; IRQ,
	JR	C,Q00BE			; DRQ,
	DEC	DE
	LD	A,E
	OR	D
Q00B2:	JP	NZ,Q00A8
Q00B5:	LD	A,3
	LD	(DBFFC),A		; deselect drive, motor off
	LD	A,02H
	JR	Q00BF

Q00BE:	XOR	A
Q00BF:	SCF

Q00C0:	PUSH	HL
	PUSH	DE
	PUSH	BC
	PUSH	AF
	LD	A,(RAMAD2)
	LD	H,HIGH 8000H
	CALL	ENASLT
	CALL	$DOSON
	EI
Q00D0:	LD	A,0
	LD	H,HIGH 4000H
	CALL	ENASLT
	EI
	POP	AF
	POP	BC
	POP	DE
	POP	HL
	RET

;	  Subroutine setup for next sector
;	     Inputs  ________________________
;	     Outputs ________________________

Q00DD:	CALL	Q0135
	INC	H
	INC	H
	LD	A,(DBFFA)
	INC	A
	LD	(DBFFA),A
	BIT	7,D
	JR	NZ,Q00F0
	CP	9+1
	RET	C
Q00F0:	CP	8+1
	RET	C
	LD	A,01H	; 1 
	LD	(DBFFA),A
	BIT	6,D
	JR	Z,Q0107
	BIT	2,D
	JR	NZ,Q0107
	SET	2,D
	LD	A,D
	LD	(DBFFC),A		; update side
	RET

Q0107:	RES	2,D
	LD	A,D
	LD	(DBFFC),A		; update side
	INC	C
Q010E:	CALL	Q0135
	LD	A,50H
	LD	(DBFF8),A
	EX	(SP),HL
	EX	(SP),HL
Q0118:	CALL	Q0135
	JR	Q0159

;	  Subroutine reseek cylinder
;	     Inputs  ________________________
;	     Outputs ________________________

Q011D:	BIT	0,E
	RET	NZ
Q0120:	CALL	Q0152
	LD	A,C
	LD	(DBFFB),A
	EX	(SP),HL
	EX	(SP),HL
	LD	A,10H
Q012B:	LD	(DBFF8),A
	EX	(SP),HL
	EX	(SP),HL
Q0130:	CALL	Q0135
	JR	Q0159

;	  Subroutine wait for ready
;	     Inputs  ________________________
;	     Outputs ________________________

Q0135:	PUSH	HL
	LD	A,(DBFFC)
	BIT	5,A
	JR	NZ,Q014A
	LD	A,(DBFF8)
	LD	HL,0DA78H
Q0143:	EX	(SP),HL
	EX	(SP),HL
	DEC	HL
	LD	A,H
	OR	L
	JR	NZ,Q0143
Q014A:	POP	HL
Q014B:	LD	A,(DBFF8)
	RRA
	JR	C,Q014B
	RET

;	  Subroutine seek to cylinder 0
;	     Inputs  ________________________
;	     Outputs ________________________

Q0152:	CALL	Q0135
	LD	A,00H
	JR	Q012B

;	  Subroutine wait for head settle
;	     Inputs  ________________________
;	     Outputs ________________________

Q0159:	PUSH	HL
	LD	HL,0AC2H
Q015D:	DEC	HL
	LD	A,H
	OR	L
	JR	NZ,Q015D
	POP	HL
	RET
	
	.DEPHASE

S7A54	EQU	$-I7A54


I7BB8:
	DEFW	720
	DEFB	0F8H
	DEFW	2
	DEFW	9
	DEFW	1


DSKFMT:
?7BC1:	CP	3
	JR	C,J7BC9
	LD	A,0CH	; 12 
	SCF
	RET

J7BC9:	INC	A
	LD	E,A
	PUSH	DE
	LD	A,D
	LD	B,00H
	LD	C,0F8H
	BIT	0,E
	JR	Z,J7BD6
	INC	C
J7BD6:	LD	DE,0			; sector 0
	CALL	C75EB			; setup for disk operation
	JP	C,J7D94			; error,
	CALL	GETWRK			; GETWRK
	POP	DE
	PUSH	DE
	LD	A,0F8H
	BIT	0,E
	JR	Z,J7BEB
	INC	A
J7BEB:	LD	(IX+0),A
	CALL	C7710			; seek to cylinder 0
	LD	A,(D7FF8)
	OR	A
	JP	M,J7DA1			; NOT READY,
	AND	04H
	JP	Z,J7D8D			; not TRK00,
	CALL	GETWRK			; GETWRK
	XOR	A
	LD	(IX+1),A
J7C04:	LD	E,00H
	LD	HL,D7FFC
	RES	2,(HL)			; select side 0
	CALL	C7717			; wait for head load
	CALL	C7DBE			; format track
	AND	0E5H
	JP	NZ,J7DA1
	POP	DE
	PUSH	DE
	BIT	0,E
	JR	Z,J7C2E
	LD	E,1
	LD	HL,D7FFC
	SET	2,(HL)			; select side 1
	CALL	C7717			; wait for head load
	CALL	C7DBE			; format track
	AND	0E5H
	JP	NZ,J7DA1
J7C2E:	CALL	C7717			; wait for head load
	LD	A,(IX+1)
	INC	A
	CP	80
	JR	Z,J7C49
	LD	(IX+1),A
	CALL	C76CC
	LD	A,(D7FF8)
	AND	91H
	JP	NZ,J7D8D
	JR	J7C04

J7C49:	CALL	C7710			; seek to cylinder 0
	LD	A,(D7FF8)
	AND	04H
	JP	Z,J7D8D
	LD	HL,I7F28
	LD	DE,($SECBUF)
	LD	BC,S7F28
	LDIR
	POP	BC
	PUSH	BC
	BIT	0,C			; double sided ?
	JR	NZ,J7C7C		; yep, bootsector already ok
	PUSH	DE
	LD	HL,I7BB8
	LD	IY,($SECBUF)
	LD	BC,19
	ADD	IY,BC
	PUSH	IY
	POP	DE
	LD	BC,9
	LDIR
	POP	DE			; update bootsector for single sided media
J7C7C:	LD	BC,SECLEN-S7F28
J7C7F:	XOR	A
	LD	(DE),A
	INC	DE
	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,J7C7F		; clear bootsector remainer
	POP	DE
	PUSH	DE
	LD	A,D
	LD	HL,($SECBUF)
	LD	B,1			; 1 sector
	LD	C,(IX+0)		; mediabyte
	LD	DE,0
	SCF				; write sector
	CALL	C744D			; read/write sectors
	JP	C,J7D94			; error,
	POP	DE
	LD	A,D
	LD	BC,2*2
	BIT	0,E			; double sided ?
	JR	Z,J7CA8			; nope, 2 FATs of 2 sectors
	LD	BC,2*3			; 2 FATs of 3 sectors
J7CA8:	LD	DE,1
	PUSH	AF
	PUSH	DE
	PUSH	BC
J7CAE:	LD	DE,($SECBUF)
	LD	A,(IX+0)
	LD	(DE),A
	INC	DE
	LD	A,0FFH
	LD	(DE),A
	INC	DE
	LD	(DE),A
	INC	DE
	XOR	A
	LD	B,256-3
J7CC0:	LD	(DE),A
	INC	DE
	DJNZ	J7CC0			; clear remainer
	POP	BC
	POP	DE
	POP	AF
	PUSH	AF
	PUSH	DE
	PUSH	BC
	LD	HL,($SECBUF)
	LD	B,1
	LD	C,(IX+0)
	SCF				; write sector
	CALL	C744D			; read/write sectors
	JP	C,J7D92			; error,
	POP	BC
	POP	DE
	POP	AF
	INC	DE
	DEC	BC
	PUSH	AF
	PUSH	DE
	PUSH	BC
	LD	B,3
	LD	DE,($SECBUF)
	XOR	A
J7CE8:	LD	(DE),A
	INC	DE
	DJNZ	J7CE8
	POP	BC
	POP	DE
	POP	AF
	PUSH	AF
	PUSH	DE
	PUSH	BC
	LD	HL,($SECBUF)
	LD	B,1
	LD	C,(IX+0)
	SCF				; write sector
	CALL	C744D			; read/write sectors
	JP	C,J7D92			; error,
	POP	BC
	POP	DE
	POP	AF
	INC	DE
	DEC	BC
	PUSH	AF
	PUSH	DE
	PUSH	BC
	BIT	0,(IX+0)		; double sided ?
	JR	Z,J7D24			; nope, skip extra FAT sector
	LD	HL,($SECBUF)
	LD	BC,256*1+0F9H
	SCF				; write sector
	CALL	C744D			; read/write sectors
	JP	C,J7D92			; error,
	POP	BC
	POP	DE
	POP	AF
	INC	DE
	DEC	BC
	PUSH	AF
	PUSH	DE
	PUSH	BC
J7D24:	LD	A,B
	OR	C			; no FAT sectors left ?
	JP	NZ,J7CAE		; nope, next
	POP	BC
	POP	DE
	POP	AF
	LD	DE,5
	BIT	0,(IX+0)		; double sided ?
	JR	Z,J7D38			; nope, directory starts at sector 5
	LD	DE,7			; directory starts at sector 7
J7D38:	LD	B,7			; 7 directory sectors
J7D3A:	PUSH	AF
	PUSH	DE
	PUSH	BC
	LD	HL,($SECBUF)
	LD	B,1
	LD	C,(IX+0)
	SCF				; write sector
	CALL	C744D			; read/write sectors
	JR	C,J7D92			; error,
	POP	BC
	POP	DE
	POP	AF
	INC	DE
	DJNZ	J7D3A			; next directory sector
	LD	BC,1+2*2+7
	BIT	0,(IX+0)		; double sided ?
	JR	Z,J7D5D			; nope, 12 system sectors
	LD	BC,1+2*3+7		; 14 system sectors
J7D5D:	LD	DE,0			; first system sector = 0
J7D60:	PUSH	AF
	PUSH	DE
	PUSH	BC
	LD	HL,($SECBUF)
	LD	B,1
	LD	C,(IX+0)
	SCF
	CCF				; read sector
	CALL	C744D			; read/write sectors
	JR	C,J7D92			; error,
	POP	BC
	POP	DE
	INC	DE
	DEC	BC
	LD	A,B
	OR	C			; system sectors left ?
	JR	Z,J7D7D			; nope, finish
	POP	AF
	JR	J7D60			; next sector

J7D7D:	POP	AF
	LD	(D7FFC),A		; select drive, side, motor
	CALL	C7710			; seek to cylinder 0
	LD	A,(D7FF8)
	AND	04H
	JP	NZ,J7454
	PUSH	DE
J7D8D:	LD	A,06H	; 6 
	SCF
	JR	J7D94

J7D92:	POP	DE
	POP	DE
J7D94:	POP	DE
	PUSH	AF
	LD	A,D
	LD	(D7FFC),A		; select drive, side, motor
	CALL	C7710			; seek to cylinder 0
	POP	AF
	JP	J7454

J7DA1:	POP	DE
	PUSH	AF
	LD	A,D
	LD	(D7FFC),A		; select drive, side, motor
	CALL	C7710			; seek to cylinder 0
	POP	AF
	LD	DE,J7454
	PUSH	DE
	SCF
	LD	E,A
	BIT	7,E
	LD	A,02H	; 2 
	RET	NZ
	BIT	6,E
	LD	A,00H
	RET	NZ
	JP	J74FA

;	  Subroutine format track
;	     Inputs  ________________________
;	     Outputs ________________________

C7DBE:	CALL	C76F3			; wait for ready
	LD	A,0F4H
	LD	D,01H	; 1 
	LD	HL,I7F20
	PUSH	HL
	CALL	DISINT
	DI
	LD	(D7FF8),A
	EX	(SP),HL
	EX	(SP),HL
	LD	C,4EH	; "N"
	LD	B,50H	; "P"
J7DD6:	LD	A,(D7FFC)
	ADD	A,A
	RET	M			; IRQ, quit
	JR	NC,J7DD6		; no DRQ, wait
	LD	A,C
	LD	(D7FFB),A
	DJNZ	J7DD6
	LD	C,00H
	LD	B,0CH	; 12 
J7DE7:	LD	A,(D7FFC)
	ADD	A,A
	RET	M
	JR	NC,J7DE7
	LD	A,C
	LD	(D7FFB),A
	DJNZ	J7DE7
	LD	C,0F6H
	LD	B,03H	; 3 
J7DF8:	LD	A,(D7FFC)
	ADD	A,A
	RET	M
	JR	NC,J7DF8
	LD	A,C
	LD	(D7FFB),A
	DJNZ	J7DF8
	LD	C,0FCH
J7E07:	LD	A,(D7FFC)
	ADD	A,A
	RET	M
	JR	NC,J7E07
	LD	A,C
	LD	(D7FFB),A
	LD	C,4EH	; "N"
	LD	B,1AH
J7E16:	LD	A,(D7FFC)
	ADD	A,A
	RET	M
	JR	NC,J7E16
	LD	A,C
	LD	(D7FFB),A
	DJNZ	J7E16
J7E23:	LD	C,00H
	LD	B,0CH	; 12 
J7E27:	LD	A,(D7FFC)
	ADD	A,A
	RET	M
	JR	NC,J7E27
	LD	A,C
	LD	(D7FFB),A
	DJNZ	J7E27
	LD	C,0F5H
	LD	B,03H	; 3 
J7E38:	LD	A,(D7FFC)
	ADD	A,A
	RET	M
	JR	NC,J7E38
	LD	A,C
	LD	(D7FFB),A
	DJNZ	J7E38
	LD	C,0FEH
J7E47:	LD	A,(D7FFC)
	ADD	A,A
	RET	M
	JR	NC,J7E47
	LD	A,C
	LD	(D7FFB),A
	LD	C,(IX+1)
J7E55:	LD	A,(D7FFC)
	ADD	A,A
	RET	M
	JR	NC,J7E55
	LD	A,C
	LD	(D7FFB),A
J7E60:	LD	A,(D7FFC)
	ADD	A,A
	RET	M
	JR	NC,J7E60
	LD	A,E
	LD	(D7FFB),A
J7E6B:	LD	A,(D7FFC)
	ADD	A,A
	RET	M
	JR	NC,J7E6B
	LD	A,D
	LD	(D7FFB),A
	LD	C,02H	; 2 
J7E78:	LD	A,(D7FFC)
	ADD	A,A
	RET	M
	JR	NC,J7E78
	LD	A,C
	LD	(D7FFB),A
	LD	C,0F7H
J7E85:	LD	A,(D7FFC)
	ADD	A,A
	RET	M
	JR	NC,J7E85
	LD	A,C
	LD	(D7FFB),A
	LD	C,4EH	; "N"
	LD	B,18H
J7E94:	LD	A,(D7FFC)
	ADD	A,A
	RET	M
	JR	NC,J7E94
	LD	A,C
	LD	(D7FFB),A
	DJNZ	J7E94
	LD	C,00H
	LD	B,0CH	; 12 
J7EA5:	LD	A,(D7FFC)
	ADD	A,A
	RET	M
	JR	NC,J7EA5
	LD	A,C
	LD	(D7FFB),A
	DJNZ	J7EA5
	LD	C,0F5H
	LD	B,03H	; 3 
J7EB6:	LD	A,(D7FFC)
	ADD	A,A
	RET	M
	JR	NC,J7EB6
	LD	A,C
	LD	(D7FFB),A
	DJNZ	J7EB6
	LD	C,0FBH
J7EC5:	LD	A,(D7FFC)
	ADD	A,A
	RET	M
	JR	NC,J7EC5
	LD	A,C
	LD	(D7FFB),A
	LD	C,0E5H
	LD	H,02H	; 2 
J7ED4:	LD	A,(D7FFC)
	ADD	A,A
	RET	M
	JR	NC,J7ED4
	LD	A,C
	LD	(D7FFB),A
	DJNZ	J7ED4
	DEC	H
	JR	NZ,J7ED4
	LD	C,0F7H
J7EE6:	LD	A,(D7FFC)
	ADD	A,A
	RET	M
	JR	NC,J7EE6
	LD	A,C
	LD	(D7FFB),A
	LD	C,4EH	; "N"
	LD	B,36H	; "6"
J7EF5:	LD	A,(D7FFC)
	ADD	A,A
	RET	M
	JR	NC,J7EF5
	LD	A,C
	LD	(D7FFB),A
	DJNZ	J7EF5
	INC	D
	LD	A,D
	CP	0AH	; 10 
	JP	NZ,J7E23
	LD	C,4EH	; "N"
	LD	H,03H	; 3 
J7F0D:	LD	B,00H
J7F0F:	LD	A,(D7FFC)
	ADD	A,A
	RET	M
	JR	NC,J7F0F
	LD	A,C
	LD	(D7FFB),A
	DJNZ	J7F0F
	DEC	H
	JR	NZ,J7F0D
	POP	HL
I7F20:	EI
	CALL	ENAINT
	LD	A,(D7FF8)
	RET

I7F28:
        .PHASE	0C000H

        DEFB	0EBH			; 00H, x86 JMP +0100H
        DEFB	0FEH
        DEFB	090H			; 02H, x86 NOP
	DEFB	"CANONFDD"		; 03H, OEM system name

					;      BPB (BIOS Parameter Block)
        DEFW	512			; 0BH, bytes per sector
        DEFB	2			; 0DH, sectors per cluster
        DEFW	1			; 0EH, reserved sectors (= 1st FAT sector)
        DEFB	2			; 10H, number of FATs
        DEFW	112			; 11H, number of (root) directory entries
        DEFW	1440			; 13H, total number of sectors on disk
        DEFB	0F9H			; 15H, media descriptor byte
        DEFW	3			; 16H, sectors per FAT
        DEFW	9			; 18H, sectors per track
        DEFW	2			; 1AH, number of sides
        DEFW	0			; 1CH, number of hidden sectors

					;      MSX boot loader
        RET	NC
        LD	(CC058+1),DE
        LD	(DC0C4),A
        LD	(HL),LOW IC056
        INC	HL
        LD	(HL),HIGH IC056
JC02A:	LD	SP,KBUF+256
        LD	DE,IC09F
        LD	C,0FH
        CALL	BDOS
        INC	A
        JP	Z,JC063
        LD	DE,00100H
        LD	C,1AH
        CALL	BDOS
        LD	HL,1
        LD	(IC09F+14),HL
        LD	HL,04000H-00100H
        LD	DE,IC09F
        LD	C,27H
        CALL	BDOS
        JP	00100H

IC056:	DEFW	CC058

CC058:	CALL	0
        LD	A,C
        AND	0FEH
J7EBA:	CP	02H
        JP	NZ,JC06A
JC063:	LD	A,(DC0C4)
        AND	A
        JP	Z,BASENT
JC06A:	LD	DE,IC079
        LD	C,09H
        CALL	BDOS
        LD	C,07H
        CALL	BDOS
        JR	JC02A

IC079:	DEFB	"Boot error",13,10
        DEFB	"Press any key for retry",13,10
        DEFB	"$"

IC09F:	DEFB	0
        DEFB	"MSXDOS  "
        DEFB	"SYS"
        DEFW	0
        DEFW	0
        DEFB	0,0,0,0
        DEFW	0
        DEFW	0
        DEFB	0
        DEFB	0
        DEFW	0
        DEFW	0
        DEFW	0
        DEFB	0
        DEFB	0,0,0,0

DC0C4:	DEFB	0

        .DEPHASE

S7F28	EQU	$-I7F28

        DEFS	08000H-$,0FFH

	END
