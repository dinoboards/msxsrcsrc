; Diskdriver Philips VG8230 (internal floppydisk controller)
; FDC	WD2793

; Source re-created by Z80DIS 2.2
; Z80DIS was written by Kenneth Gielow, Palo Alto, CA

; Code Copyrighted by Philips and maybe others
; Source comments by Arjen Zeilemaker

; Sourcecode supplied for STUDY ONLY
; Recreation NOT permitted without authorisation of the copyrightholders

SECLEN  EQU     512
MYSIZE  EQU     8
BASENT  EQU     4022H

D7FF8	EQU	07FF8H			; WD2793
D7FF9	EQU	D7FF8+1			; WD2793
D7FFA	EQU	D7FF8+2			; WD2793
D7FFB	EQU	D7FF8+3			; WD2793
D7FFC	EQU	07FFCH			; side select
D7FFD	EQU	D7FFC+1			; motor/in use/drive select
D7FFF	EQU	D7FFC+3			; IRQ,DRQ


I$7405:

; Only supports 3.5 media

        DEFB	0F8h		; Media F8
        DEFW	512		; 80 Tracks
        DEFB	0Fh		; 9 sectors
        DEFB	04h		; 1 side
        DEFB	01h		; 3.5" 360 Kb
        DEFB	02h
        DEFW	1
        DEFB	2
        DEFB	112
        DEFW	12
        DEFW	355
        DEFB	2
        DEFW	5

DEFDPB  EQU     $-1

	DEFB	0F9h		; Media F9
        DEFW	512		; 80 Tracks
        DEFB	0Fh		; 9 sectors
        DEFB	04h		; 2 sides
        DEFB	01h		; 3.5" 720 Kb
        DEFB	02h
        DEFW	1
        DEFB	2
        DEFB	112
        DEFW	14
        DEFW	714
        DEFB	3
        DEFW	7

        DEFB	0FAh		; Media FA
        DEFW	512		; 80 Tracks
        DEFB	0Fh		; 8 sectors
        DEFB	04h		; 1 side
        DEFB	01h		; 3.5" 320 Kb
        DEFB	02h
        DEFW	1
        DEFB	2
        DEFB	112
        DEFW	10
        DEFW	316
        DEFB	1
        DEFW	3

        DEFB	0FBh		; Media FB
        DEFW	512		; 80 Tracks
        DEFB	0Fh		; 8 sectors
        DEFB	04h		; 2 sides
        DEFB	01h		; 3.5" 640 Kb
        DEFB	02h
        DEFW	1
        DEFB	2
        DEFB	112
        DEFW	12
        DEFW	635
        DEFB	2
        DEFW	5

;	  Subroutine DSKIO
;	     Inputs  ________________________
;	     Outputs ________________________

DSKIO:
C.744D:	JP	NC,C.75A3

; DSKIO write

        CALL	C$7481                   ; write sectors

; DSKIO finish

J.7453:	EI
        CALL	ENAINT
        PUSH	AF
        LD	C,60
        JR	NC,J$745E
        LD	C,0
J$745E:	LD	A,0D0H
        LD	(D7FF8),A
        EX	(SP),HL
        EX	(SP),HL
        EX	(SP),HL
        EX	(SP),HL
        LD	A,(D7FFB)
        LD	A,(D7FF8)
        LD	(IX+0),120
        LD	A,(IX+3)
        AND	A
        JR	NZ,J$747C
        LD	(IX+1),C
        POP	AF
        RET

J$747C:	LD	(IX+2),C
        POP	AF
        RET

;	  Subroutine write sectors
;	     Inputs  ________________________
;	     Outputs ________________________

C$7481:	CALL	C$7D0F
        RET	C
        CALL	C.766A                  ; prepare for disk operation
        RET	C
        CALL	DISINT
        DI
J$748D:	LD	A,L
        ADD	A,LOW (SECLEN-1)
        LD	A,H
        ADC	A,HIGH (SECLEN-1)
        CP	HIGH 4000H
        JP	C,J.74B8
        LD	A,H
        AND	A
        JP	M,J.74B8
        PUSH	HL
        PUSH	DE
        PUSH	BC
        LD	DE,($SECBUF)
        PUSH	DE
        LD	BC,512
        CALL	XFER
        POP	HL
        POP	BC
        POP	DE
        CALL	C.74C7		        ; write sector
        CALL	C.7B4B
        POP	HL
        JP	J$74BE

J.74B8:	CALL	C.74C7		        ; write sector
        CALL	C.7B4B
J$74BE:	RET	C
        DEC	B
        RET	Z
        CALL	C.7744                  ; prepare for next sector
        JP	J$748D


;	  Subroutine write sector
;	     Inputs  ________________________
;	     Outputs ________________________

C.74C7:	LD	E,15H
J$74C9:	CALL	C.77A4
        LD	A,0A0H
        BIT	6,D
        JR	Z,J.74DA
        OR	02H	; 2 
        BIT	0,D
        JR	Z,J.74DA
        OR	08H	; 8 
J.74DA:	PUSH	HL
        PUSH	DE
        PUSH	BC
        LD	DE,I$7544
        PUSH	DE
        LD	(D7FF8),A
        EX	(SP),IY
        EX	(SP),IY
        LD	BC,D7FFF
        LD	DE,0
J.74EE:	LD	A,(BC)
        ADD	A,A
        JP	NC,J.753C
        RET	P
        LD	A,(BC)
        ADD	A,A
        JP	NC,J.753C
        RET	P
        DEC	E
        JP	NZ,J.74EE
        LD	A,(BC)
        ADD	A,A
        JP	NC,J.753C
        RET	P
        LD	A,(BC)
        ADD	A,A
        JP	NC,J.753C
        RET	P
        DEC	D
        JP	NZ,J.74EE
J$750E:	POP	BC
        POP	BC
        POP	DE
        POP	HL
        LD	A,2		        ; not ready
        RET

J$7515:	LD	D,00H
J$7517:	LD	A,(BC)
        ADD	A,A
        RET	P
        JP	NC,J.753C
        LD	A,(BC)
        ADD	A,A
        RET	P
        JP	NC,J.753C
        LD	A,(BC)
        ADD	A,A
        RET	P
        JP	NC,J.753C
        LD	A,(BC)
        ADD	A,A
        RET	P
        JP	NC,J.753C
        LD	A,(BC)
        ADD	A,A
        RET	P
        JP	NC,J.753C
        DEC	D
        JP	NZ,J$7517
        JP	J$750E

J.753C:	LD	A,(HL)
        LD	(D7FFB),A
        INC	HL
        JP	J$7515

I$7544:	POP	BC
        POP	DE
        POP	HL
        LD	A,(D7FF8)
        AND	0FCH
        RET	Z
        BIT	6,A
        JR	NZ,J$757B
        PUSH	AF
        LD	A,(IX+3)
        OR	0C4H
        LD	(D7FFD),A
        CALL	C.7789                  ; reseek
        POP	AF
        DEC	E
        JP	NZ,J$74C9
        SCF
        LD	E,A
        BIT	7,E
        LD	A,2
        RET	NZ
        BIT	5,E
        LD	A,10
        RET	NZ
        BIT	4,E
        LD	A,8
        RET	NZ
        BIT	3,E
        LD	A,4
        RET	NZ
        LD	A,12
        RET

J$757B:	LD	A,0D0H
        LD	(D7FF8),A
        EX	(SP),HL
        EX	(SP),HL
        LD	A,80H
        LD	(D7FF8),A
        EX	(SP),HL
        EX	(SP),HL
        LD	HL,D7FFF
        LD	DE,0
J$758F:	LD	A,(HL)
        ADD	A,A
        JR	C,J.75A0
        JP	P,J.75A0
        DEC	DE
        LD	A,E
        OR	D
        JP	NZ,J$758F
        LD	A,2
        SCF
        RET

J.75A0:	XOR	A
        SCF
        RET

;	  Subroutine DSKIO read
;	     Inputs  ________________________
;	     Outputs ________________________

C.75A3:	CALL	C$75A9                  ; read sectors
        JP	J.7453                  ; DSKIO finish


;	  Subroutine read sectors
;	     Inputs  ________________________
;	     Outputs ________________________

C$75A9:	CALL	C.766A                  ; prepare for disk operation
        RET	C

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$75AD:	CALL	DISINT
        DI
J$75B1:	LD	A,L
        ADD	A,LOW (SECLEN-1)
        LD	A,H
        ADC	A,HIGH (SECLEN-1)
        CP	HIGH 4000H
        JP	C,J.75DE
        LD	A,H
        AND	A
        JP	M,J.75DE
        PUSH	HL
        LD	HL,($SECBUF)
        CALL	C.75EA		        ; read sector
        POP	HL
        RET	C
        PUSH	HL
        PUSH	DE
        PUSH	BC
        EX	DE,HL
        LD	HL,($SECBUF)
        LD	BC,512
        CALL	XFER
        POP	BC
        POP	DE
        POP	HL
        AND	A
        JP	J$75E2

J.75DE:	CALL	C.75EA		        ; read sector
        RET	C
J$75E2:	DEC	B
        RET	Z
        CALL	C.7744                  ; prepare for next sector
        JP	J$75B1


;	  Subroutine read sector
;	     Inputs  ________________________
;	     Outputs ________________________

C.75EA:	LD	E,15H
J$75EC:	CALL	C.77A4
        LD	A,80H
        BIT	6,D
        JR	Z,J.75FD
        OR	02H
        BIT	0,D
        JR	Z,J.75FD
        OR	08H
J.75FD:	PUSH	HL
        PUSH	DE
        PUSH	BC
        LD	BC,D7FFF
        LD	DE,I$7639
        PUSH	DE
        LD	(D7FF8),A
        LD	DE,0
J.760D:	LD	A,(BC)
        ADD	A,A
        JP	NC,J.7627
        RET	P
        DEC	E
        JP	NZ,J.760D
        LD	A,(BC)
        ADD	A,A
        JP	NC,J.7627
        RET	P
        DEC	D
        JP	NZ,J.760D
        POP	BC
        POP	BC
        POP	DE
        POP	HL
        JR	J.7666

J.7627:	LD	DE,D7FFB
        JP	J$7633

J.762D:	LD	A,(BC)
        ADD	A,A
        RET	P
        JP	C,J.762D
J$7633:	LD	A,(DE)
        LD	(HL),A
        INC	HL
        JP	J.762D

I$7639:	POP	BC
        POP	DE
        POP	HL
        LD	A,(D7FF8)
        AND	9CH
        RET	Z
        PUSH	AF
        LD	A,(IX+3)
        OR	0C4H
        LD	(D7FFD),A
        CALL	C.7789                  ; reseek
        POP	AF
        DEC	E
        JR	NZ,J$75EC
        SCF
        LD	E,A
        BIT	7,E
        LD	A,2
        RET	NZ
        BIT	4,E
        LD	A,8
        RET	NZ
        BIT	3,E
        LD	A,4
        RET	NZ
        LD	A,12
        RET

J.7666:	LD	A,2
        SCF
        RET

;	  Subroutine prepare for disk operation
;	     Inputs  ________________________
;	     Outputs ________________________

C.766A:	PUSH	AF
        PUSH	BC
        PUSH	DE
        PUSH	HL
        CALL	GETWRK
        POP	HL
        POP	DE
        POP	BC
        POP	AF

;	  Subroutine prepare for disk operation (workarea in IX)
;	     Inputs  ________________________
;	     Outputs ________________________

C.7675:	CP	1+1
        JR	C,J$767D
J$7679:	LD	A,12
        SCF
        RET

J$767D:	PUSH	AF
        LD	A,C
        CP	0F8H
        JR	C,J$7687
        CP	0FCH
        JR	C,J$768A
J$7687:	POP	AF
        JR	J$7679

J$768A:	EX	(SP),HL
        PUSH	HL
        PUSH	BC
        CALL	C.77A4
        BIT	1,C
        LD	C,E
        LD	B,D
        LD	DE,8
        JR	NZ,J$769A
        INC	DE
J$769A:	CALL	DIV16
        LD	A,L
        INC	A
        LD	(D7FFA),A
        LD	L,C
        POP	BC
        POP	AF
        LD	H,A
        XOR	A
        BIT	0,C
        JR	Z,J.76B0
        SRL	L
        JR	NC,J.76B0
        INC	A
J.76B0:	LD	(D7FFC),A
        LD	D,A
        LD	A,(IX+7)
        DEC	A
        JR	Z,J$76BF
        LD	A,H
        NOP
        NOP
        NOP
        NOP                             ; ??
J$76BF:	OR	0C4H
        CALL	DISINT
        DI
        LD	(D7FFD),A
        LD	A,(IX)
        AND	A		        ; motor still turning ?
        LD	(IX),0FFH	        ; disable motor off
        EI
        CALL	ENAINT
        JR	NZ,J$76E2	        ; yep, skip motor startup
        CALL	C.77BC
        CALL	C.77BC
        CALL	C.77BC
        CALL	C.77BC
J$76E2:	LD	A,C
        RRCA
        RRCA
        AND	0C0H
        OR	D
        LD	D,A
        LD	C,L
        LD	A,(IX+7)
        DEC	A
        JR	Z,J$7715
        LD	A,(IX+3)
        CP	H
        JR	Z,J.7735
        XOR	01H
        LD	(IX+3),A
        LD	A,(D7FF9)
        JR	Z,J$7708
        LD	(IX+4),A
        LD	A,(IX+5)
        JR	J$770E

J$7708:	LD	(IX+5),A
        LD	A,(IX+4)
J$770E:	LD	(D7FF9),A
        EX	(SP),HL
        EX	(SP),HL
        JR	J$7738

J$7715:	LD	A,(IX+6)
        AND	03H
        CP	H
        JR	Z,J.7735
        LD	A,(IX+6)
        AND	0FCH
        OR	H
        LD	(IX+6),A
        PUSH	IX
        PUSH	HL
        PUSH	DE
        PUSH	BC
        PUSH	AF
        CALL	PROMPT
        POP	AF
        POP	BC
        POP	DE
        POP	HL
        POP	IX
J.7735:	LD	A,(D7FF9)
J$7738:	CP	C
        CALL	C$778F                  ; seek to cylinder
        POP	HL
        RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.773E:	CALL	C.77A4
        JP	J$775A

;	  Subroutine prepare for next sector
;	     Inputs  ________________________
;	     Outputs ________________________

C.7744:	CALL	C.77A4
        INC	H
        INC	H
        LD	A,(D7FFA)
        INC	A
        LD	(D7FFA),A
        BIT	7,D
        JR	NZ,J$7757
        CP	9+1
        RET	C
J$7757:	CP	8+1
        RET	C
J$775A:	LD	A,1
        LD	(D7FFA),A
        BIT	6,D
        JR	Z,J.7770
        BIT	0,D
        JR	NZ,J.7770
        SET	0,D
        LD	A,1
        LD	(D7FFC),A
        JR	J$7785

J.7770:	RES	0,D
        LD	A,00H
        LD	(D7FFC),A
        INC	C
        CALL	C.77A4
        LD	A,50H
        LD	(D7FF8),A
        EX	(SP),HL
        EX	(SP),HL
        CALL	C.77A4
J$7785:	SCF
        CCF
        JR	J.77C8

;	  Subroutine reseek
;	     Inputs  ________________________
;	     Outputs ________________________

C.7789:	BIT	0,E
        RET	NZ
        CALL	C.77B5

;	  Subroutine seek to cylinder
;	     Inputs  ________________________
;	     Outputs ________________________

C$778F:	CALL	C.77A4
        LD	A,C
        LD	(D7FFB),A
        EX	(SP),HL
        EX	(SP),HL
        LD	A,10H
J$779A:	LD	(D7FF8),A
        EX	(SP),HL
        EX	(SP),HL
        CALL	C.77A4
        JR	J.77C8

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.77A4:	PUSH	DE
J$77A5:	LD	DE,0
        LD	A,(D7FF8)
        RRA
        JR	NC,J$77B3
        DEC	DE
        LD	A,D
        OR	E
        JR	NZ,J$77A5
J$77B3:	POP	DE
        RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.77B5:	CALL	C.77A4
        LD	A,02H
        JR	J$779A

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.77BC:	PUSH	HL
        LD	HL,99E1H
        JR	J.77D8

?.77C2:	PUSH	HL
        LD	HL,1D23H
        JR	J.77D8

J.77C8:	PUSH	HL
        LD	HL,117BH
        JR	J.77D8

?.77CE:	PUSH	HL
        LD	HL,0BA6H
        JR	J.77D8

?.77D4:	PUSH	HL
        LD	HL,012CH
J.77D8:	DEC	HL
        LD	A,H
        OR	L
        JR	NZ,J.77D8
        POP	HL
        XOR	A
        RET

;	  Subroutine INIHRD
;	     Inputs  ________________________
;	     Outputs ________________________

INIHRD:
	LD	A,0D0H
        LD	(D7FF8),A
        EX	(SP),HL
        EX	(SP),HL
        LD	A,0C0H                  ; drive 0
        CALL	C.77F7                  ; initialize drive
        LD	A,0C1H                  ; drive 1
        CALL	C.77F7                  ; initialize drive

;	  Subroutine MTOFF
;	     Inputs  ________________________
;	     Outputs ________________________

MTOFF:
        LD	A,03H
        LD	(D7FFD),A
        RET

;	  Subroutine initialize drive
;	     Inputs  ________________________
;	     Outputs ________________________

C.77F7:	LD	(D7FFD),A
        CALL	C.77A4
        LD	A,02H
        LD	(D7FF8),A
        EX	(SP),HL
        EX	(SP),HL
        LD	HL,0
J$7807:	LD	A,(D7FF8)
        RRA
        JR	NC,J$7812
        DEC	HL
        LD	A,L
        OR	H
        JR	NZ,J$7807
J$7812:	LD	A,05H
        LD	(D7FFB),A
        EX	(SP),HL
        EX	(SP),HL
        CALL	C.77A4
        LD	A,10H
        LD	(D7FF8),A
        CALL	C.77A4
        LD	A,02H
        LD	(D7FF8),A
        CALL	C.77A4
        RET

;	  Subroutine DRIVES
;	     Inputs  ________________________
;	     Outputs ________________________

DRIVES:
	PUSH	BC
        PUSH	AF
        CALL	GETWRK
        LD	A,0C1H
        LD	(D7FFD),A
        CALL	C.77A4
        LD	A,02H
        LD	(D7FF8),A
        EX	(SP),HL
        EX	(SP),HL
        LD	HL,0
J$7844:	LD	A,(D7FF8)
        RRA
        JR	NC,J$7851
        DEC	HL
        LD	A,L
        OR	H
        JR	NZ,J$7844
        INC	L
        DEFB    0CAH
J$7851:	LD      L,2
        LD	(IX+7),L
        LD	A,03H
        LD	(D7FFD),A
        POP	AF
        JR	Z,J$7860
        LD	L,2
J$7860:	POP	BC
        RET

;	  Subroutine INIENV
;	     Inputs  ________________________
;	     Outputs ________________________

INIENV:
	CALL	GETWRK
        XOR	A
        LD	B,MYSIZE-1
J$7868:	LD	(HL),A
        INC	HL
        DJNZ	J$7868
        LD	HL,I$7872
        JP	SETINT

;	  Subroutine timer interrupt handler
;	     Inputs  ________________________
;	     Outputs ________________________

I$7872:	PUSH	AF
        CALL	GETWRK
        LD	A,(HL)
        AND	A
        JR	Z,J.7887
        CP	0FFH
        JR	Z,J.7887
        DEC	A
        LD	(HL),A
        JR	NZ,J.7887
        LD	A,03H
        LD	(D7FFD),A
J.7887:	INC	HL
        LD	A,(HL)
        AND	A
        JR	Z,J$788D
        DEC	(HL)
J$788D:	INC	HL
        LD	A,(HL)
        AND	A
        JR	Z,J$7893
        DEC	(HL)
J$7893:	POP	AF
        JP	PRVINT

;	  Subroutine DSKCHG
;	     Inputs  ________________________
;	     Outputs ________________________

DSKCHG:
	EI
        PUSH	HL
        PUSH	BC
        PUSH	AF
        CALL	GETWRK
        POP	AF
        POP	BC
        POP	HL
        LD	B,(IX+7)
        DEC	B
        JP	Z,J.78BD
        CP	(IX+3)
        JP	NZ,J.78BD
        AND	A
        LD	B,(IX+2)
        JR	NZ,J$78B7
        LD	B,(IX+1)
J$78B7:	AND	A
        INC	B
        DEC	B
        LD	B,1
        RET	NZ
J.78BD:	PUSH	BC
        PUSH	HL
        LD	B,1
        LD	DE,1
        LD	HL,($SECBUF)
        CALL	C.75A3		        ; DSKIO read
        JR	C,J.78E3
        LD	HL,($SECBUF)
        LD	B,(HL)
        POP	HL
        PUSH	BC
        CALL	C$78EB
        LD	A,0CH	; 12 
        JR	C,J.78E3
        POP	AF
        POP	BC
        CP	C
        SCF
        CCF
        LD	B,0FFH
        RET	NZ
        INC	B
        RET

J.78E3:	PUSH	AF
        CALL	C.77B5
        POP	AF
        POP	DE
        POP	DE
        RET

;	  Subroutine GETDPB
;	     Inputs  ________________________
;	     Outputs ________________________

GETDPB:
C$78EB:	EX	DE,HL
        INC	DE
        LD	A,B
        SUB	0F8H
        RET	C
        CP	4
        JR	NC,J$7909
        LD	L,A
        LD	H,00H
        ADD	HL,HL
        LD	C,L
        LD	B,H
        ADD	HL,HL
        ADD	HL,HL
        ADD	HL,HL
        ADD	HL,BC
        LD	BC,I$7405
        ADD	HL,BC
        LD	BC,18
        LDIR
        RET

J$7909:	SCF
        RET

;	  Subroutine CHOICE
;	     Inputs  ________________________
;	     Outputs ________________________

CHOICE:
	DEC	A                       ; drive 1 ?
        JR	Z,J$7954                ; yep, offer format choices
        LD	HL,I$7918
        CALL	C.7C97                  ; print message
        LD	HL,0                    ; no format choices
        RET

I$7918:	DEFB	13,10
        DEFB	"Single Sided ...",13,10
        DEFB	"( Use another drive for Double Side )",13,10
        DEFB	0

J$7954:	LD	HL,I$7958
        RET

I$7958:	DEFB	"1 - Single Side ...",13,10
        DEFB	"2 - Double Side ...",13,10
        DEFB	0

;	  Subroutine DSKFMT
;	     Inputs  ________________________
;	     Outputs ________________________

DSKFMT:
        EI
        LD	(HL),D
        PUSH	BC
        LD	BC,34
J$7989:	ADD	HL,BC
        POP	BC
        PUSH	DE
        PUSH	HL
        LD	DE,-7500
        PUSH	BC
        POP	HL
        ADD	HL,DE
        POP	HL
J$7994:	POP	DE
        JR	C,J.799F
J$7997:	CCF
        LD	A,14
        RET

J$799B:	CCF
J.799C:	LD	A,12
        RET

J.799F:	PUSH	AF
        PUSH	HL
        PUSH	DE
        PUSH	BC
        CALL	GETWRK
        POP	BC
J$79A7:	POP	DE
        POP	HL
        POP	AF
        DEC	D
        JR	NZ,J$79BB
        SUB	01H
        JR	C,J.799C
        CP	02H
        JR	NC,J$799B
        LD	BC,9*256+0F9H
        DEC	A
        JR	Z,J$79C1
J$79BB:	LD	BC,9*256+0F8H
        LD	A,D
        JR	J$79C8

J$79C1:	LD	A,(IX+7)
        CP	02H
        JR	C,J.799C
J$79C8:	INC	D
        LD	A,D
        PUSH	BC
        LD	B,80
        BIT	0,C
        JR	Z,J$79D3
        LD	B,0A0H
J$79D3:	LD	A,D
        PUSH	AF
        PUSH	DE
        PUSH	HL
        PUSH	BC
        PUSH	AF
        LD	B,2
        LD	DE,0
        CALL	C.7675                  ; prepare for disk operation (workarea in IX)
        JP	C,J.7A5A
        CALL	C.77B5
        POP	AF
        PUSH	AF
J$79E9:	CALL	C.7BE4
        PUSH	HL
        CALL	C.7A9D
        POP	HL
        JP	C,J.7A5A
        DEC	B
        JP	Z,J$79FE
        CALL	C.773E
        JP	J$79E9

J$79FE:	POP	AF
        POP	BC
        PUSH	BC
        PUSH	AF
        LD	B,1
        LD	DE,0
        CALL	C.75A3		        ; DSKIO read
        JP	C,J$7A63
        POP	AF
        POP	BC
        POP	HL
        POP	DE
        LD	DE,0
        CALL	C.7675                  ; prepare for disk operation (workarea in IX)
        JP	C,J.7A6C
        PUSH	AF
        PUSH	HL
        LD	HL,I$7CA2
        CALL	C.7C97
        POP	HL
        CALL	C.77B5
        POP	AF
J$7A27:	CALL	C.7BE4
        PUSH	HL
        CALL	C.7A9D
        CALL	C$7A7B
        POP	HL
        JP	C,J.7A6C
        DEC	B
        JP	Z,J$7A3F
        CALL	C.773E
        JP	J$7A27

J$7A3F:	CALL	C.77B5
        POP	AF
        POP	BC
        PUSH	AF
        LD	DE,1
        CALL	C$7BB5
        POP	AF
        PUSH	AF
        CALL	C$7A72
        JP	C,J$7A6D
        POP	AF
        CALL	C$7CB3
        JP	J.7453

J.7A5A:	POP	HL
        POP	DE
        POP	BC
        POP	BC
        POP	BC
        POP	BC
        JP	J.7453

J$7A63:	POP	HL
        POP	DE
        POP	BC
        POP	BC
        POP	BC
        POP	BC
        JP	J.799C

J.7A6C:	POP	BC
J$7A6D:	POP	BC
        SCF
        JP	J.7453

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$7A72:	PUSH	BC
        PUSH	HL
        SCF
        CALL	C.744D
        POP	HL
        POP	BC
        RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$7A7B:	RET	C
        LD	A,(RAWFLG)
        OR	A
        RET	Z
        PUSH	BC
        PUSH	DE
        PUSH	HL
        PUSH	AF
        BIT	7,D
        LD	B,09H	; 9 
        JR	NZ,J$7A8D
        LD	B,08H	; 8 
J$7A8D:	LD	A,01H	; 1 
        LD	(D7FFA),A
        CALL	C.77A4
        CALL	C$75AD
        POP	HL
        POP	HL
        POP	DE
        POP	BC
        RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.7A9D:	LD	E,21
J$7A9F:	CALL	C.77A4
        LD	A,0F0H
        PUSH	HL
        PUSH	DE
        PUSH	BC
        LD	DE,I$7AE6
        PUSH	DE
        CALL	DISINT
        DI
        EX	(SP),IY
        EX	(SP),IY
        LD	BC,D7FFF
        LD	DE,0
        LD	(D7FF8),A
J.7ABC:	LD	A,(BC)
        ADD	A,A
        JP	NC,J.7ADE
        RET	P
        DEC	E
        JP	NZ,J.7ABC
        LD	A,(BC)
        ADD	A,A
        JP	NC,J.7ADE
        RET	P
        DEC	D
        JP	NZ,J.7ABC
        POP	BC
        POP	BC
        POP	DE
        POP	HL
        LD	A,2
        SCF
        RET

J.7AD8:	LD	A,(BC)
        ADD	A,A
        RET	P
        JP	C,J.7AD8
J.7ADE:	LD	A,(HL)
        LD	(D7FFB),A
        INC	HL
        JP	J.7AD8

I$7AE6:	POP	BC
        POP	DE
        POP	HL
        EI
        CALL	ENAINT
        LD	A,(D7FF8)
        AND	0FCH
        RET	Z
        BIT	6,A
        JR	NZ,J$7B21
        PUSH	AF
        LD	A,(IX+3)
        OR	0C4H
        LD	(D7FFD),A
        CALL	C.7789                  ; reseek
        POP	AF
        DEC	E
        JP	NZ,J$7A9F
        SCF
        LD	E,A
        BIT	7,E
        LD	A,2
        RET	NZ
        BIT	5,E
        LD	A,10
        RET	NZ
        BIT	4,E
        LD	A,8
        RET	NZ
        BIT	3,E
        LD	A,4
        RET	NZ
        LD	A,12
        RET

J$7B21:	LD	A,0D0H
        LD	(D7FF8),A
        EX	(SP),IY
        EX	(SP),IY
        LD	A,80H
        LD	(D7FF8),A
        EX	(SP),IY
        EX	(SP),IY
        LD	HL,D7FFF
        LD	DE,0
J$7B39:	LD	A,(HL)
        ADD	A,A
        JP	P,J.75A0
        JP	NC,J.75A0
        DEC	DE
        LD	A,E
        OR	D
        JP	NZ,J$7B39
        LD	A,2
        SCF
        RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.7B4B:	RET	C
        LD	A,(RAWFLG)
        OR	A
        RET	Z
        PUSH	HL
        PUSH	DE
        PUSH	BC
        CALL	C.77A4
        LD	A,80H
        BIT	6,D
        JR	Z,J.7B65
        OR	02H
        BIT	0,D
        JR	Z,J.7B65
        OR	08H
J.7B65:	LD	DE,I$7BA8
        PUSH	DE
        LD	(D7FF8),A
        EX	(SP),IY
        EX	(SP),IY
        LD	DE,0
        LD	BC,D7FFF
J.7B76:	LD	A,(BC)
        ADD	A,A
        JP	NC,J.7B8F
        RET	P
        DEC	E
        JR	NZ,J.7B76
        LD	A,(BC)
        ADD	A,A
        JP	NC,J.7B8F
        RET	P
        DEC	D
        JR	NZ,J.7B76
        POP	BC
        POP	BC
        POP	DE
        POP	HL
        JP	J.7666

J.7B8F:	LD	DE,D7FFB
        JP	J$7B9B

J.7B95:	LD	A,(BC)
        ADD	A,A
        RET	P
        JP	C,J.7B95
J$7B9B:	LD	A,(DE)
        INC	C
        CPI
        JP	Z,J.7B95
J$7BA2:	LD	A,(BC)
        ADD	A,A
        RET	P
        JP	J$7BA2

I$7BA8:	POP	BC
        POP	DE
        POP	HL
        LD	A,(D7FF8)
        AND	9CH
        RET	Z
        LD	A,10
        SCF
        RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$7BB5:	PUSH	HL
        PUSH	DE
        LD	B,01H
        BIT	1,C
        JR	NZ,J$7BBE
        INC	B
J$7BBE:	BIT	0,C
        JR	Z,J$7BC3
        INC	B
J$7BC3:	SLA	B
        LD	A,07H
        ADD	A,B
        LD	B,A
        PUSH	BC
J$7BCA:	LD	DE,512
J$7BCD:	LD	(HL),00H
        INC	HL
        DEC	DE
        LD	A,D
        OR	E
        JR	NZ,J$7BCD
        DJNZ	J$7BCA
        POP	BC
        POP	DE
        POP	HL
        LD	(HL),C
        INC	HL
        LD	(HL),0FFH
        INC	HL
        LD	(HL),0FFH
        DEC	HL
        DEC	HL
        RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.7BE4:	PUSH	BC
        LD	BC,-33
        ADD	HL,BC
        POP	BC
        PUSH	IY
        PUSH	HL
        PUSH	IX
        PUSH	BC
        PUSH	DE
        PUSH	HL
        POP	IX
        LD	DE,I$7C76
        LD	B,21H
J$7BF9:	LD	A,(DE)
        LD	(HL),A
        INC	HL
        INC	DE
        DJNZ	J$7BF9
        LD	DE,I$7C6B
        CALL	C.7C57
        CALL	C$7C36
        POP	DE
        PUSH	DE
        BIT	7,D
        LD	B,9
        JR	Z,J.7C12
        LD	B,8
J.7C12:	PUSH	IX
        POP	DE
        CALL	C.7C57
        INC	(IX+10)
        DJNZ	J.7C12
        LD	DE,1024
J$7C20:	LD	(HL),4EH
        INC	HL
        DEC	DE
        LD	A,D
        OR	E
        JR	NZ,J$7C20
        POP	DE
        POP	BC
        POP	IX
        POP	HL
        POP	IY
        PUSH	BC
        LD	BC,33
        ADD	HL,BC
        POP	BC
        RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$7C36:	POP	IY
        POP	DE
        POP	BC
        PUSH	BC
        PUSH	DE
        PUSH	IY
        BIT	6,D
        JR	Z,J$7C46
        BIT	0,D
        JR	NZ,J$7C4A
J$7C46:	LD	D,00H
        JR	J$7C4C

J$7C4A:	LD	D,01H
J$7C4C:	LD	(IX+6),C
        LD	(IX+8),D
        LD	(IX+10),01H
        RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.7C57:	PUSH	BC
        PUSH	DE
J$7C59:	LD	A,(DE)
        LD	C,A
        INC	A
        JR	Z,J$7C68
        INC	DE
        LD	A,(DE)
        LD	B,A
        INC	DE
J$7C62:	LD	(HL),C
        INC	HL
        DJNZ	J$7C62
        JR	J$7C59

J$7C68:	POP	DE
        POP	BC
        RET

I$7C6B: DEFB    04EH,80
        DEFB    000H,12
        DEFB    0F6H,3
        DEFB    0FCH,1
        DEFB    04EH,26
        DEFB    0FFH

I$7C76: DEFB    000H,12
        DEFB    0F5H,3
        DEFB    0FEH,1
        DEFB    000H,1
        DEFB    000H,1
        DEFB    001H,1
        DEFB    002H,1
        DEFB    0F7H,1
        DEFB    04EH,24
        DEFB    000H,12
        DEFB    0F5H,3
        DEFB    0FBH,1
        DEFB    0E5H,0
        DEFB    0E5H,0
        DEFB    0F7H,1
        DEFB    04EH,54
        DEFB    0FFH

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.7C97:	LD	A,(HL)
        AND	A
        JR	Z,J$7CA1
        CALL	A408F                   ; output to screen
        INC	HL
        JR	C.7C97

J$7CA1:	RET

I$7CA2:	DEFB	13,10
        DEFB	"Formatting...."
        DEFB	0

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$7CB3:	PUSH	BC
        PUSH	DE
        PUSH	HL
        PUSH	IX
        PUSH	HL
        POP	IX
        SCF
        PUSH	AF
        PUSH	HL
        PUSH	BC
        LD	BC,S7D6E-12
        PUSH	HL
        POP	DE
        LD	HL,I$7D6E
        LDIR
        POP	BC
        BIT	0,C
        JR	Z,J$7CE2
        LD	(IX+19),LOW 1440
        LD	(IX+20),HIGH 1440
        LD	(IX+21),0F9H
        LD	(IX+22),3
        LD	(IX+26),2
J$7CE2:	LD	B,1
        POP	HL
        POP	AF
        PUSH	HL
        LD	DE,0
        CALL	C.744D
        POP	HL
        LD	BC,-34
        ADD	HL,BC
        LD	BC,1*256+1
J$7CF5:	PUSH	BC
J$7CF6:	LD	DE,512
J$7CF9:	LD	(HL),00H
        INC	HL
        DEC	DE
        LD	A,D
        OR	E
        JR	NZ,J$7CF9
        DJNZ	J$7CF6
        POP	BC
        DEC	C
        JR	NZ,J$7CF5
        POP	IX
        POP	HL
        POP	DE
        POP	BC
        RET

;	  Subroutine OEMSTA
;	     Inputs  ________________________
;	     Outputs ________________________

OEMSTA: SCF
        RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$7D0F:	PUSH	HL
        PUSH	DE
        PUSH	BC
        PUSH	AF
        CALL	GETWRK
        POP	AF
        POP	BC
        PUSH	BC
        PUSH	AF
        BIT	0,C		        ; single sided media ?
        JR	Z,J.7D67	        ; yep, skip check
        LD	B,1
        LD	DE,10
        LD	HL,($SECBUF)
        OR	A		        ; drive 0 ?
        JR	NZ,J$7D46	        ; no, drive 1
        BIT	6,(IX+6)
        SET	6,(IX+6)
        JR	Z,J$7D3B
        BIT	4,(IX+6)
        JR	NZ,J.7D67
        JR	J.7D61

J$7D3B:	CALL	C.75A3		        ; DSKIO read
        JR	C,J.7D61	        ; error,
        SET	4,(IX+6)
        JR	J.7D67

J$7D46:	BIT	7,(IX+6)
        SET	7,(IX+6)
        JR	Z,J$7D58
        BIT	5,(IX+6)
        JR	NZ,J.7D67
        JR	J.7D61

J$7D58:	CALL	C.75A3	        	; DSKIO read
        SET	5,(IX+6)
        JR	NC,J.7D67
J.7D61:	POP	AF
        LD	A,8	        	; record not found
        SCF
        JR	J$7D6A

J.7D67:	POP	AF
        SCF
        CCF
J$7D6A:	POP	BC
        POP	DE
        POP	HL
        RET

I$7D6E:
        .PHASE  0C000H

        DEFB	0EBH,0FEH
        DEFB	090H
        DEFB	"ASC  2.2"
        DEFW	512
        DEFB	2
        DEFW	1
        DEFB	2
        DEFW	112
        DEFW	720
        DEFB	0F8H
        DEFW	2
        DEFW	9
        DEFW	1
        DEFW	0

C.C01E:	RET	NC
	LD	(C.C058+1),DE
	LD	(D.C0D0),A
	LD	(HL),LOW C.C056
	INC	HL
	LD	(HL),HIGH C.C056
J$C02B:	LD	SP,KBUF+256
	LD	DE,I.C0AB
	LD	C,0FH
	CALL	BDOS
	INC	A
	JP	Z,J$C063
	LD	DE,0100H
	LD	C,1AH
	CALL	BDOS
	LD	HL,1
	LD	(I.C0AB+14),HL
	LD	HL,4000H-0100H
	LD	DE,I.C0AB
	LD	C,27H
	CALL	BDOS
	JP	0100H

C.C056: DEFW    C.C058

C.C058:	CALL	0
	LD	A,C
	AND	0FEH
	CP	02H
	JP	NZ,J$C06A
J$C063:	LD	A,(D.C0D0)
	AND	A
	JP	Z,BASENT
J$C06A: LD      DE,I$C085
        CALL    C$C077
        LD      C,7
        CALL    BDOS
        JR      J$C02B

C$C077: LD      A,(DE)
        INC     DE
        OR      A
        RET     Z
        PUSH    DE
        LD      E,A
        LD      C,6
        CALL    BDOS
        POP     DE
        JR      C$C077

I$C085:	DEFB	"Boot error",13,10
        DEFB	"Press any key for retry",13,10
        DEFB	0

I.C0AB:	DEFB	0
        DEFB	"MSXDOS  "
        DEFB	"SYS"
        DEFW	0
        DEFW	0
        DEFB	0,0,0,0
        DEFW	0
        DEFW	0
        DEFB	0
        DEFB	0
        DEFW	0
        DEFW	0
        DEFW	0
        DEFB	0
        DEFB	0,0,0,0

D.C0D0:	DEFB	0

        .DEPHASE

S7D6E   EQU     $-I$7D6E

        DEFS    8000H-$,0FFH

        END
