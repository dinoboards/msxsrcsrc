; MLTS2-0.MAC
;
; MSX-MODEM Mitsubishi ML-TS2

; Source re-created by Z80DIS 2.2
; Z80DIS was written by Kenneth Gielow, Palo Alto, CA
;
; Code Copyrighted by ASCII and maybe others
; Source comments by Arjen Zeilemaker
;
; Sourcecode supplied for STUDY ONLY
; Recreation NOT permitted without authorisation of the copyrightholders
;

        .Z80
        ASEG

        org     04000H

RDSLT	EQU	000CH	; -C---
WRSLT	EQU	0014H	; -C--I
LPTSTT	EQU	00A8H	; -C---
SNSMAT	EQU	0141H	; -C---
KILBUF	EQU	0156H	; ----I

BUF     EQU     0F55EH
RSTMP   EQU     BUF
FILTAB	EQU	0F860H	; ---L-
HOKVLD	EQU	0FB20H	; ----I
INTFLG	EQU	0FC9BH	; --SL-
EXPTBL	EQU	0FCC1H	; ----I
H.KEYA	EQU	0FD9AH	; ----I
H.TIMI	EQU	0FD9FH	; ----I
H.STKE	EQU	0FEDAH	; --SLI
H.NEWS	EQU	0FF3EH	; ----I
H.ERRO	EQU	0FFB1H	; ----I
H.LPTO	EQU	0FFB6H	; -C---
EXTBIO	EQU	0FFCAH	; -C--I
DISINT	EQU	0FFCFH	; ----I


D.6047	EQU	6047H			; MSX modem disabled
I$604A	EQU	604AH	; ----I
I$604B	EQU	604BH			; my RS232 number/trap
I$604C	EQU	604CH			; old H.KEYA handler
J.6051	EQU	6051H			; old H.TIMI handler
J.6056	EQU	6056H			; old H.NEWS handler
J.605B	EQU	605BH			; old H.ERRO handler
J.6060	EQU	6060H			; old EXTBIO handler
I.6065	EQU	6065H			; MSX serial defaults
D.6072	EQU	6072H			; timeout value
D$6075	EQU	6075H			; printer output enabled
D.6076	EQU	6076H			; printer not ready counter
D$6078	EQU	6078H			; start of buffer
D.607A	EQU	607AH			; size of buffer
D.607C	EQU	607CH			; number of bytes in buffer
D.607E	EQU	607EH			; put offset buffer
D.6080	EQU	6080H			; get offset buffer
D.6089	EQU	6089H			; counter #1, number of interrupts
D$608B	EQU	608BH			; counter #1, number of 1/10 seconds
D$608D	EQU	608DH			; counter #1, number of seconds
I.608E	EQU	608EH			; counter #2, number of interrupts
D.6090	EQU	6090H			; counter #2, number of 1/10 seconds
D$6092	EQU	6092H			; counter #2, number of seconds
D.6093	EQU	6093H			; current modem type
D.6095	EQU	6095H			; receive byte mask
D.6096	EQU	6096H			; b7,b6 = dailer mode, b1 = originate/answer
D.6097	EQU	6097H			; flags
D.6098	EQU	6098H	; --SLI
D.6099	EQU	6099H	; --S-I
D.609B	EQU	609BH	; --SLI
D.60A1	EQU	60A1H	; --SL-
D.60A7	EQU	60A7H			; pointer to FCB
D.60A9	EQU	60A9H			; receive buffer size
D.60AC	EQU	60ACH			; incoming call flag
D.60AD	EQU	60ADH			; incoming call/dtmf data received flag
I$60AE	EQU	60AEH	; ----I
D$60AF	EQU	60AFH	; ---L-
I$60B0	EQU	60B0H	; ----I
I$60B1	EQU	60B1H	; ----I
D.60B2	EQU	60B2H	; --SLI
D.60B3	EQU	60B3H			; 7FC0 register backup
D.60B4	EQU	60B4H			; NCU register 0 backup
D.60B5	EQU	60B5H			; NCU register 1 backup
D.60B6	EQU	60B6H			; NCU register 2 backup
D.60B7	EQU	60B7H			; NCU register 3 backup (00xxxxxx)
D.60B8	EQU	60B8H			; NCU register 3 backup (10xxxxxx)
D.60B9	EQU	60B9H			; NCU register 0 backup before ?
D.60BA	EQU	60BAH			; NCU register 1 backup before ?
D.60BE	EQU	60BEH			; modem type
I$60BF	EQU	60BFH	; ----I
I$60C4	EQU	60C4H	; ----I
D.60C5	EQU	60C5H			; automatic equalizer
D.60C6	EQU	60C6H	; --SL-
I.60C7	EQU	60C7H	; ----I
D.60C8	EQU	60C8H	; --SL-
D.60CA	EQU	60CAH	; --SL-
D.60CB	EQU	60CBH	; --SL-
D.60CC	EQU	60CCH	; --S-I
D.60CD	EQU	60CDH	; --S--
D.60CE	EQU	60CEH	; --SL-
D.60CF	EQU	60CFH			; equalizer bits
D$6175	EQU	6175H			; comterm mode
D.6176	EQU	6176H			; flags before disable interrupts
D.6189	EQU	6189H	; --SL-
D.61AA	EQU	61AAH	; --SL-
D$634A	EQU	634AH	; ---L-
D.6358	EQU	6358H	; --SL-
D$6618	EQU	6618H	; ---L-
I$6900	EQU	6900H	; ----I
D.6BC3	EQU	6BC3H			; transmitter power bits
D$6BC5	EQU	6BC5H	; ---L-
I$7C25	EQU	7C25H	; ----I
D.7F00	EQU	7F00H			; NCU register 0
D.7F01	EQU	7F01H			; NCU register 1
D.7F02	EQU	7F02H			; NCU register 2
D.7F03	EQU	7F03H			; NCU register 3
D.7FC0	EQU	7FC0H			; segment select / line status

; 7FC0, read
;   b3-b0 = line status
; 7FC0, write
;   b2-b0 = ROM segment (4000H-5FFFH)

; NCU register 0, read
;   b0 =
;   b1 =
;   b2 =
;   b3 = break detected
;   b4 = long loop detected
;   b6 =
;   b7 = dial tone detected
; NCU register 1, read
;   b3 = empty transmitter
;   b2 = data in receiver
;   b1 =
;   b0 =
; NCU register 2, read
;   not used
; NCU register 3, read
;   receiver data

; NCU register 0, write
; NCU register 1, write
;   b7 = send break disabled
;   b3 = disable receiver
; NCU register 2, write
;   b7 = pulse dial
; NCU register 3, write
;   transmitter data

?.4000:	DEFB	"AB"
	DEFW	C.404C
	DEFW	C.403E
	DEFW	C.4045
	DEFS	8,0

; interrupt handler

C.4010:	CALL	C.6039
	DEFB	0
	DEFW	C.4EEC
	JP	C.604C			; continue with previous KEYA handler

; vdp interrupt handler

C.4019:	CALL	C.6039
	DEFB	0
	DEFW	C.445D
	JP	J.6051			; continue with previous TIMI handler

; EXTBIO handler

C.4022:	DI
	CALL	C.6039
	DEFB	0
	DEFW	C.433C
	JP	J.6060			; continue with previous EXTBIO handler

; error handler

C.402C:	CALL	C.6000
	DEFB	3
	DEFW	C.4078
	JP	J.605B			; continue with previous ERRO handler

; new statement handler

C.4035:	CALL	C.6000
	DEFB	1
	DEFW	C.408D			; new statement handler
	JP	J.6056			; continue with previous NEWS handler

; ROM extension CALL statement handler

?.403E:	CALL	C.6000
	DEFB	1
	DEFW	C.4087			; CALL statement handler
	RET

; ROM extension BASIC device handler

?.4045:	CALL	C.6000
	DEFB	0
	DEFW	C.4326
	RET

; ROM extension initialization

?.404C:	DI
	LD	A,08H
	LD	(D.7FC0),A		; select segment 0
	JP	J$41F9			; intialize

	DEFS	4060H-$,0

; MSX modem jump table

I.4060:	JP	C.43E9                  ; CTRL-STOP pressed ?
?.4063:	JP	J$4564                  ; clear receive buffer
?.4066:	JP	C.5403			; get carry detect status
?.4069:	JP	C.49B4			; RS232.LOC
?.406C:	JP	C.491C			; RS232.GETCHR
?.406F:	JP	C.50C6			; RS232.SNDCHR
?.4072:	JP	C.4FF8                  ; wait for received byte
?.4075:	JP	J$41BB			; echo to screen/printer (literal)
I$4078:	JP	J$5408			; initialize dial tone detect
I$407B:	JP	J$5423			; finish dial tone detect
I$407E:	JP	C.448E                  ; counter #1, clear
I$4081:	JP	J$44A1			; counter #1, get number of seconds
I$4084:	JP	C.4418			; get my slotid
I$4087:	JP	J$41A6			; comterm
?.408A:	JP	J$41AD			; set comterm mode
I$408D:	JP	J$41B4			; set protocol and timer values
I$4090:	JP	C.4177                  ; get line status
I.4093:	JP	J$41DE			; save BSAVE file
I$4096:	JP	J$41E5			; load BSAVE file
?.4099:	JP	J$4187			; MAIN BIOS CALL (EI)
?.409C:	JP	C.508B			; signal sender to resume sending
?.409F:	JP	C.50A1			; signal sender to stop sending
?.40A2:	JP	J$41EC			; get phone book data info
?.40A5:	JP	J$418E			; set comterm mode
?.40A8:	JP	J$4198			; echo to screen
?.40AB:	JP	J$419F			; revert to normal graphic screen
?.40AE:	JP	J$41C2			; open file
?.40B1:	JP	J$41C9			; read byte from file
?.40B4:	JP	J$41D0			; close file
?.40B7:	JP	J$41D7			; get usable screen size
?.40BA:	JP	J$51E7			; dialtone ?? counter > 70 ?
?.40BD:	JP	C.464B			; write NCU register 3
?.40C0:	JP	C.4BAC			; initialize NCU registers 0-2, save NCU registers 0/1
?.40C3:	JP	C.4617			; setup NCU registers 0-2 from saved NCU register 0/1
?.40C6:	JP	J$5435			; get dial tone dectect flag
?.40C9:	JP	J$5200                  ; send 300ms break
?.40CC:	JP	C.4FD5                  ; set communication mode
?.40CF:	JP	C.43FB			; STOP pressed ?
?.40D2:	JP	C.4409			; port open ?
?.40D5:	JP	J$4EE0                  ; get ring status
?.40D8:	JP	J$4A5C
?.40DB:	JP	J.4A4A
?.40DE:	JP	C.4C46                  ; set dial mode
?.40E1:	JP	J$4C40                  ; set dialer mode
?.40E4:	JP	C.4A9C			; translate dail character
?.40E7:	JP	J$4994                  ; eof
?.40EA:	JP	C.4FE6			; update current modem type
?.40ED:	JP	J.5289			; enable receiver
?.40F0:	JP	C.529D			; disable receiver
?.40F3:	JP	C.46D6			; initialize serial
?.40F6:	JP	C.53DD                  ; update error flags
?.40F9:	JP	J$544B
?.40FC:	JP	C.4A6F			; error
?.40FF:	JP	C.4A4C                  ; wait for dial tone
?.4102:	JP	J$41F5                  ; on/off hook
?.4105:	JP	J$51C8
?.4108:	JP	J$51D9
?.410B:	JP	J$51E4
?.410E:	JP	J$4FC6			; determine number of bytes left in receive buffer
?.4111:	JP	C.4FD0			; determine number of bytes in receive buffer
?.4114:	JP	J$5430
?.4117:	JP	J$55B0			; initialize buffer
?.411A:	JP	J$55DA			; put byte in buffer (with alt registers and interrupts)
?.411D:	JP	C.55C9			; get free space in buffer
?.4120:	JP	C.55D4			; get number of bytes in buffer
?.4123:	JP	J$55C0			; enable printer output
?.4126:	JP	J$55C6			; disable printer output

I.4129:	DEFB	30H			; +00 MSX serial features (no TxReady INT, No Sync detect, No Timer INT, Have CD, Have RI)
	DEFB	0			; +01 MSX serial version (version 1.0)
	DEFB	0			; +02 reserved
	JP	J$4689			; RS232.INIT
?.412F:	JP	J.47BE			; RS232.OPEN
?.4132:	JP	J$52F9			; RS232.STAT
?.4135:	JP	C.491C			; RS232.GETCHR
?.4138:	JP	C.50C6			; RS232.SNDCHR
?.413B:	JP	J.48DD			; RS232.CLOSE
?.413E:	JP	J$4990			; RS232.EOF
?.4141:	JP	C.49B4			; RS232.LOC
?.4144:	JP	J$49DA			; RS232.LOF
?.4147:	JP	C.4960			; RS232.BACKUP
?.414A:	JP	J$520E			; RS232.SNDBRK
?.414D:	RET				; RS232.DTR
?.414E:	RET
?.414F:	RET
?.4150:	RET				; RS232.SETCHN
?.4151:	RET
?.4152:	RET
?.4153:	JP	J$532D			; MODEM.NCUSTA
?.4156:	JP	J$5439			; MODEM.SPKCNT
?.4159:	JP	J$52B1			; MODEM.LINSEL
?.415C:	JP	J$4A1A			; MODEM.DAILST
?.415F:	JP	J$4A55			; MODEM.DAILCH
?.4162:	JP	C.4A6F			; MODEM.DTMFST
?.4165:	JP	C.4A6F			; MODEM.RDDTMF
?.4168:	JP	J$52CD			; MODEM.HOKCNT
?.416B:	JP	J$5505			; MODEM.CONFIG
?.416E:	RET				; MODEM.SPCIAL
?.416F:	RET
?.4170:	RET
?.4171:	RET				; MODEM reserved
?.4172:	RET
?.4173:	RET
?.4174:	RET				; MODEM reserved
?.4175:	RET
?.4176:	RET

;	  Subroutine get line status
;	     Inputs  ________________________
;	     Outputs ________________________

C.4177:	PUSH	BC
	LD	A,(D.7FC0)
	AND	03H			; b1-b0
	LD	B,A
	LD	A,(D.60B3)		; 7FC0 register backup
	RRA
	AND	08H			; b4->b3
	OR	B
	POP	BC
	RET

;	  Subroutine call MAIN BIOS (EI)
;	     Inputs  ________________________
;	     Outputs ________________________

J$4187:	CALL	C.6000
	DEFB	1
	DEFW	C.407B			; call MAIN BIOS (EI)
	RET

J$418E:	LD	(D$6175),A		; update comterm mode
	CALL	C.6000
	DEFB	2
	DEFW	C.4060
	RET

J$4198:	CALL	C.6000
	DEFB	2
	DEFW	C.4063			; echo to screen
	RET

;	  Subroutine revert to normal graphic screen
;	     Inputs  ________________________
;	     Outputs ________________________

J$419F:	CALL	C.6000
	DEFB	2
	DEFW	C.4066
	RET

;	  Subroutine comterm
;	     Inputs  ________________________
;	     Outputs ________________________

J$41A6:	CALL	C.6000
	DEFB	1
	DEFW	C.4084			; comterm
	RET

;	  Subroutine set comterm mode
;	     Inputs  ________________________
;	     Outputs ________________________

J$41AD:	CALL	C.6000
	DEFB	1
	DEFW	C.4081			; set comterm mode
	RET

;	  Subroutine set protocol and timer values
;	     Inputs  ________________________
;	     Outputs ________________________

J$41B4:	CALL	C.6000
	DEFB	1
	DEFW	C.4093			; set protocol and timer values
	RET

;	  Subroutine echo to screen/printer (literal)
;	     Inputs  ________________________
;	     Outputs ________________________

J$41BB:	CALL	C.6000
	DEFB	1
	DEFW	C.4096			; echo to screen/printer (literal)
	RET

J$41C2:	CALL	C.6000
	DEFB	3
	DEFW	C.4084
	RET

J$41C9:	CALL	C.6000
	DEFB	3
	DEFW	C.4087
	RET

J$41D0:	CALL	C.6000
	DEFB	3
	DEFW	C.408A
	RET

J$41D7:	CALL	C.6000
	DEFB	2
	DEFW	C.4078			; get usable screen size
	RET

J$41DE:	CALL	C.6000
	DEFB	3
	DEFW	C.407B			; save BSAVE file
	RET

J$41E5:	CALL	C.6000
	DEFB	3
	DEFW	C.407E			; load BSAVE file
	RET

J$41EC:	LD	A,100			; number of phone book entries
	LD	BC,I$6900		; start of phone book data
	LD	DE,I$7C25		; end of phone book data
	RET

J$41F5:	LD	(D.61AA),A
	RET

;	  Subroutine intialize
;	     Inputs  ________________________
;	     Outputs ________________________

J$41F9:	LD	A,(D.61AA)
	PUSH	AF
	CALL	C$4508			; initialize modem
	POP	AF
	LD	(D.61AA),A
	LD	A,8
	CALL	SNSMAT
	AND	08H			; DEL key pressed ?
	JR	NZ,J$4213		; nope,
	DEC	A
	LD	(D.6047),A		; MSX modem disabled
	EI
	RET

J$4213:	LD	A,(D$6BC5)
	OR	A
	JR	NZ,J.422F
	LD	A,(H.STKE+0)
	CP	0C9H
	JR	NZ,J.422F
	LD	HL,I$42DF
	LD	(H.STKE+2),HL
	CALL	C.4418			; get my slotid
	LD	H,A
	LD	L,0F7H
	LD	(H.STKE+0),HL
J.422F:	DI
	LD	HL,H.KEYA
	LD	DE,I$604C
	LD	BC,I$42C6
	CALL	C.42B8			; install handler
	LD	HL,H.TIMI
	LD	DE,J.6051
	LD	BC,I$42CB
	CALL	C.42B8			; install handler
	LD	HL,H.NEWS
	LD	DE,J.6056
	LD	BC,I$42D0
	CALL	C.42B8			; install handler
	LD	HL,H.ERRO
	LD	DE,J.605B
	LD	BC,I$42DA
	CALL	C.42B8			; install handler
	CALL	C.4418			; get my slotid
	LD	(H.KEYA+1),A
	LD	(H.TIMI+1),A
	LD	(H.NEWS+1),A
	LD	(H.ERRO+1),A
	EI
	PUSH	AF
	LD	HL,HOKVLD
	BIT	0,(HL)
	JR	NZ,J$4284
	SET	0,(HL)
	LD	HL,EXTBIO
	LD	B,5
J$427F:	LD	(HL),0C9H
	INC	HL
	DJNZ	J$427F
J$4284:	XOR	A
	LD	DE,8*256+1
	CALL	EXTBIO
	LD	HL,I$604B
	LD	(HL),A			; my RS232 number
	XOR	A
	LD	DE,256*0+1
	CALL	EXTBIO
	ADD	A,A
	ADD	A,A
	ADD	A,A
	ADD	A,A
	OR	(HL)
	LD	(HL),A			; update with my trap number
	POP	AF
	LD	HL,EXTBIO
	LD	DE,J.6060
	LD	BC,I$42D5
	CALL	C.42B8			; install handler
	LD	(EXTBIO+1),A
	LD	BC,S.430E
	LD	HL,I$430E
	LD	DE,DISINT
	LDIR
	RET

;	  Subroutine install handler
;	     Inputs  ________________________
;	     Outputs ________________________

C.42B8:	PUSH	BC
	LD	BC,5
	PUSH	BC
	PUSH	HL
	LDIR
	POP	DE
	POP	BC
	POP	HL
	LDIR
	RET

; H.KEYA content

I$42C6:	RST	30H
	DEFB	0
	DEFW	C.4010
	RET

; H.TIMI content

I$42CB:	RST	30H
	DEFB	0
	DEFW	C.4019
	RET

; H.NEWS content

I$42D0:	RST	30H
	DEFB	0
	DEFW	C.4035
	RET

; EXTBIO content

I$42D5:	RST	30H
	DEFB	0
	DEFW	C.4022
	RET

; H.ERRO content

I$42DA:	RST	30H
	DEFB	0
	DEFW	C.402C
	RET

;	  Subroutine BASIC stack initialize interceptor
;	     Inputs  ________________________
;	     Outputs ________________________

I$42DF:	PUSH	AF
	PUSH	BC
	PUSH	DE
	PUSH	HL
	EX	DE,HL
	DEC	DE
	LD	B,5
	LD	HL,H.STKE
J$42EA:	LD	(HL),0C9H
	INC	HL
	DJNZ	J$42EA			; clear H.STKE
	CALL	C.4418			; get my slotid
	ADD	A,A			; expanded slot ?
	LD	HL,16
	JR	NC,J$42FA
	LD	L,16+8
J$42FA:	LD	B,H
	LD	C,L
	DEC	HL
	ADD	HL,SP
	LDDR
	INC	DE
	EX	DE,HL
	LD	SP,HL
	CALL	C.6000
	DEFB	1
	DEFW	C.407E
	POP	HL
J$430A:	POP	DE
	POP	BC
	POP	AF
	RET

I$430E:	PUSH	DE
	LD	E,2
	JR	J$4316

?.4313:	PUSH	DE
	LD	E,3
J$4316:	LD	D,0
	PUSH	IX
	PUSH	IY
	CALL	EXTBIO
	EI
	POP	IY
	POP	IX
	POP	DE
	RET

S.430E	EQU	$-I$430E

;	  Subroutine BASIC device handler
;	     Inputs  ________________________
;	     Outputs ________________________

C.4326:	SCF
	PUSH	AF
	PUSH	HL
	LD	HL,D.6047
	LD	A,(D$634A)		; in disk operation ?
	OR	(HL)                    ; or MSX modem disabled ?
	POP	HL
	JP	NZ,J.43CE		; yep, quit
	POP	AF
	CALL	C.6000
	DEFB	1
	DEFW	C.4090			; BASIC device handler
	RET

;	  Subroutine EXTBIO handler
;	     Inputs  ________________________
;	     Outputs ________________________

C.433C:	EI
	PUSH	AF
	LD	A,D
	INC	A
	JP	Z,J$438B
	DEC	A
	JP	NZ,J$43AB
	LD	A,E
	AND	A
	JR	Z,J$4356
	DEC	A
	JR	Z,J$4363
	DEC	A
	JR	Z,J$4367
	DEC	A
	JR	Z,J$437A
	JR	J$4360
J$4356:	LD	A,08H	; 8 
	CALL	C.43D3
	LD	A,00H
	CALL	C.43D3
J$4360:	JP	J.43CE			; continue with EXTBIO chain

J$4363:	POP	AF
	INC	A
	INC	A
	RET

; disable interrupt

J$4367:	CALL	C.4409			; port open ?
	JR	Z,J$4378		; nope,	continue with EXTBIO chain
	PUSH	BC
	LD	A,(D.6097)		; flags
	LD	(D.6176),A		; update flags before disable interrupts
	CALL	C.50A1			; signal sender to stop sending
	EI
	POP	BC
J$4378:	JR	J.43A9			; continue with EXTBIO chain

; enable interrupt

J$437A:	CALL	C.4409			; port open ?
	JR	Z,J$4389		; nope,	continue with EXTBIO chain
	LD	A,(D.6176)		; flags before disable interrupts
	BIT	1,A
	DI
	CALL	Z,C.508B		; signal sender to resume sending
	EI
J$4389:	JR	J.43A9			; continue with EXTBIO chain

J$438B:	LD	A,E
	AND	A
	JR	NZ,J.43A9		; continue with EXTBIO chain
	CALL	C.4418			; get my slotid
	CALL	C.43D3
	LD	A,LOW I.4060H
	CALL	C.43D3
	LD	A,HIGH I.4060H
	CALL	C.43D3
	LD	A,09H			; maker ID = Mitsubishi
	CALL	C.43D3
	LD	A,00H			; reserved byte
	CALL	C.43D3
J.43A9:	JR	J.43CE			; continue with EXTBIO chain

J$43AB:	CP	08H
	JR	NZ,J.43CE		; continue with EXTBIO chain
	LD	A,E
	AND	A
	JR	Z,J$43B9
	CP	1
	JR	Z,J$43D0
	JR	J.43CE			; continue with EXTBIO chain

J$43B9:	CALL	C.4418			; get my slotid
	CALL	C.43D3
	LD	A,LOW I.4129
	CALL	C.43D3
	LD	A,HIGH I.4129
	CALL	C.43D3
	LD	A,00H
	CALL	C.43D3
J.43CE:	POP	AF
	RET

J$43D0:	POP	AF
	INC	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.43D3:	PUSH	BC
	PUSH	DE
	PUSH	AF
	LD	E,A
	LD	A,B
	CALL	WRSLT
	POP	AF
J$43DC:	EI
	INC	HL
	POP	DE
	POP	BC
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.43E1:	PUSH	BC
	PUSH	DE
	LD	A,B
	CALL	RDSLT
	JR	J$43DC

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.43E9:	CALL	C$43F2			; CTRL-STOP pressed ?
	RET	NC			; nope, quit
	CALL	C$4403			; clear STOP flag
	SCF
	RET

;	  Subroutine CTRL-STOP pressed ?
;	     Inputs  ________________________
;	     Outputs ________________________

C$43F2:	LD	A,(INTFLG)
	CP	3
	SCF
	RET	Z
	OR	A
	RET

;	  Subroutine STOP pressed ?
;	     Inputs  ________________________
;	     Outputs ________________________

C.43FB:	LD	A,(INTFLG)
	AND	A
	RET	Z
	CP	3
	RET	Z

;	  Subroutine clear STOP flag
;	     Inputs  ________________________
;	     Outputs ________________________

C$4403:	XOR	A
	LD	(INTFLG),A
	INC	A
	RET

;	  Subroutine port open ?
;	     Inputs  ________________________
;	     Outputs ________________________

C.4409:	LD	A,(D.6097)
	BIT	3,A			; port open ?
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$440F:	CP	61H	; "a"
	RET	C
	CP	7BH	; "{"
	RET	NC
	SUB	20H	; " "
	RET

;	  Subroutine get my slotid
;	     Inputs  ________________________
;	     Outputs ________________________

C.4418:	PUSH	HL
I$4419:	LD	HL,I$4419
	CALL	C$4421
	POP	HL
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$4421:	PUSH	BC
	PUSH	DE
	PUSH	HL
	LD	A,H
	RLCA
	RLCA
	AND	03H	; 3 
	LD	B,A
	CALL	C$4431
	POP	HL
	POP	DE
	POP	BC
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$4431:	IN	A,(0A8H)
	CALL	C.4453
	AND	03H	; 3 
	LD	E,A
	LD	D,00H
	LD	HL,EXPTBL
	ADD	HL,DE
	LD	A,(HL)
	AND	80H
	OR	E
	RET	P
	LD	E,A
	INC	HL
	INC	HL
	INC	HL
	INC	HL
	LD	A,(HL)
	RLCA
	RLCA
	CALL	C.4453
	AND	0CH	; 12 
	OR	E
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4453:	INC	B
	DEC	B
	RET	Z
	PUSH	BC
J$4457:	RRCA
	RRCA
	DJNZ	J$4457
	POP	BC
	RET

C.445D:	PUSH	AF
	CALL	C$44AD
	LD	HL,D.6089		; counter #1
	CALL	C.4474                  ; increase interrupt counter
	LD	HL,I.608E		; counter #2
	CALL	C.4474                  ; increase interrupt counter
	CALL	C$5578
	POP	AF
	JP	J.4CF4

;	  Subroutine increase interrupt counter
;	     Inputs  ________________________
;	     Outputs ________________________

C.4474:	INC	(HL)
	INC	HL
	INC	(HL)
	LD	A,6
	SUB	(HL)
	RET	NZ
	LD	(HL),A
	INC	HL
	INC	(HL)
	INC	HL
	INC	(HL)
	LD	A,10
	SUB	(HL)
	RET	NZ
	LD	(HL),A
	INC	HL
	INC	(HL)
	RET

;	  Subroutine clear counter set #2
;	     Inputs  ________________________
;	     Outputs ________________________

C.4488:	PUSH	HL
	LD	HL,I.608E		; counter #2
	JR	J$4492

;	  Subroutine clear counter set #1
;	     Inputs  ________________________
;	     Outputs ________________________

C.448E:	PUSH	HL
	LD	HL,D.6089		; counter #1
J$4492:	PUSH	BC
	PUSH	AF
	LD	B,5
	DI
J$4497:	LD	(HL),0
	INC	HL
	DJNZ	J$4497
	EI
	POP	AF
	POP	BC
	POP	HL
	RET

J$44A1:	LD	A,(D$608D)		; counter #1, number of seconds
	RET

?.44A5:	LD	A,(D$608B)		; counter #1, number of 1/10 seconds
	RET

?.44A9:	LD	A,(D.6089)		; counter #1, number of interrupts
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$44AD:	PUSH	HL
	LD	HL,I$604A
	DEC	(HL)
	POP	HL
	RET

I$44B4:
	.PHASE	6000H

C.6000:	DI
	CALL	C.6011
	CALL	C.600C
	DI
	CALL	C.602A
        DEFB	0FEH                    ; skip next instruction
C.600C:	PUSH	DE
	EX	AF,AF'
	EXX
	EI
	RET

C.6011:	EXX
	EX	AF,AF'
	POP	HL
	EX	(SP),HL
	LD	A,(D.60B3)
	LD	B,A			; 7FC0 register backup
	AND	0F8H			; reset b2-b0
	OR	(HL)
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	EX	(SP),HL
	PUSH	BC
J$44D7:	LD	(D.7FC0),A
	LD	(D.60B3),A		; update 7FC0 register backup
	JP	(HL)

C.602A:	EX	AF,AF'
	EXX
	POP	HL
	POP	AF
	AND	07H	; 7 
	LD	B,A
	LD	A,(D.60B3)		; 7FC0 register backup
	AND	0F8H
	OR	B
	JR	J$44D7

C.6039:	CALL	C.6011
	CALL	C$6043
	CALL	C.602A
        DEFB	0FEH                    ; skip next instruction
C.6043:	PUSH	DE
	EX	AF,AF'
	EXX
	RET

	.DEPHASE

S.44B4	EQU	$-I$44B4

I$44FB:	DEFB	"8N1XONNN"
        DEFW	300
        DEFW	300
        DEFB	0

S.44FB	EQU	$-I$44FB

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$4508:	LD	A,08H
	CALL	C.4DB8			; write 7FC0 register
	LD	HL,C.6000
	LD	DE,C.6000+1
	LD	BC,0461H-1
	LD	(HL),0
	LDIR
	LD	A,08H
	CALL	C.4DB8			; write 7FC0 register
	LD	BC,S.44B4
	LD	HL,I$44B4
	LD	DE,C.6000
	LDIR				; initialize mapper switch routines
	LD	HL,I$44FB
	LD	DE,I.6065
	PUSH	DE
	POP	IY
	LD	BC,S.44FB
	LDIR				; initialize channel defaults
	LD	A,0FFH
	LD	(D.60BE),A              ; modem type = default
	CALL	C.46D6			; initialize serial
	LD	A,"T"			; prototcol = tone
	LD	DE,0			; timer values
	CALL	C.6000
	DEFB	1
	DEFW	C.4093			; set protocol and timer values
J$454B:	LD	C,00H
	CALL	C.4FD5			; set communication mode
	LD	A,(D.6096)
	OR	0C0H
	LD	(D.6096),A		; set dial mode = pulse dial, 20pps
	LD	A,40H                   ; pulse dial
	JR	J$455F			; clear flags and receive buffer

;	  Subroutine clear flags and receive buffer
;	     Inputs  ________________________
;	     Outputs ________________________

C$455C:	LD	A,(D.6097)
J$455F:	AND	40H			; leave dial flag
	LD	(D.6097),A

;	  Subroutine clear receive buffer
;	     Inputs  ________________________
;	     Outputs ________________________

J$4564:	PUSH	HL
	DI
	LD	HL,0
	LD	(D.60A1),HL
	LD	(D.6099),HL
	LD	(D.609B),HL
	POP	HL
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$4574:	PUSH	HL
	LD	HL,D.60B5		; NCU register 1 backup
	LD	A,(HL)
	AND	9CH
	LD	(HL),A
	CALL	C.4584
	CALL	C.463B			; write NCU register 1
	POP	HL
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4584:	LD	A,(D.6093)
	LD	B,A
	AND	0CH
	RRA
	RRA
	BIT	5,B
	JR	NZ,J$4591
	DEC	A
J$4591:	OR	(HL)
	LD	(HL),A
	LD	A,B
	AND	30H
	RLA
	OR	(HL)
	LD	(HL),A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.459A:	PUSH	HL
	PUSH	DE
	PUSH	BC
	LD	A,(D.6093)
	AND	03H			; current modem type
	LD	HL,I$45C7
	LD	B,A
	ADD	A,A
	ADD	A,A
	ADD	A,B
	LD	D,00H
	LD	E,A
	ADD	HL,DE
	EX	DE,HL
	LD	HL,I$60BF
	PUSH	HL
	LD	B,05H	; 5 
J$45B4:	LD	A,(DE)
	LD	(HL),A
	INC	HL
	INC	DE
	DJNZ	J$45B4
	POP	HL
	INC	HL
	CALL	C.4584
	DEC	HL
	CALL	C$45DB
	POP	BC
	POP	DE
	POP	HL
	RET

I$45C7:	ADC	A,B
	ADD	A,B
	ADD	A,B
	ADC	A,E
	INC	BC
	SBC	A,B
	ADD	A,B
	ADD	A,B
	SBC	A,E
	INC	BC
	XOR	B
	ADD	A,B
	ADD	A,B
	XOR	E
	INC	BC
	SBC	A,B
	ADD	A,B
	ADD	A,B
	SBC	A,E
	INC	BC
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$45DB:	LD	A,(D.60B4)		; NCU register 0 backup
	AND	0C5H			; reset b5,b4,b3,b1
	OR	(HL)			; OR mask
	CALL	C.4633			; write NCU register 0
	INC	HL
	LD	A,(D.60B5)		; NCU register 1 backup
	AND	9CH			; reset b6,b5,b1,b0
	OR	(HL)			; OR mask
	CALL	C.463B			; write NCU register 1
	INC	HL
	LD	A,(D.60B6)		; NCU register 2 backup
	OR	(HL)			; OR mask
	CALL	C.4643			; write NCU register 2
	CALL	C.4BAC
	INC	HL
	LD	A,(D.60CF)		; equalizer bits
	XOR	(HL)			; XOR mask NCU register 3
	CALL	C.464B			; write NCU register 3
	INC	HL
	LD	A,(D.6BC3)		; transmitter power bits
	AND	30H			; keep transmitter power
	OR	(HL)			; OR mask NCU register 3
	CALL	C.464B			; write NCU register 3
	CALL	C.4617			; setup NCU registers 0-2 from saved NCU register 0/1
	CALL	C.4B65
	CALL	C.4B7E
	JP	C.4B96

;	  Subroutine setup NCU registers 0-2 from saved NCU register 0/1
;	     Inputs  ________________________
;	     Outputs ________________________

C.4617:	CALL	C.467C			; wait for b3=1 NCU register 1
	CALL	C.48C0
	LD	A,(D.60B9)		; NCU register 0 backup before ?
	CALL	C.4633			; write NCU register 0
	LD	A,(D.60BA)		; NCU register 1 backup before ?
	RES	2,A
	CALL	C.463B			; write NCU register 1
	LD	A,(D.60B6)		; NCU register 2 backup
	SET	7,A			; pulse dial
	JP	C.4643			; write NCU register 2

;	  Subroutine write NCU register 0
;	     Inputs  ________________________
;	     Outputs ________________________

C.4633:	DI
	LD	(D.60B4),A		; update NCU register 0 backup
	LD	(D.7F00),A
	RET

;	  Subroutine write NCU register 1
;	     Inputs  ________________________
;	     Outputs ________________________

C.463B:	DI
	LD	(D.60B5),A		; update NCU register 1 backup
	LD	(D.7F01),A
	RET

;	  Subroutine write NCU register 2
;	     Inputs  ________________________
;	     Outputs ________________________

C.4643:	DI
	LD	(D.60B6),A		; update NCU register 2 backup
	LD	(D.7F02),A
	RET

;	  Subroutine write NCU register 3
;	     Inputs  ________________________
;	     Outputs ________________________

C.464B:	CALL	C.467C			; wait for b3=1 NCU register 1
	BIT	6,A			; b6 = 0 ?
	JR	NZ,J.465E		; nope, write NCU register 3 without backup
	BIT	7,A
	JR	NZ,J$465B
	LD	(D.60B7),A		; NCU register 3 backup (00xxxxxx)
	JR	J.465E

J$465B:	LD	(D.60B8),A		; NCU register 3 backup (10xxxxxx)
J.465E:	JR	C.4663			; write NCU register 3

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4660:	CALL	C.467C			; wait for b3=1 NCU register 1
;
;	  Subroutine write NCU register 3
;	     Inputs  ________________________
;	     Outputs ________________________

C.4663:	DI
	LD	(D.7F03),A
	RET

;	  Subroutine read NCU register 0
;	     Inputs  ________________________
;	     Outputs ________________________

C.4668:	DI
	LD	A,(D.7F00)
	RET

;	  Subroutine read NCU register 1
;	     Inputs  ________________________
;	     Outputs ________________________

C.466D:	DI
	LD	A,(D.7F01)
	RET

;	  Subroutine read NCU register 2
;	     Inputs  ________________________
;	     Outputs ________________________

?.4672:	DI
	LD	A,(D.7F02)
	RET

;	  Subroutine read NCU register 3
;	     Inputs  ________________________
;	     Outputs ________________________

C$4677:	DI
	LD	A,(D.7F03)
	RET

;	  Subroutine wait for b3=1 NCU register 1
;	     Inputs  ________________________
;	     Outputs ________________________

C.467C:	PUSH	AF
J$467D:	EI
	NOP
	DI
	CALL	C.466D			; read NCU register 1
	BIT	3,A			; b3 set ?
	JR	Z,J$467D		; nope, wait
	POP	AF
	RET

;	  Subroutine RS232.INIT
;	     Inputs  A = modem type, C = 
;	     Outputs ________________________

J$4689:	EI
	CP	0FFH
	JR	Z,J$4692
	CP	04H	; 4 
	CCF
	RET	C
J$4692:	LD	(D.60BE),A              ; update modem type
	PUSH	BC
	PUSH	DE
	PUSH	HL
	LD	A,C
	OR	A
	LD	D,A
	JR	Z,J.46B5
	LD	D,0C0H
	INC	A
	JR	Z,J.46B5
	SUB	03H
	LD	D,0C0H
	JR	Z,J.46B5
	DEC	A
	LD	D,40H
	JR	Z,J.46B5
	DEC	A
	LD	D,80H
	JR	Z,J.46B5
	SCF
	JR	NZ,J$46D2
J.46B5:	LD	A,(D.6096)
	AND	3FH
	OR	D
	LD	(D.6096),A		; update dailer mode
	LD	DE,I.6065
	PUSH	DE
	POP	IY
	LD	C,13
J$46C6:	CALL	C.43E1
	LD	(DE),A
	INC	DE
	DEC	C
	JR	NZ,J$46C6
	CALL	C.46D6			; initialize serial
	DI
J$46D2:	POP	HL
	POP	DE
	POP	BC
	RET

;	  Subroutine initialize serial
;	     Inputs  ________________________
;	     Outputs ________________________

C.46D6:	LD	A,(IY+0)
	SUB	"5"
	CP	"8"-"5"+1
	CCF
	RET	C
	LD	B,A			; data bits (b1-b0)
	LD	D,A			; data bits (b1-b0)
	CALL	C$53C9			; update receive data mask
	LD	A,(IY+1)
	CP	"E"
	JR	Z,J$46F9
	CP	"I"
	JR	Z,J$46FD
	CP	"N"
	JR	Z,J.4703
	CP	"O"
	SCF
	RET	NZ
	SET	2,B
J$46F9:	SET	3,B
	JR	J.4703

J$46FD:	LD	A,B
	CP	3			; 8 data bits ?
	SCF
	RET	Z			; yep, quit with error
	INC	B			; extra data bit (for ignore)
J.4703:	LD	A,B
	AND	A			; 5 data bits ?
	SCF
	RET	Z			; yep, quit with error
	RLC	B
	RLC	B			; to b3-b2
	LD	A,(IY+2)
	SUB	"1"
	CP	"3"-"1"+1
	CCF
	RET	C			; yep, quit
	INC	A
	RRCA
	RRCA				; to b7-b6
	OR	B
	LD	B,A
	LD	C,0
	LD	A,(IY+3)
	CP	"X"
	JR	NZ,J$4726
	SET	0,C			; XON/XOFF mode
	JR	J$472A

J$4726:	CP	"N"
	SCF
	RET	NZ
J$472A:	LD	A,(IY+4)
	CP	"A"
	JR	NZ,J$4735
J$4731:	SET	1,C			; answer mode
	JR	J$4742
J$4735:	CP	"O"
	JR	Z,J$4740
	LD	A,(D.6096)
	BIT	1,A			; currently in answer mode ?
	JR	NZ,J$4731		; yep,
J$4740:	RES	1,C			; originate mode
J$4742:	LD	A,(IY+5)
	CP	"A"
	JR	NZ,J$474D
	SET	3,C			; auto LF on receive
	JR	J$4751

J$474D:	CP	"N"
	SCF
	RET	NZ
J$4751:	LD	A,(IY+6)
	CP	"A"
	JR	NZ,J$475C
	SET	2,C			; auto LF on transmit
	JR	J$4760

J$475C:	CP	"N"
	SCF
	RET	NZ
J$4760:	LD	A,(IY+7)
	CP	"S"
	JR	NZ,J$4770
	LD	A,D
	CP	2			; 7 data bits ?
	SCF
	RET	NZ			; nope, quit with error
	SET	4,C			; SI/SO mode
	JR	J$4774

J$4770:	CP	"N"
	SCF
	RET	NZ
J$4774:	LD	D,0
	LD	A,(D.6096)
	PUSH	AF
	AND	02H			; b1
	XOR	C
	AND	02H
	ADD	A,D
	LD	D,A
	POP	AF
	AND	0C0H
	OR	C
	LD	(D.6096),A
	LD	A,(D.60BE)
	CP	0FFH              	; modem type = default ?
	JR	NZ,J$4791		; nope,
	LD	A,2
J$4791:	AND	03H
	OR	B
	LD	B,A
	LD	A,(D.6093)
	LD	E,A
	LD	A,B
	LD	(D.6093),A
	DI
	CALL	C$551A
	LD	A,(IY+12)
	LD	(D.6072),A              ; update timeout value
	LD	A,(D.60CE)
	CP	03H
	JR	NZ,J$47B3
	CALL	C$4574
	JR	J$47BC

J$47B3:	LD	A,(D.6093)
	SUB	E
	OR	D
	LD	D,A
	CALL	NZ,C.459A
J$47BC:	OR	A
	RET

;	  Subroutine RS232.OPEN
;	     Inputs  ________________________
;	     Outputs ________________________

J.47BE:	LD	A,(D.6097)
	BIT	3,A                     ; RS232 port open ?
	LD	A,2
	SCF
	RET	NZ			; yep, quit with error
	LD	A,E
	CP	8			; append mode ?
	LD	A,1
	SCF
	RET	Z			; yep, quit with error
	PUSH	BC
	PUSH	DE
	PUSH	HL
	LD	(D.60A7),HL
	PUSH	HL
	LD	H,00H
	LD	L,C
	LD	A,C
	OR	A
	JR	NZ,J$47DE
	LD	H,D
	LD	L,B
J$47DE:	LD	(D.60A9),HL		; update receive buffer size
	POP	HL
	LD	(HL),E
	XOR	A
	INC	HL
	INC	HL
	LD	(HL),A
	INC	HL
	LD	(HL),A
	INC	HL
	INC	HL
	INC	HL
	LD	(HL),A
	INC	HL
	INC	HL
	LD	(HL),A
	CALL	C$455C			; clear flags and receive buffer
	LD	HL,D.60B2
	LD	A,(D.6358)
	OR	A
	LD	A,00H
	LD	(D.6358),A
	JR	Z,J$4810
	LD	A,(D.6096)
	BIT	1,A			; currently in answer mode ?
	LD	A,70H
	JR	NZ,J$480C		; yep,
	LD	A,30H
J$480C:	LD	(HL),A
	JP	J.4879
J$4810:	LD	A,(D.6096)
	BIT	1,A			; currently in answer mode ?
	JR	NZ,J$4833		; yep,
	DI
	CALL	C$5252
	LD	A,(D.60CE)
	CP	03H
	CALL	NZ,C.48D1
	LD	A,(HL)
	CP	0A0H
	JR	NZ,J$482C
	LD	(HL),20H
	JR	J.4879

J$482C:	LD	(HL),10H
	CALL	C.497D
	JR	J.4879

J$4833:	LD	A,(D.60CE)
	CP	03H
	JR	Z,J.485E
	DI
	CALL	C.48A9
	CALL	C$524A
	LD	A,(D.6093)
	AND	03H			; current modem type
	CP	03H	; 3 
	JR	NZ,J.485E
	EI
	LD	C,84
	CALL	C.4C34			; wait for number interrupts
	DI
	CALL	C$48A1
	EI
	LD	C,206
	CALL	C.4C34			; wait for number interrupts
	DI
	CALL	C.48A9
J.485E:	CALL	C.497D
	CALL	C.48C8
	LD	(HL),50H	; "P"
	LD	A,(D.6093)
	AND	03H			; current modem type
	CP	03H	; 3 
	JR	NZ,J.4879
	EI
	LD	C,4
	CALL	C.4C34			; wait for number interrupts
	DI
	CALL	C$48A5
J.4879:	XOR	A
	LD	(D.60CE),A
	LD	HL,D.6097
	SET	3,(HL)                  ; RS232 port open
	EI
	LD	HL,(FILTAB)
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	POP	HL
	PUSH	HL
	SBC	HL,DE
	POP	HL
	PUSH	HL
	JR	NZ,J.489C
	LD	A,(HL)
	CP	02H
	JR	NZ,J.489C
	CALL	C.53EF
	CALL	C.4C32			; wait for 3 seconds
J.489C:	OR	A
	POP	HL
	POP	DE
	POP	BC
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$48A1:	LD	C,09H	; 9 
	JR	J.48AB

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$48A5:	LD	C,08H	; 8 
	JR	J.48AB

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.48A9:	LD	C,0BH
J.48AB:	CALL	C.4BAC
	LD	A,(D.60B8)		; NCU register 3 backup (10xxxxxx)
	CALL	C.4660
	LD	A,(D.60B7)		; NCU register 3 backup (00xxxxxx)
	AND	30H			; keep power transmitter
	OR	C
	CALL	C.4660
	JP	C.4617			; setup NCU registers 0-2 from saved NCU register 0/1

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.48C0:	PUSH	BC
	LD	C,14H	; 20 
	CALL	C.4BCF
	POP	BC
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.48C8:	PUSH	AF
	DI
	LD	A,(D.60B4)		; NCU register 0 backup
	SET	6,A			; set b6
	JR	J$48D8

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.48D1:	PUSH	AF
	DI
	LD	A,(D.60B4)		; NCU register 0 backup
	RES	6,A			; reset b6
J$48D8:	CALL	C.4633			; write NCU register 0
	POP	AF
	RET

;	  Subroutine RS232.CLOSE
;	     Inputs  ________________________
;	     Outputs ________________________

J.48DD:	PUSH	HL
	LD	A,(D.6358)
	OR	A
	JR	NZ,J.4907
	LD	HL,(D.60A7)
	LD	A,(HL)
	CP	02H	; 2 
	LD	A,1AH
	CALL	Z,C.50C6		; RS232.SNDCHR
	CALL	C.467C			; wait for b3=1 NCU register 1
	LD	C,30			; 500 ms
	CALL	C.4C34			; wait for number interrupts
	LD	A,(D.60CE)
	CP	03H
	JR	Z,J.4907
	CALL	C$4985
	CALL	C.48D1
	CALL	C.48A9
J.4907:	XOR	A
	LD	(D.60B2),A
	CALL	C.529D			; disable receiver
	EI
	LD	HL,D.6097
	RES	3,(HL)                  ; RS232 port close
	LD	HL,0
	LD	(D.60A1),HL
	POP	HL
	RET

;	  Subroutine RS232.GETCHR
;	     Inputs  ________________________
;	     Outputs ________________________

C.491C:	PUSH	HL
	PUSH	BC
	CALL	C.4976
	LD	C,(HL)
	LD	(HL),00H
	DEC	HL
	LD	A,(HL)
	LD	(D.6098),A
	LD	(HL),00H
	INC	HL
	AND	A
	JR	NZ,J.4956
	LD	A,C
	AND	A
	JR	NZ,J$4942
	CALL	C.4FF8                  ; wait for received byte
	EI
	LD	C,A
	JP	M,J.4956
	CALL	C.53DD                  ; update error flags
	JR	C,J.4956
	JR	Z,J.4956
J$4942:	PUSH	HL
	LD	HL,(D.60A7)
	LD	A,(HL)
	POP	HL
	CP	04H	; 4 
	JR	Z,J.495A
	LD	A,C
	CP	1AH
	JR	NZ,J.495A
	LD	(HL),A
	AND	A
	SCF
	JR	J$495D
J.4956:	OR	80H
	JR	J$495C
J.495A:	XOR	A
	INC	A
J$495C:	LD	A,C
J$495D:	POP	BC
	POP	HL
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4960:	PUSH	HL
	CALL	C.4976
	LD	(HL),C
	PUSH	AF
	DEC	HL
	LD	A,(D.6098)
	LD	(HL),A
	POP	AF
	POP	HL
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.496E:	PUSH	HL
	CALL	C.4976
	LD	A,(HL)
	POP	HL
	AND	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4976:	LD	HL,(D.60A7)
	INC	HL
	INC	HL
	INC	HL
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.497D:	PUSH	AF
	LD	A,(D.60B6)		; NCU register 2 backup
	SET	5,A
	JR	J$498B

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$4985:	PUSH	AF
	LD	A,(D.60B6)		; NCU register 2 backup
	RES	5,A
J$498B:	CALL	C.4643			; write NCU register 2
	POP	AF
	RET

J$4990:	CALL	C.4A0D
	RET	Z
J$4994:	PUSH	BC
	LD	B,A
	EI
	CALL	C.491C			; RS232.GETCHR
	JP	M,J.49B1
	PUSH	BC
	LD	C,A
	CALL	C.4960
	POP	BC
	CP	1AH
	JR	Z,J$49AD
	XOR	A
	LD	L,A
	LD	H,A
	INC	A
	JR	J.49B1

J$49AD:	LD	HL,-1
	SCF
J.49B1:	LD	A,B
	POP	BC
	RET

;	  Subroutine RS232.LOC
;	     Inputs  ________________________
;	     Outputs ________________________

C.49B4:	PUSH	AF
	PUSH	BC
	EI
	LD	HL,(D.60A7)
	LD	A,(HL)
	CP	01H	; 1 
	JR	NZ,J$49D4
	CALL	C.496E
	LD	HL,0
	JR	Z,J$49CE
	SUB	1AH
	JR	Z,J.49D7
	LD	HL,1
J$49CE:	CALL	C$49EB
	ADD	HL,DE
	JR	J.49D7
J$49D4:	CALL	C.4A0D
J.49D7:	POP	BC
	POP	AF
	RET

J$49DA:	PUSH	AF
	EI
	CALL	C.49B4			; RS232.LOC
	PUSH	DE
	EX	DE,HL
	LD	HL,(D.60A9)		; receive buffer size
	OR	A
	SBC	HL,DE
	INC	HL
	POP	DE
	POP	AF
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$49EB:	PUSH	AF
	PUSH	BC
	PUSH	HL
	LD	DE,(D.60A1)
	LD	A,E
	OR	D
	JR	Z,J.4A09
	LD	C,E
	LD	B,D
	LD	DE,0
J$49FB:	CALL	C$5035
	LD	A,(HL)
	CP	1AH
	JR	Z,J.4A09
	INC	DE
	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,J$49FB
J.4A09:	POP	HL
	POP	BC
	POP	AF
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4A0D:	LD	HL,(D.60A1)
	CALL	C.496E
	JR	Z,J$4A17
	INC	HL
	RET

J$4A17:	LD	A,H
	OR	L
	RET

J$4A1A:	PUSH	HL
J$4A1B:	CALL	C.43E1
	OR	A
	JR	Z,J$4A26
	CALL	C.4A9C			; translate dail character
	JR	NC,J$4A1B
J$4A26:	POP	HL
	RET	C
	CALL	C.4C46			; set dial mode
	RET	C
	DI
	CALL	C$52BA
	EI
	CALL	C.4A4C			; wait for dial tone
J$4A34:	CALL	C.43FB			; STOP pressed ?
	CALL	NZ,C.4A6F		; yep, set error flag
	JR	NZ,J.4A4A		; yep, quit
	CALL	C.43E1
	OR	A
	JR	Z,J.4A4A
	CALL	C.4A9C			; translate dail character
	CALL	C.4A71
	JR	J$4A34
J.4A4A:	EI
	RET

;	  Subroutine wait for dial tone
;	     Inputs  ________________________
;	     Outputs ________________________

C.4A4C:	CALL	C.4B65
	CALL	C.4BE4
	JP	C.4B96

J$4A55:	PUSH	AF
	CALL	C.4C46			; set dial mode
	JR	C,J$4A6E		; error, quit with error
	POP	AF

J$4A5C:	PUSH	BC
	PUSH	AF
	CALL	C.4A9C			; translate dail character
	JR	C,J$4A6A		; error, quit with error
	CALL	C.4A71
	POP	AF
	POP	BC
	OR	A
	RET

J$4A6A:	POP	AF
	POP	BC
	SCF
	RET

J$4A6E:	POP	AF

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4A6F:	SCF
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4A71:	PUSH	HL
	PUSH	BC
	LD	B,A
	LD	A,(D.6BC3)		; transmitter power bits
	PUSH	AF
	PUSH	AF
	LD	H,00H
	CALL	C.54A3
	POP	AF
	LD	A,B
	CALL	C.4B65
	CALL	NZ,C$4AAC
	CALL	C.4B7E
	EI
	LD	C,37H	; "7"
	CALL	C.4BCF
	CALL	C.4B96
	POP	AF
	LD	H,A
	CALL	C.54A3
	POP	BC
	POP	HL
	JP	J$4B31

;	  Subroutine translate dail character
;	     Inputs  ________________________
;	     Outputs ________________________

C.4A9C:	CALL	C$440F
	PUSH	AF
	CALL	C.4C8B
	OR	A
	JR	Z,J$4AA9
	POP	AF
	OR	A
	RET

J$4AA9:	POP	AF
	XOR	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$4AAC:	CP	"H"
	JP	Z,J$4BD9
	CP	":"
	JP	Z,C.4BE4
	CP	"<"
	JP	Z,C.4C32		; wait for 3 seconds and quit
	CP	"T"
	JP	Z,J$4C2A		; set tone dial and quit
	PUSH	AF
	PUSH	BC
	PUSH	AF
	LD	A,(D.6097)
	BIT	6,A			; pulse dial ?
	JR	NZ,J$4AD6		; yep,
	POP	AF
	CALL	C.4C8B
	JR	Z,J.4AD3
	CALL	C$4B06
J.4AD3:	POP	BC
	POP	AF
	RET

J$4AD6:	LD	A,(D.6096)
	BIT	7,A
	LD	BC,33*256+54
	JR	Z,J$4AE3
	LD	BC,17*256+40
J$4AE3:	CALL	C.4C34			; wait for number interrupts
	POP	AF
	CALL	C.4C8B
	JR	Z,J.4AD3
	DI
J$4AED:	CALL	C.52D9
	LD	C,B
	CALL	C.4BCF
	CALL	C.52D1
	LD	C,B
	SLA	C
	CALL	C.4BCF
	DEC	A
	JR	NZ,J$4AED
	CALL	C.52D9
	EI
	JR	J.4AD3

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$4B06:	PUSH	DE
	PUSH	BC
	LD	B,A
	LD	D,40H	; "@"
	AND	0FH	; 15 
	OR	D
	LD	D,A
	LD	A,B
	LD	E,0D0H
	AND	0F0H
	RRA
	RRA
	RRA
	RRA
	OR	E
	LD	E,A
	LD	A,(D.60B8)		; NCU register 3 backup (10xxxxxx)
	AND	30H			; keep b5,b4
	OR	E
	DI
	CALL	C.464B			; write NCU register 3
	LD	A,D
	CALL	C.464B			; write NCU register 3
	EI
	LD	C,5
	CALL	C.4C34			; wait for number interrupts
	POP	BC
	POP	DE
	RET

J$4B31:	PUSH	BC
	PUSH	AF
	LD	A,(D.6097)
	BIT	6,A			; pulse dial ?
	JR	NZ,J.4B62		; yep,
	LD	A,(D.60C6)
	AND	A
	JR	Z,J.4B62
	DI
	CALL	C$536C
	EI
	JR	NC,J.4B5B
	LD	A,(D.6097)
	SET	6,A
	LD	(D.6097),A		; pulse dial
	DEC	HL
	LD	A,(D.60C6)
	CP	2
	JR	NZ,J.4B5B
	INC	A
	LD	(D.60C6),A
J.4B5B:	LD	A,(D.60C6)
	DEC	A
	LD	(D.60C6),A
J.4B62:	POP	AF
	POP	BC
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4B65:	PUSH	AF
	DI
	CALL	C.4BAC
	EI
	LD	A,(D.6097)
	AND	40H			; pulse dial ?
	JR	NZ,J$4B7C		; yep,
	DI
	LD	A,(D.60B6)		; NCU register 2 backup
	RES	7,A			; tone dial
	CALL	C.4643			; write NCU register 2
	EI
J$4B7C:	POP	AF
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4B7E:	PUSH	BC
	PUSH	AF
	LD	A,(D.60B8)		; NCU register 3 backup (10xxxxxx)
	AND	30H			; keep b5,b4
	OR	0C0H			; set b7,b6
	CALL	C.464B			; write NCU register 3
	LD	A,(D.60B7)		; NCU register 3 backup (00xxxxxx)
	AND	30H			; keep power transmitter
	OR	40H			; set b6
	CALL	C.464B			; write NCU register 3
	JR	J$4BA9

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4B96:	PUSH	BC
	PUSH	AF
	DI
	LD	A,(D.60B8)		; NCU register 3 backup (10xxxxxx)
	CALL	C.464B			; write NCU register 3
	LD	A,(D.60B7)		; NCU register 3 backup (00xxxxxx)
	CALL	C.464B			; write NCU register 3
	CALL	C.4617			; setup NCU registers 0-2 from saved NCU register 0/1
	EI
J$4BA9:	POP	AF
	POP	BC
	RET

;	  Subroutine initialize NCU registers 0-2, save NCU registers 0/1
;	     Inputs  ________________________
;	     Outputs ________________________

C.4BAC:	CALL	C.467C			; wait for b3=1 NCU register 1
	LD	A,(D.60B4)		; NCU register 0 backup
	LD	(D.60B9),A		; NCU register 0 backup before ?
	AND	0CAH			; reset b5,b4,b2,b0
	OR	10H			; set b4
	CALL	C.4633			; write NCU register 0
	LD	A,(D.60B5)		; NCU register 1 backup
	LD	(D.60BA),A		; NCU register 1 backup before ?
	AND	88H
	OR	06H
	CALL	C.463B			; write NCU register 1
	LD	A,(D.60B6)		; NCU register 2 backup
	JP	C.4643			; write NCU register 2

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4BCF:	PUSH	BC
J$4BD0:	LD	B,00H
J$4BD2:	DJNZ	J$4BD2
	DEC	C
	JR	NZ,J$4BD0
	POP	BC
	RET

J$4BD9:	CALL	C.52D1
	LD	C,60			; 1 second
	CALL	C.4C34			; wait for number interrupts
	JP	C.52D9

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4BE4:	PUSH	HL
	PUSH	BC
	PUSH	AF
	LD	A,(D.6097)
	BIT	6,A			; pulse dial ?
	LD	C,0C8H
	JR	NZ,J$4BF2		; yep,
	LD	C,0FAH
J$4BF2:	CALL	C.5394
	LD	HL,I$60C4
	XOR	A
	LD	(HL),A
	CALL	C.448E			; clear counter set #1
J$4BFD:	LD	A,(D.6089)		; counter #1, number of interrupts
	CP	20
	JR	C,J$4BFD
J$4C04:	CALL	C.53C0
	EI
	JR	NZ,J$4C12
J$4C0A:	LD	A,(D.6089)		; counter #1, number of interrupts
	CP	C
	JR	C,J$4C04
	JR	J$4C23
J$4C12:	INC	(HL)
	LD	A,(HL)
	CP	0AH	; 10 
	JR	C,J$4C0A
	LD	C,40
	CALL	C.448E			; clear counter set #1
J$4C1D:	LD	A,(D.6089)		; counter #1, number of interrupts
	CP	C
	JR	C,J$4C1D
J$4C23:	CALL	C.53AE
	POP	AF
	POP	BC
	POP	HL
	RET

;	  Subroutine set tone dial
;	     Inputs  ________________________
;	     Outputs ________________________

J$4C2A:	PUSH	HL
	LD	HL,D.6097
	RES	6,(HL)			; tone dial
	POP	HL
	RET

;	  Subroutine wait for 3 seconds
;	     Inputs  ________________________
;	     Outputs ________________________

C.4C32:	LD	C,180

;	  Subroutine wait for number interrupts
;	     Inputs  ________________________
;	     Outputs ________________________

C.4C34:	PUSH	AF
	CALL	C.448E			; clear counter set #1
J$4C38:	LD	A,(D.6089)		; counter #1, number of interrupts
	CP	C
	JR	C,J$4C38
	POP	AF
	RET

;	  Subroutine set dial mode
;	     Inputs  ________________________
;	     Outputs ________________________

J$4C40:	LD	A,C
	INC	A			; default ?
	JR	NZ,C.4C46		; nope
	LD	C,2			; pulse dial, 20pps

;	  Subroutine set dial mode
;	     Inputs  C = dial mode
;	     Outputs ________________________

C.4C46:	PUSH	BC
	LD	A,(D.6096)
	INC	C			; 0FFH (default) ?
	JR	Z,J$4C76		; yep,
	DEC	C			; 0 (tone) ?
	LD	B,00H
	JR	Z,J.4C69		; yep,
	DEC	C
	DEC	C			; 2 (pulse dial 20pps) ?
	LD	B,0C0H
	JR	Z,J.4C69		; yep,
	DEC	C			; 3 (pulse dial 10pps) ?
	LD	B,40H
	JR	Z,J.4C69		; yep,
	DEC	C			; 4 (automatic) ?
	LD	B,80H
	JR	Z,J$4C65		; yep,
	POP	BC
	SCF
	RET

J$4C65:	LD	A,1
	JR	J$4C6A

J.4C69:	XOR	A
J$4C6A:	LD	(D.60C6),A
	LD	A,(D.6096)
	AND	3FH
	OR	B
	LD	(D.6096),A		; update dailer mode
J$4C76:	BIT	6,A
	LD	B,00H			; tone dial
	JR	Z,J$4C7E
	LD	B,40H			; pulse dial
J$4C7E:	DI
	LD	A,(D.6097)
	AND	0BFH			; clear dial flag
	OR	B
	LD	(D.6097),A		; update dail flag
	EI
	POP	BC
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4C8B:	PUSH	HL
	PUSH	BC
	LD	HL,D.6097
	BIT	6,(HL)			; pulse dial ?
	LD	HL,I$4CB0
	LD	BC,S.4CB0
	JR	Z,J$4CA0		; nope,
	LD	HL,I$4CD8
	LD	BC,S.4CD8
J$4CA0:	PUSH	BC
	CPIR
	POP	BC
	JR	Z,J$4CA9
	XOR	A
	JR	J$4CAD
J$4CA9:	DEC	BC
	ADD	HL,BC
	LD	A,(HL)
	OR	A
J$4CAD:	POP	BC
	POP	HL
	RET

I$4CB0:	DEFB    "1234567890*#ABCDHT<:"
        DEFB    11H,12H,13H,14H,15H,16H,17H,18H,19H,1AH,1BH,1CH,1DH,1EH,1FH,10H,"H","T","<",":"

S.4CB0	EQU	($-I$4CB0)/2

I$4CD8:	DEFB    "1234567890HT<:"
        DEFB    01H,02H,03H,04H,05H,06H,07H,08H,09H,0AH,"H","T","<",":"

S.4CD8	EQU	($-I$4CD8)/2

J.4CF4:	PUSH	AF
	CALL	C.4D00
	CALL	C$4DC0
	CALL	C$4E1B
	POP	AF
	RET

C.4D00:	CALL	C$4D0C
	CALL	C.5403			; get carry detect status
	JP	NC,J$52E4		; no carry detect,
	JP	J$52F0

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$4D0C:	LD	HL,D.60B2
	LD	A,(HL)
	OR	A
	RET	Z
	JP	P,J$4D35
	CALL	C.51AE
	LD	A,(HL)
	JR	C,J$4D1F
	AND	0F0H
J$4D1D:	LD	(HL),A
	RET

J$4D1F:	AND	0FH	; 15 
	CP	0FH	; 15 
	LD	A,(HL)
	JR	Z,J$4D29
	INC	A
	JR	J$4D1D

J$4D29:	AND	50H	; "P"
J$4D2B:	LD	(HL),A
	CALL	C.529D			; disable receiver
	BIT	6,A
	RET	NZ
	JP	C.48D1

J$4D35:	LD	B,10H	; 16 
	SUB	B
	JR	Z,J$4D4B
	SUB	B
	JR	Z,J$4D5A
	SUB	B
	JR	Z,J$4D6D
	SUB	B
	SUB	B
	JR	Z,J$4D84
	SUB	B
	JR	Z,J.4D9B
	SUB	B
	JR	Z,J$4DA4
	RET

J$4D4B:	CALL	C.51AE
	RET	C
	CALL	C.48C8
	CALL	C.4488			; clear counter set #2
J.4D55:	LD	A,(HL)
J$4D56:	ADD	A,10H	; 16 
	LD	(HL),A
	RET

J$4D5A:	CALL	C.51AE
	JR	C,J.4D67
	LD	A,(D.6090)		; counter #2, number of 1/10 seconds
	CP	12
	RET	C
	JR	J.4D55

J.4D67:	CALL	C.48D1
	XOR	A
	JR	J$4D56

J$4D6D:	CALL	C.4668			; read NCU register 0
	BIT	1,A			; b1 set ?
	JR	NZ,J$4D79		; yep,
	CALL	C.51AE
	JR	C,J.4D67
J$4D79:	LD	A,(D.6090)		; counter #2, number of 1/10 seconds
	CP	25
	RET	C
	LD	(HL),0B0H
J$4D81:	JP	J.5289			; enable receiver

J$4D84:	LD	A,(D.6093)
	RRA
	JR	NC,J.4D9B
	CALL	C$51F6			; read NCU register 0, is b0 set ?
	RET	Z			; nope, quit
	RRA
	JR	NC,J.4D55
	LD	A,(D.60B4)		; NCU register 0 backup
	SET	3,A			; set b3
	CALL	C.4633			; write NCU register 0
	JR	J.4D55

J.4D9B:	CALL	C$51ED			; read NCU register 0, is b1 set ?
	RET	Z			; nope, quit
	CALL	C.4488			; clear counter set #2
	JR	NZ,J.4D55
J$4DA4:	CALL	C.51AE
	JR	C,J$4DB3
	LD	A,(D.6090)		; counter #2, number of 1/10 seconds
	CP	0AH	; 10 
	RET	C
	LD	(HL),0F0H
	JR	J$4D81

J$4DB3:	LD	(HL),50H	; "P"
	JP	C.529D			; disable receiver

;	  Subroutine write 7FC0 register
;	     Inputs  ________________________
;	     Outputs ________________________

C.4DB8:	DI
	LD	(D.60B3),A
	LD	(D.7FC0),A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$4DC0:	LD	A,(D.60B3)		; 7FC0 register backup
	BIT	4,A
	LD	A,00H
	JR	NZ,J.4DF3
	LD	IX,I$60AE
	LD	A,(D.7FC0)
	BIT	0,A
	CALL	C.4DF7
	LD	IX,I$60B0
	LD	A,(D.7FC0)
	BIT	1,A
	CALL	C.4DF7
	LD	HL,I$60B1
	LD	A,(D$60AF)
	AND	(HL)
	JR	Z,J.4DF3
	LD	A,(D.60AC)
	OR	A
	RET	NZ
	CPL
	LD	(D.60AD),A
J.4DF3:	LD	(D.60AC),A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4DF7:	LD	A,(IX+0)
	JR	Z,J$4E14
	ADD	A,07H	; 7 
	CP	11H	; 17 
	JR	C,J.4E04
	LD	A,10H	; 16 
J.4E04:	LD	(IX+0),A
	CP	03H	; 3 
	JR	C,J$4E0F
	CP	0CH	; 12 
	RET	C
	LD	A,0AFH
J$4E0F	EQU	$-1
	LD	(IX+1),A
	RET

J$4E14:	DEC	A
	JP	P,J.4E04
	XOR	A
	JR	J.4E04

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$4E1B:	LD	A,(D.60B3)		; 7FC0 register backup
	BIT	4,A
	RET	Z
	LD	A,(D.60CB)
	OR	A
	RET	Z
	LD	IY,I.60C7
	LD	A,(IY+1)
	OR	A
	JP	M,J$4ED0
	CALL	C.4177			; get line status
	AND	03H	; 3 
	LD	L,A
	LD	A,(D$6618)
	AND	03H	; 3 
	CP	L
	JP	NZ,J.4ECA
	DI
	CALL	C$53C3			; read NCU register 0, is b7 set ?
	LD	HL,D.60CC
	JR	NZ,J$4E50		; yep,
	DEC	(HL)
	JP	P,J.4E52
	INC	(HL)
	JR	J.4E52
J$4E50:	LD	(HL),3
J.4E52:	LD	A,(HL)
	OR	A
	JR	NZ,J$4E9B
	INC	(IY+2)
	LD	A,(IY+1)
	CP	7FH
	JR	Z,J$4E78
	LD	A,(IY+2)
	CP	24H	; "$"
	JR	C,J.4E86
	DEC	(IY+2)
	LD	A,(IY+1)
	LD	(IY+1),00H
	OR	A
	JR	NZ,J.4ECA
	LD	A,0FFH
	JR	J$4E93
J$4E78:	LD	A,(IY+2)
	CP	0B4H
	JR	C,J.4E86
	DEC	(IY+2)
	LD	(D.60CD),A
	RET

J.4E86:	LD	A,(IY+0)
	CP	2AH	; "*"
	JR	NC,J.4ECA
	CP	18H
	JR	C,J$4E96
	LD	A,0FEH
J$4E93:	LD	(D.60CB),A
J$4E96:	LD	(IY+0),00H
	RET

J$4E9B:	LD	A,(IY+2)
	LD	(IY+2),00H
	CP	24H	; "$"
	JR	NC,J.4EBC
	CP	18H
	JR	C,J.4EBC
	LD	A,(D.60CB)
	CP	0FEH
	JR	NZ,J.4EBC
	LD	A,(IY+1)
	INC	A
	CP	7FH
	JR	NC,J.4EBC
	LD	(IY+1),A
J.4EBC:	LD	A,0FFH
	LD	(D.60CB),A
	INC	(IY+0)
	LD	A,(IY+0)
	CP	64H	; "d"
	RET	C
J.4ECA:	LD	A,0FEH
	LD	(IY+1),A
	RET

J$4ED0:	CALL	C.4668			; read NCU register 0
	AND	04H			; b2 set ?
	JR	Z,J$4EDC		; nope,
	LD	A,(D.60CA)
	INC	A
	RET	Z
J$4EDC:	LD	(D.60CA),A
	RET

;	  Subroutine get ring status
;	     Inputs  ________________________
;	     Outputs ________________________

J$4EE0:	DI
	LD	A,(D.60AD)
	OR	A
	LD	A,00H
	LD	(D.60AD),A
	EI
	RET

;	  Subroutine interrupt handler
;	     Inputs  ________________________
;	     Outputs ________________________

?.4EEC:	LD	A,(D.6097)
	BIT	3,A                     ; RS232 port open ?
	RET	Z			; nope, quit
	CALL	C.466D			; read NCU register 1
	BIT	2,A			; char in receiver ?
	RET	Z			; nope, quit
	CALL	C$4677			; read NCU register 3
	LD	B,A			; store received byte
	LD	A,(D.60B5)		; NCU register 1 backup
	BIT	3,A
	RET	Z
	LD	A,B			; received byte
	LD	HL,D.6095
	AND	(HL)			; mask off
	LD	C,A			; store received byte
	CALL	C.466D			; read NCU register 1
	AND	03H			; b1-b0
	LD	B,A			; store received status
	AND	01H
	RLCA
	RLCA				; b0 to b2
	OR	B			; b2-b0
	RLCA
	RLCA				; to b4-b2
	LD	B,A
	BIT	1,A
	JR	NZ,J.4F5F
	BIT	0,A
	JR	NZ,J.4F5F
	CALL	C.4668			; read NCU register 0
	BIT	3,A			; b3 set ?
	JR	NZ,J$4F3E		; yep,
	LD	A,(D.6096)
	BIT	0,A                     ; XON/XOFF handshake ?
	JR	Z,J.4F47		; nope,
	LD	HL,D.6097
	LD	A,C
	CP	11H                     ; XON ?
	JR	Z,J$4F3B		; yep,
	CP	13H                     ; XOFF ?
	JR	NZ,J.4F47		; nope,
	SET	2,(HL)			; in XOFF
	RET

J$4F3B:	RES	2,(HL)			; out of XOFF
	RET

J$4F3E:	LD	HL,D.6097
	SET	4,(HL)			; break detected
	LD	B,0			; no error
	JR	J.4F5F

J.4F47:	LD	A,(D.6096)
	BIT	4,A                     ; SI/SO handshake ?
	JR	Z,J.4F5F		; nope,
	LD	HL,D.6097
	LD	A,C
	SUB	0FH                     ; SI ?
	JR	NZ,J$4F59		; nope,
	RES	7,(HL)			; out of SO
I$4F58:	RET

J$4F59:	INC	A                     	; SO ?
	JR	NZ,J.4F5F		; nope,
	SET	7,(HL)			; in SO
	RET

J.4F5F:	LD	A,C			; received byte
	LD	(D.6189),A
J$4F63:	CALL	C.4FD0                  ; determine number of bytes in receive buffer
	LD	HL,(D.60A9)		; receive buffer size
	OR	A
	SBC	HL,DE                   ; receive buffer full ?
	RET	Z			; yep, quit
	PUSH	BC
	CALL	C$5062                  ; get put pointer in receive buffer
	POP	BC
	LD	A,(D.6096)
	BIT	4,A                     ; SI/SO handshake ?
	LD	A,C
	JR	Z,J.4F88		; nope,
	CP	20H
	JR	C,J.4F88
	LD	A,(D.6097)
	BIT	7,A			; in SO ?
	LD	A,C
	JR	Z,J.4F88		; nope,
	OR	80H			; set high bit
J.4F88:	LD	(HL),A
	PUSH	HL
	CALL	C.4FD0			; determine number of bytes in receive buffer
	LD	HL,(D.60A9)		; receive buffer size
	PUSH	HL
	OR	A
	SBC	HL,DE
	JR	NZ,J$4F98
	SET	7,B			; buffer overflow
J$4F98:	EX	(SP),HL
	SRL	H
	RR	L
	SRL	H
	RR	L
	POP	DE
	EX	DE,HL
	OR	A
	SBC	HL,DE
	POP	HL
	CALL	C,C.50A1                ; signal sender to stop sending
	DI
	LD	A,B			; receive status
	INC	HL
	LD	(HL),A
	DEC	HL
	AND	A			; any errors ?
	RET	NZ			; yep, quit
	LD	A,(D.6096)
	BIT	3,A
	RET	Z
	LD	A,(D.6189)
	SUB	13
	RET	NZ
	LD	(D.6189),A
	LD	BC,256*0+10
	JP	J$4F63

J$4FC6:	CALL	C.4FD0			; determine number of bytes in receive buffer
	LD	HL,(D.60A9)		; receive buffer size
	OR	A
	SBC	HL,DE
	RET

;	  Subroutine determine number of bytes in receive buffer
;	     Inputs  ________________________
;	     Outputs ________________________

C.4FD0:	LD	DE,(D.60A1)
	RET

;	  Subroutine set communication mode
;	     Inputs  ________________________
;	     Outputs ________________________

C.4FD5:	PUSH	AF
	LD	A,C
	OR	A
	LD	A,(D.6096)
	SET	1,A			; answer mode
	JR	NZ,J$4FE1		; yep,
	RES	1,A			; originate mode
J$4FE1:	LD	(D.6096),A
	POP	AF
	RET

;	  Subroutine update current modem type
;	     Inputs  ________________________
;	     Outputs ________________________

C.4FE6:	INC	D
	RET	Z
	DEC	D
	LD	A,(D.6093)
	AND	0FCH
	OR	D
	LD	(D.6093),A		; update current modem type
	DI
	CALL	C.459A
	EI
	RET

;	  Subroutine wait for received byte
;	     Inputs  ________________________
;	     Outputs ________________________

C.4FF8:	PUSH	HL
	PUSH	DE
	PUSH	BC
J$4FFB:	EI
	CALL	C.43E9                  ; CTRL-STOP pressed ?
	JR	C,J$502D		; yep,
	CALL	C.4FD0			; determine number of bytes in receive buffer
	LD	A,E
	OR	D			; none ?
	JR	NZ,J$500D		; nope,
	CALL	C.508B			; signal sender to resume sending
	JR	J$4FFB

J$500D:	LD	HL,3
	SBC	HL,DE
	CALL	NC,C.508B		; signal sender to resume sending
	DI
	CALL	C$5055
	LD	C,(HL)
	LD	B,80H
	INC	HL
	LD	A,(HL)
	LD	(D.6098),A
	AND	A
	JR	Z,J$5025
	INC	B
J$5025:	LD	A,C
	OR	A
	DEC	B
J$5028:	EI
	POP	BC
	POP	DE
	POP	HL
	RET

J$502D:	PUSH	AF
	POP	BC
	RES	7,C
	PUSH	BC
	POP	AF
	JR	J$5028

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$5035:	PUSH	DE
	LD	HL,(D.609B)
	ADD	HL,DE
	LD	DE,(D.60A9)		; receive buffer size
	PUSH	HL
	OR	A
	SBC	HL,DE
	JR	C,J.5049
	EX	DE,HL
	POP	DE
	SBC	HL,DE
	PUSH	HL
J.5049:	LD	HL,(D.60A7)
	LD	DE,9
	ADD	HL,DE
	POP	DE
	ADD	HL,DE
	ADD	HL,DE
	POP	DE
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$5055:	LD	HL,(D.60A1)
	DEC	HL
	LD	(D.60A1),HL
	LD	IX,D.609B
	JR	J$506D

;	  Subroutine get put pointer in receive buffer
;	     Inputs  ________________________
;	     Outputs ________________________

C$5062:	LD	HL,(D.60A1)
	INC	HL
	LD	(D.60A1),HL
	LD	IX,D.6099
J$506D:	PUSH	DE
	LD	L,(IX+0)
	LD	H,(IX+1)
	PUSH	HL
	INC	HL
	PUSH	HL
	LD	DE,(D.60A9)		; receive buffer size
	OR	A
	SBC	HL,DE
	JR	NZ,J$5082
	POP	DE
	DEFB	03EH			; skip next instruction
J$5082:	POP	HL
	LD	(IX+0),L
	LD	(IX+1),H
	JR	J.5049

;	  Subroutine signal sender to resume sending
;	     Inputs  ________________________
;	     Outputs ________________________

C.508B:	DI
	LD	A,(D.6097)
	BIT	1,A
	RET	Z
	PUSH	BC
	LD	C,11H
	CALL	C.50B9
	POP	BC
	PUSH	HL
	LD	HL,D.6097
	RES	1,(HL)
	POP	HL
	RET

;	  Subroutine signal sender to stop sending
;	     Inputs  ________________________
;	     Outputs ________________________

C.50A1:	DI
	LD	A,(D.6097)
	BIT	1,A
	RET	NZ
	PUSH	HL
	LD	HL,D.6097
	SET	1,(HL)
	POP	HL
	PUSH	BC
	LD	C,13H	; 19 
	CALL	C.50B9
	POP	BC
	JP	C.467C			; wait for b3=1 NCU register 1

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.50B9:	LD	A,(D.6096)
	BIT	0,A
	RET	Z
	CALL	C.467C			; wait for b3=1 NCU register 1
	LD	A,C
	JP	C.4663			; write NCU register 3

;	  Subroutine RS232.SNDCHR
;	     Inputs  ________________________
;	     Outputs ________________________

C.50C6:	PUSH	BC
	LD	C,A
	CALL	C$50CE
	LD	A,C
	POP	BC
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$50CE:	EI
	PUSH	BC
	LD	C,A
	LD	A,(D.6096)
	BIT	4,A
	JR	Z,J.5110
	LD	A,C
	CP	20H	; " "
	JR	C,J.5110
	LD	A,(D.6097)
	BIT	0,A
	JR	NZ,J$50FA
	BIT	7,C
	JR	Z,J.5110
	LD	A,0EH	; 14 
	CALL	C.5112
	JR	C,J.515D
	JR	Z,J.515D
	PUSH	HL
	LD	HL,D.6097
	SET	0,(HL)
	POP	HL
	JR	J.510E
J$50FA:	BIT	7,C
	JR	NZ,J.510E
	LD	A,0FH	; 15 
	CALL	C.5112
	JR	C,J.515D
	JR	Z,J.515D
	PUSH	HL
	LD	HL,D.6097
	RES	0,(HL)
	POP	HL
J.510E:	RES	7,C
J.5110:	LD	A,C
	POP	BC
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5112:	PUSH	HL
	LD	HL,D.6096
	BIT	2,(HL)
	POP	HL
	JR	Z,J.5131
	CP	0AH	; 10 
	JR	NZ,J.5131
	LD	A,(D.6097)
	BIT	5,A
	LD	A,0AH	; 10 
	JR	Z,J.5131
	PUSH	HL
	LD	HL,D.6097
	RES	5,(HL)
	POP	HL
	AND	A
	RET

J.5131:	PUSH	BC
	LD	C,A
	PUSH	DE
	CALL	C$5178
	POP	DE
	JR	C,J.515D
	JR	Z,J.515D
	CALL	C.53EF
	JR	C,J.515D
	JR	Z,J.515D
	DI
	CALL	C.467C			; wait for b3=1 NCU register 1
	LD	A,C
	CALL	C.4663			; write NCU register 3
	EI
	PUSH	HL
	LD	HL,D.6097
	CP	0DH
	JR	NZ,J$5158
	SET	5,(HL)
	JR	J$515A
J$5158:	RES	5,(HL)
J$515A:	POP	HL
	XOR	A
	INC	A
J.515D:	CALL	C.53DD                  ; update error flags
	JR	C,J$5164
	JR	NZ,J$5175
J$5164:	LD	IX,KILBUF
	CALL	C.6000
	DEFB	1
	DEFW	C.4078
	PUSH	HL
	LD	HL,D.6097
	RES	2,(HL)
	POP	HL
J$5175:	LD	A,C
	POP	BC
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$5178:	LD	A,(D.6096)
	BIT	0,A
	JR	Z,J.519A
	CALL	C.4488			; clear counter set #2
J$5182:	EI
	CALL	C.43E9                  ; CTRL-STOP pressed ?
	DI
	RET	C			; yep, quit
	LD	A,(D.6097)
	BIT	2,A
	JR	Z,J.519A
	CALL	C.5403			; get carry detect status
	CCF
	RET	C			; no carry detect, quit
	CALL	C.519D			; timeout occured ?
	RET	Z			; yep, quit
	JR	J$5182			; again

J.519A:	XOR	A
	INC	A
	RET

;	  Subroutine timeout occured ?
;	     Inputs  ________________________
;	     Outputs ________________________

C.519D:	PUSH	HL
	LD	HL,D.6072
	LD	A,(HL)              	; timeout value
	OR	A			; timeout value specified ?
	JR	NZ,J$51A8		; yep,
	INC	A
	JR	J$51AC

J$51A8:	LD	A,(D$6092)		; counter #2, number of seconds
	CP	(HL)
J$51AC:	POP	HL
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.51AE:	PUSH	HL
	PUSH	BC
	LD	B,A
	CALL	C.4668			; read NCU register 0
	LD	HL,D.6093
	BIT	0,(HL)
	JR	NZ,J$51BF
	BIT	2,A			; b2 set ?
	JR	J$51C1

J$51BF:	BIT	6,A			; b6 set ?
J$51C1:	JR	NZ,J$51C4
	SCF
J$51C4:	LD	A,B
	POP	BC
	POP	HL
	RET

J$51C8:	XOR	A
	LD	(D.60CE),A
	LD	(D.6358),A
	LD	HL,RSTMP
	LD	E,4                     ; file mode = random
	LD	C,120                   ; buffer size = 120
	JP	J.47BE			; RS232.OPEN

J$51D9:	LD	A,3
J$51DB:	LD	(D.60CE),A
	LD	(D.6358),A
	JP	J.48DD			; RS232.CLOSE

J$51E4:	XOR	A
	JR	J$51DB

;	  Subroutine dialtone ?? counter > 70 ?
;	     Inputs  ________________________
;	     Outputs ________________________

J$51E7:	LD	A,(D.60CA)
	CP	70
	RET

;	  Subroutine read NCU register 0, is b1 set ?
;	     Inputs  ________________________
;	     Outputs ________________________

C$51ED:	PUSH	BC
	LD	B,A
	CALL	C.4668			; read NCU register 0
	BIT	1,A			; b1 set ?
	JR	J$51FD

;	  Subroutine read NCU register 0, is b0 set ?
;	     Inputs  ________________________
;	     Outputs ________________________

C$51F6:	PUSH	BC
	LD	B,A
	CALL	C.4668			; read NCU register 0
	BIT	0,A			; b0 set ?
J$51FD:	LD	A,B
	POP	BC
	RET

;	  Subroutine send 300ms break
;	     Inputs  ________________________
;	     Outputs ________________________

J$5200:	PUSH	BC
	CALL	C.5241
	LD	C,18			; 300 ms
	CALL	C.4C34			; wait for number interrupts
	CALL	C.5234
	POP	BC
	RET

J$520E:	CALL	C.5241
	EX	DE,HL
	LD	A,(D.6093)
	BIT	0,A
	JR	Z,J$5223
	SRL	L
	RR	H
	LD	A,H
	OR	L
	JR	NZ,J$5224
	INC	HL
	LD	A,29H	; ")"
J$5223	EQU	$-1
J$5224:	EX	DE,HL
	LD	C,1
J$5227:	CALL	C.43E9                  ; CTRL-STOP pressed ?
	JR	C,C.5234		; yep,
	CALL	C.4C34			; wait for number interrupts
	DEC	DE
	LD	A,D
	OR	E
	JR	NZ,J$5227
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5234:	DI
	PUSH	AF
	LD	A,(D.60B5)		; NCU register 1 backup
	SET	7,A
J$523B:	CALL	C.463B			; write NCU register 1
	EI
	POP	AF
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5241:	DI
	PUSH	AF
	LD	A,(D.60B5)		; NCU register 1 backup
	RES	7,A
	JR	J$523B

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$524A:	PUSH	HL
	LD	HL,I$5281
	LD	B,08H			; set b3
	JR	J$5258

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$5252:	PUSH	HL
	LD	B,00H			; reset b3
	LD	HL,I$5285
J$5258:	LD	A,(D.6093)
	AND	03H			; current modem type
	LD	D,0
	LD	E,A
	ADD	HL,DE
	LD	A,(D.60B4)		; NCU register 0 backup
	AND	0C5H			; clear b5,b4,b3,b1
	OR	(HL)
	CALL	C.4633			; write NCU register 0
	CALL	C.4BAC			; initialize NCU registers 0-2, save NCU registers 0/1
	LD	A,(D.60B8)		; NCU register 3 backup (10xxxxxx)
	CALL	C.464B			; write NCU register 3
	LD	A,(D.60B7)		; NCU register 3 backup (00xxxxxx)
	AND	0F7H			; reset b3
	OR	B
	CALL	C.464B			; write NCU register 3
	CALL	C.4617			; setup NCU registers 0-2 from saved NCU register 0/1
	POP	HL
	RET

I$5281:	DEFB	1AH,1AH,3AH,12H
I$5285:	DEFB	08H,18H,28H,18H

;	  Subroutine enable receiver
;	     Inputs  ________________________
;	     Outputs ________________________

J.5289:	DI
	PUSH	AF
	LD	A,(D.60B5)		; NCU register 1 backup
	SET	3,A
	CALL	C.463B			; write NCU register 1
	LD	A,(D.60B3)		; 7FC0 register backup
	SET	6,A
	CALL	C.4DB8			; write 7FC0 register
	POP	AF
	RET

;	  Subroutine disable receiver
;	     Inputs  ________________________
;	     Outputs ________________________

C.529D:	DI
	PUSH	AF
	LD	A,(D.60B5)		; NCU register 1 backup
	RES	3,A
	CALL	C.463B			; write NCU register 1
	LD	A,(D.60B3)		; 7FC0 register backup
	RES	6,A
	CALL	C.4DB8			; write 7FC0 register
	POP	AF
J$52B0:	RET

J$52B1:	DI
	OR	A
	JR	NZ,J.52C2
	CPL
	DI
	AND	A
	JR	Z,J.52C2
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$52BA:	PUSH	AF
	LD	A,(D.60B3)		; 7FC0 register backup
	OR	18H
	JR	J$52C8
J.52C2:	PUSH	AF
	LD	A,(D.60B3)		; 7FC0 register backup
	AND	0E7H
J$52C8:	CALL	C.4DB8			; write 7FC0 register
	POP	AF
	RET

J$52CD:	DI
	AND	A
	JR	NZ,C.52D9
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.52D1:	PUSH	AF
	LD	A,(D.60B3)		; 7FC0 register backup
	RES	3,A
	JR	J$52DF

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.52D9:	PUSH	AF
	LD	A,(D.60B3)		; 7FC0 register backup
	SET	3,A
J$52DF:	CALL	C.4DB8			; write 7FC0 register
	POP	AF
	RET

J$52E4:	DI
	PUSH	AF
	LD	A,(D.60B3)		; 7FC0 register backup
	RES	7,A
J$52EB:	CALL	C.4DB8			; write 7FC0 register
	POP	AF
	RET

J$52F0:	DI
	PUSH	AF
	LD	A,(D.60B3)		; 7FC0 register backup
	SET	7,A
	JR	J$52EB

;	  Subroutine RS232.STAT
;	     Inputs  ________________________
;	     Outputs ________________________

J$52F9:	PUSH	AF
	LD	L,18H
	LD	A,(D.60AC)
	OR	A
	JR	Z,J$5304
	LD	L,1AH
J$5304:	DI
	LD	A,(D.6097)
	BIT	4,A			; break detected ?
	JR	Z,J$5313		; nope,
	SET	2,L			; set break detected
	RES	4,A
	LD	(D.6097),A		; clear break detected
J$5313:	CALL	C.5403			; get carry detect status
	JR	NC,J$531A		; no carry detect,
	SET	0,L
J$531A:	CALL	C.4668			; read NCU register 0
	EI
	BIT	4,A			; b4 set ?
	LD	H,0			; reset b9
	JR	Z,J$5326		; nope,
	LD	H,2			; set b9
J$5326:	LD	A,(D.6098)
	OR	H
	LD	H,A
	POP	AF
	RET

J$532D:	PUSH	AF
	LD	HL,0
	LD	A,(D.60AC)
	OR	A
	JR	Z,J$5339
	SET	0,L
J$5339:	LD	A,(D.6096)
	AND	0C0H			; dailer mode
	JR	Z,J.5350
	CP	40H	; "@"
	JR	Z,J$534E
	CP	0C0H
	JR	Z,J$534A
	SET	1,L
J$534A:	SET	2,L
	JR	J.5350

J$534E:	SET	1,L
J.5350:	LD	A,(D.7FC0)
	AND	03H
	RLA
	RLA
	RLA
	OR	L
	LD	L,A
	CALL	C$5363
	JR	Z,J$5361
	SET	6,L
J$5361:	POP	AF
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$5363:	CALL	C.537F
	CALL	C.53C0
	JP	J.539D

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$536C:	CALL	C.537F
	LD	B,06H	; 6 
J$5371:	CALL	C.53C0
	JR	Z,J$537B
	DJNZ	J$5371
	SCF
	JR	J$537C
J$537B:	AND	A
J$537C:	JP	J.539D

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.537F:	DI
	CALL	C.4BAC			; initialize NCU registers 0-2, save NCU registers 0/1
	CALL	C.48C0
	JR	J$538C
J$5388:	DI
	CALL	C.4BAC			; initialize NCU registers 0-2, save NCU registers 0/1
J$538C:	CALL	C.5394
	CALL	C.4617			; setup NCU registers 0-2 from saved NCU register 0/1
	EI
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5394:	LD	A,0BFH
	CALL	C.4660
	LD	A,0BH	; 11 
	JR	J$53B7
J.539D:	PUSH	AF
	DI
	CALL	C$53A5
	EI
	POP	AF
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$53A5:	CALL	C.4BAC			; initialize NCU registers 0-2, save NCU registers 0/1
	CALL	C.53AE
	JP	C.4617			; setup NCU registers 0-2 from saved NCU register 0/1

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.53AE:	LD	A,(D.60B8)		; NCU register 3 backup (10xxxxxx)
	CALL	C.4660
	LD	A,(D.60B7)		; NCU register 3 backup (00xxxxxx)
J$53B7:	CALL	C.4660
	CALL	C.467C			; wait for b3=1 NCU register 1
	JP	C.48C0

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.53C0:	CALL	C.48C0

;	  Subroutine read NCU register 0, is b7 set ?
;	     Inputs  ________________________
;	     Outputs ________________________

C$53C3:	CALL	C.4668			; read NCU register 0
	BIT	7,A			; b7 set ?
	RET

;	  Subroutine update receive data mask
;	     Inputs  ________________________
;	     Outputs ________________________

C$53C9:	PUSH	AF
	PUSH	BC
	XOR	03H
	LD	C,0FFH
	JR	Z,J$53D6
	LD	B,A
J$53D2:	SRL	C
	DJNZ	J$53D2
J$53D6:	LD	A,C
	LD	(D.6095),A		; update receive data mask
	POP	BC
	POP	AF
	RET

;	  Subroutine update error flags
;	     Inputs  ________________________
;	     Outputs ________________________

C.53DD:	PUSH	HL
	LD	HL,D.6098
	LD	(HL),00H
	JR	C,J$53EB
	JR	NZ,J.53ED
	SET	6,(HL)
	JR	J.53ED
J$53EB:	SET	2,(HL)
J.53ED:	POP	HL
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.53EF:	CALL	C.4488			; clear counter set #2
J$53F2:	CALL	C.519D			; timeout occured ?
	RET	Z			; yep, quit
	CALL	C.43E9                  ; CTRL-STOP pressed ?
	EI
	RET	C			; yep, quit
	CALL	C.5403			; get carry detect status
	JR	NC,J$53F2		; no carry detect, again
	XOR	A
	INC	A
	RET

;	  Subroutine get carry detect status
;	     Inputs  ________________________
;	     Outputs ________________________

C.5403:	LD	A,(D.60B2)
	RLCA
	RET

;	  Subroutine initialize dial tone detect
;	     Inputs  ________________________
;	     Outputs ________________________

J$5408:	CALL	C.4FE6			; update current modem type
	DI
	XOR	A
	LD	(D.60CC),A
	LD	(D.60CD),A
	LD	HL,I.60C7
	LD	(HL),A
	INC	HL
	LD	(HL),A
	INC	HL
	LD	(HL),A
	INC	HL
	LD	(HL),A
	INC	HL
	DEC	A
	LD	(HL),A
	JP	J$5388

;	  Subroutine finish dial tone detect
;	     Inputs  ________________________
;	     Outputs ________________________

J$5423:	LD	A,(D.60C8)
	INC	A
	RET	Z
	LD	A,0FFH
	LD	(D.60C8),A
	JP	J.539D

J$5430:	XOR	A
	LD	(D.60CB),A
	RET

;	  Subroutine get dial tone dectect flag
;	     Inputs  ________________________
;	     Outputs ________________________

J$5435:	LD	A,(D.60C8)
	RET

J$5439:	PUSH	AF
	AND	A
	DI
	LD	A,(D.60B3)		; 7FC0 register backup
	SET	5,A
	JR	NZ,J$5445
	RES	5,A
J$5445:	CALL	C.4DB8			; write 7FC0 register
	EI
	POP	AF
	RET

J$544B:	PUSH	HL
	PUSH	BC
	LD	B,A
	LD	HL,D.6097
	BIT	3,(HL)                  ; RS232 port open ?
	JR	NZ,J.5461		; yep,
	AND	A
	JP	Z,J$5466
	DEC	A
	JP	Z,J$54A7
	DEC	A
	JP	Z,J$54AA
J.5461:	SCF
J.5462:	LD	A,B
	POP	BC
	POP	HL
	RET

; set transmitter power

J$5466:	LD	A,C
	INC	A
	CP	11H
	JP	NC,J.5461
	AND	A
	JR	Z,J$549F
	CP	0BH
	LD	H,30H
	JR	C,J.5484
	CP	0DH
	LD	H,10H
	JR	C,J.5484
	CP	0FH
	LD	H,20H
	JR	C,J.5484
	LD	H,00H
J.5484:	DI
	CALL	C.4BAC			; initialize NCU registers 0-2, save NCU registers 0/1
	LD	A,H
	LD	(D.6BC3),A		; update transmitter power bits
	LD	A,(D.60B8)		; NCU register 3 backup (10xxxxxx)
	CALL	C.464B			; write NCU register 3
	LD	A,(D.60B7)		; NCU register 3 backup (00xxxxxx)
	AND	0CFH			; reset b5,b4
	OR	H
	CALL	C.464B			; write NCU register 3
	CALL	C.4617			; setup NCU registers 0-2 from saved NCU register 0/1
	EI
J$549F:	OR	A
	JP	J.5462

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.54A3:	PUSH	HL
	PUSH	BC
	JR	J.5484

J$54A7:	JP	J.5461

; set equalizer mode

J$54AA:	XOR	A
	LD	(D.60C5),A		; manual equalizer
	INC	C
	JR	Z,J$54E6
	DEC	C
	LD	H,03H
	JR	Z,J.54C8
	DEC	C
	LD	H,00H
	JR	Z,J.54C8
	DEC	C
	LD	H,03H
	LD	A,1
	LD	(D.60C5),A		; automatic equalizer
	JR	Z,J.54C8
	JP	J.5461

J.54C8:	LD	A,H
	CPL
	AND	03H
	LD	(D.60CF),A		; update equalizer bits
	DI
	CALL	C.4BAC			; initialize NCU registers 0-2, save NCU registers 0/1
	LD	A,(D.60B8)		; NCU register 3 backup (10xxxxxx)
	AND	0FCH			; reset b1,b0
	OR	H
	CALL	C.464B			; write NCU register 3
	LD	A,(D.60B7)		; NCU register 3 backup (00xxxxxx)
	CALL	C.464B			; write NCU register 3
	CALL	C.4617			; setup NCU registers 0-2 from saved NCU register 0/1
	EI
J$54E6:	OR	A
	JP	J.5462

?.54EA:	PUSH	BC
	LD	B,A
	CALL	C.4BAC			; initialize NCU registers 0-2, save NCU registers 0/1
	LD	A,(D.60B8)		; NCU register 3 backup (10xxxxxx)
	OR	B
	CALL	C.464B			; write NCU register 3
	LD	A,(D.60B7)		; NCU register 3 backup (00xxxxxx)
	CALL	C.464B			; write NCU register 3
	CALL	C.4617			; setup NCU registers 0-2 from saved NCU register 0/1
	XOR	A
	LD	(D.60C5),A		; manual equalizer
	POP	BC
	RET

J$5505:	LD	H,00H
	LD	L,0FH                   ; Bell 103 300bps, Bell 212A 1200bps, CCITT V21 300bps Full duplex, CCITT V22 1200bps Full duplex
	OR	A
	RET	Z
	LD	L,0FFH                  ; push button (DTMF), dial pulse (lOpps), dial pulse (20pps), auto-detection, Supports A to D, Supports H, DTMF-Pulse switching is possible with software, 10pps and 20pps can be switched by software.
	DEC	A
	RET	Z
	LD	L,03H                   ; external phone, internal modem
	DEC	A
	RET	Z
	LD	HL,1567H               	; Ring signal detection, Call progress detection, line polarity detection, speakers, ON/OFF HOOK function, MSX standard cartridge, transmit power switching, quality detection
	DEC	A
	RET	Z
	SCF
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$551A:	PUSH	HL
	PUSH	DE
	PUSH	BC
	LD	L,(IY+8)
	LD	H,(IY+9)                ; receiver baudrate
	CALL	C.5553
	AND	A
	JR	Z,J.554F
	LD	C,A
	LD	L,(IY+10)
	LD	H,(IY+11)                ; transmitter baudrate
	AND	A
	JR	Z,J.554F
	CALL	C.5553
	LD	HL,I$5568
	LD	D,0
	RLCA
	RLCA
	LD	E,A
	ADD	HL,DE
	LD	E,C
	ADD	HL,DE
	LD	A,(HL)
	LD	E,A
	INC	A
	JR	Z,J.554F
	LD	A,(D.6093)
	AND	0FEH
	OR	E
	LD	(D.6093),A
J.554F:	POP	BC
	POP	DE
	POP	HL
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5553:	LD	A,H
	OR	L
	RET	Z
	LD	A,1
	LD	DE,300
	SBC	HL,DE
	RET	Z
	INC	A
	LD	DE,1200-300
	OR	A
	SBC	HL,DE
	RET	Z
	INC	A
	RET

I$5568:	DEFB	0FFH
        DEFB	0FFH
        DEFB	0FFH
        DEFB	0FFH

        DEFB	0FFH
        DEFB	0
        DEFB	0
        DEFB	0

        DEFB	0FFH
        DEFB	0
        DEFB	1
        DEFB	1

        DEFB	0FFH
        DEFB	0
        DEFB	1
        DEFB	0FFH

C$5578:	LD	A,(D$6075)
	OR	A			; printer output enabled ?
	RET	Z			; nope, quit
	LD	B,4
J$557F:	CALL	LPTSTT			; get printer status
	JR	Z,J$558A                ; printer not ready, update printer not ready counter and quit
	CALL	C$559A			; get byte from buffer and send to printer
	DJNZ	J$557F
	RET

J$558A:	CALL	C.55D4			; get number of bytes in buffer
	RET	Z			; none, quit
	DI
	LD	HL,(D.6076)
	INC	HL
	LD	A,L
	OR	H
	RET	Z
	LD	(D.6076),HL		; update printer not ready counter
	RET

;	  Subroutine get byte from buffer and send to printer
;	     Inputs  ________________________
;	     Outputs ________________________

C$559A:	LD	HL,0
	LD	(D.6076),HL		; reset printer not ready counter
	CALL	C$55F8			; get byte from buffer (with alt registers and interrupts)
	RET	C			; buffer empty, quit
	CALL	H.LPTO
	OUT	(91H),A
	XOR	A
	OUT	(90H),A
	DEC	A
	OUT	(90H),A			; byte to printer
	RET

J$55B0:	XOR	A
	LD	H,A
	LD	L,A
	LD	(D.607C),HL		; number of bytes in buffer = 0
	LD	(D.607E),HL		; put offset buffer = 0
	LD	(D.6080),HL		; get offset buffer = 0
	LD	(D.6076),HL		; reset printer not ready counter
	RET

;	  Subroutine enable printer output
;	     Inputs  ________________________
;	     Outputs ________________________

J$55C0:	LD	A,0FFH
J$55C2:	LD	(D$6075),A
	RET

;	  Subroutine disable printer output
;	     Inputs  ________________________
;	     Outputs ________________________

J$55C6:	XOR	A
	JR	J$55C2

;	  Subroutine get free space in buffer
;	     Inputs  ________________________
;	     Outputs ________________________

C.55C9:	LD	HL,(D.607A)		; size of buffer
	LD	DE,(D.607C)		; number of bytes in buffer
	OR	A
	SBC	HL,DE
	RET

;	  Subroutine get number of bytes in buffer
;	     Inputs  ________________________
;	     Outputs ________________________

C.55D4:	LD	HL,(D.607C)		; number of bytes in buffer
	LD	A,L
	OR	H
	RET

;	  Subroutine put byte in buffer (with alt registers and interrupts)
;	     Inputs  ________________________
;	     Outputs ________________________

J$55DA:	EXX
	DI
	CALL	C$55E2			; put byte in buffer
	EI
	EXX
	RET

;	  Subroutine put byte in buffer
;	     Inputs  ________________________
;	     Outputs ________________________

C$55E2:	CALL	C.55C9			; get free space in buffer
	SCF
	RET	Z			; no free space, quit
	INC	DE
	LD	(D.607C),DE		; update number of bytes in buffer
	LD	HL,(D.607E)		; put offset buffer
	CALL	C.5616			; translate offset in buffer to pointer in buffer
	LD	(D.607E),HL		; update put offset buffer
	LD	(DE),A
	OR	A
	RET

;	  Subroutine get byte from buffer (with alt registers and interrupts)
;	     Inputs  ________________________
;	     Outputs ________________________

C$55F8:	EXX
	DI
	CALL	C$55FF			; get byte from buffer
	EXX
	RET

;	  Subroutine get byte from buffer
;	     Inputs  ________________________
;	     Outputs ________________________

C$55FF:	LD	HL,(D.607C)		; number of bytes in buffer
	LD	A,L
	OR	H			; buffer empty ?
	SCF
	RET	Z			; yep, quit
	DEC	HL
	LD	(D.607C),HL		; update number of bytes in buffer
	LD	HL,(D.6080)		; get offset buffer
	CALL	C.5616			; translate offset in buffer to pointer in buffer
	LD	(D.6080),HL		; update get offset buffer
	LD	A,(DE)
	OR	A
	RET

;	  Subroutine translate offset in buffer to pointer in buffer
;	     Inputs  HL = offset buffer
;	     Outputs HL = updated offset buffer, DE = pointer in buffer

C.5616:	EX	DE,HL
	LD	HL,(D$6078)		; start of buffer
	ADD	HL,DE			; pointer in buffer
	PUSH	HL
	INC	DE			; update offset
	LD	HL,(D.607A)		; size of buffer
	SCF
	SBC	HL,DE
	EX	DE,HL
	POP	DE			; restore pointer in buffer
	RET	NC
	LD	HL,0			; offset = 0
	RET

	DEFS	6000H-$,0FFH

	END
