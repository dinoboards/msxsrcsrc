; FSA1FM6.MAC
;
; MSX-MODEM Panasonic FSA1FM
;
; Source re-created by Z80DIS 2.2
; Z80DIS was written by Kenneth Gielow, Palo Alto, CA
;
; Code Copyrighted by ASCII and maybe others
; Source comments by Arjen Zeilemaker
;
; Sourcecode supplied for STUDY ONLY
; Recreation NOT permitted without authorisation of the copyrightholders
;

        .Z80
        ASEG

	ORG	4090H

I.0000	EQU	0000H	; ----I
I.0001	EQU	0001H	; ----I
I.0002	EQU	0002H	; ----I
I.0003	EQU	0003H	; ----I
I$0004	EQU	0004H	; ----I
I$0008	EQU	0008H	; ----I
I.0009	EQU	0009H	; ----I
I$000B	EQU	000BH	; ----I
I.000F	EQU	000FH	; ----I
I$0012	EQU	0012H	; ----I
I$0015	EQU	0015H	; ----I
I$0017	EQU	0017H	; ----I
I$001D	EQU	001DH	; ----I
I$001F	EQU	001FH	; ----I
C.0020	EQU	0020H	; -C---
C.0038	EQU	0038H	; -C---
DISSCR	EQU	0041H	; -C---
ENASCR	EQU	0044H	; J----
WRTVDP	EQU	0047H	; -C---
FILVRM	EQU	0056H	; -C---
CHGCLR	EQU	0062H	; -C---
I$0065	EQU	0065H	; ----I
I$0068	EQU	0068H	; ----I
I$0070	EQU	0070H	; ----I
INIGRP	EQU	0072H	; -C---
CHSNS	EQU	009CH	; J----
CHGET	EQU	009FH	; JC---
I$00AD	EQU	00ADH	; ----I
I.0101	EQU	0101H	; ----I
I$012C	EQU	012CH	; ----I
SNSMAT	EQU	0141H	; -C--I
KILBUF	EQU	0156H	; -C---
EXTROM	EQU	015FH	; -C---

S.INIPLT	EQU	0141H
S.CHGMDP	EQU	01B5H

C.6000	EQU	6000H	; -C---
D$6371	EQU	6371H	; ---L-
D$6373	EQU	6373H	; --S--
D.6374	EQU	6374H			; BTELCOM operand
D$6376	EQU	6376H			; SRAM initialized #2
I$6380	EQU	6380H	; ----I
I$6381	EQU	6381H	; ----I
D$63A0	EQU	63A0H			; selected option
D.63A4	EQU	63A4H	; ---L-
D$63A5	EQU	63A5H	; --S--
D.63A7	EQU	63A7H	; ---L-
D$63A8	EQU	63A8H	; ---L-
D.63A9	EQU	63A9H	; ---L-
D$63AA	EQU	63AAH	; ---L-
D.63AB	EQU	63ABH	; ---L-
D.63AC	EQU	63ACH			; current column
D$63AD	EQU	63ADH			; current line
D$63AE	EQU	63AEH	; --S--
D.63C6	EQU	63C6H			; current column
D.63C7	EQU	63C7H			; current line
D.63C9	EQU	63C9H	; ---L-
D.63CA	EQU	63CAH	; --SL-
D$63CB	EQU	63CBH	; ---L-
D.63CC	EQU	63CCH	; --SL-
D.6431	EQU	6431H			; last error
I.6432	EQU	6432H	; ----I
D.643A	EQU	643AH	; --SLI
D.643C	EQU	643CH	; --SL-
I.643D	EQU	643DH	; ----I
D.643E	EQU	643EH	; ---LI
D$6440	EQU	6440H	; ---L-
D$6441	EQU	6441H	; ---L-
I.6442	EQU	6442H	; ----I
D.6443	EQU	6443H			; protocol speed
D.6444	EQU	6444H			; data bits
D.6445	EQU	6445H			; SI/SO
D.6446	EQU	6446H			; stop bits
D.6447	EQU	6447H			; parity
D.6448	EQU	6448H			; XON/XOFF
D.6449	EQU	6449H			; code page
D.644A	EQU	644AH			; character mode
D.644B	EQU	644BH			; screen mode
D.644C	EQU	644CH			; protocol mode
D.644D	EQU	644DH			; auto LF on receive
D.644E	EQU	644EH			; auto LF on send
D.644F	EQU	644FH			; auto CR on receive
D.6450	EQU	6450H	; ---LI
D.6451	EQU	6451H			; duplex mode
D.6452	EQU	6452H			; DEL mode
D.6453	EQU	6453H			; timer #1 value
D.6454	EQU	6454H			; timer #2 value
I.6456	EQU	6456H	; ----I
I$6463	EQU	6463H	; ----I
I$6464	EQU	6464H	; ----I
D$646D	EQU	646DH	; ---L-
I.646F	EQU	646FH	; ----I
I$6489	EQU	6489H	; ----I
I.648D	EQU	648DH	; ----I
D$64A2	EQU	64A2H	; --S--
D.64A5	EQU	64A5H	; --SL-
D.64AA	EQU	64AAH	; --SL-
I$64AB	EQU	64ABH	; ----I
D.64AD	EQU	64ADH	; --SL-
D.64AE	EQU	64AEH	; --SL-
D.64AF	EQU	64AFH	; --SLI
D.64B0	EQU	64B0H	; --SL-
D.64B1	EQU	64B1H	; --S-I
D.64B2	EQU	64B2H	; --S-I
D$64B4	EQU	64B4H	; --S--
D.64BB	EQU	64BBH	; --SL-
D.6523	EQU	6523H	; --S-I
I.6525	EQU	6525H	; ----I
I.652A	EQU	652AH	; ----I
I.652F	EQU	652FH	; ----I
I.6545	EQU	6545H	; ----I
I$6550	EQU	6550H	; ----I
D$6551	EQU	6551H	; ---L-
D$6552	EQU	6552H	; ---L-
D$6556	EQU	6556H	; ---L-
D$6557	EQU	6557H	; ---L-
D$6558	EQU	6558H	; ---L-
D$655A	EQU	655AH	; ---L-
I$655B	EQU	655BH	; ----I
D$655D	EQU	655DH	; ---L-
I.6560	EQU	6560H	; ----I
I.6578	EQU	6578H	; ----I
D.6580	EQU	6580H	; ---LI
I.6588	EQU	6588H	; ----I
D.6598	EQU	6598H	; ---LI
I$65B5	EQU	65B5H	; ----I
I$65B6	EQU	65B6H	; ----I
I.65BB	EQU	65BBH	; ----I
I.65D0	EQU	65D0H	; ----I
I.65E5	EQU	65E5H	; ----I
D$65F9	EQU	65F9H	; --S--
I.65FA	EQU	65FAH	; ----I
I.65FF	EQU	65FFH	; ----I
I.68D2	EQU	68D2H	; ----I
I$68D7	EQU	68D7H	; ----I
I.68F2	EQU	68F2H	; ----I
I$68F3	EQU	68F3H	; ----I
I$68F4	EQU	68F4H	; ----I
I$6900	EQU	6900H			; phone book entry table
I$6965	EQU	6965H	; ----I
I$6966	EQU	6966H			; phone book data blocks
D$7EEA	EQU	7EEAH	; --S--
D$7EEC	EQU	7EECH	; --S--
D$7EED	EQU	7EEDH			; auto CR on receive
D$7EEE	EQU	7EEEH			; SRAM initialized
D$7EF9	EQU	7EF9H	; --S--
D$7EFA	EQU	7EFAH	; --S--
D$7EFB	EQU	7EFBH	; --S--
D$7EFC	EQU	7EFCH			; duplex mode
D$7EFF	EQU	7EFFH	; --S--

I$AA55	EQU	0AA55H	; ----I
D$C941	EQU	0C941H	; --S--
I$D5E5	EQU	0D5E5H	; ----I
FORCLR	EQU	0F3E9H	; ----I
FNKSTR	EQU	0F87FH	; ----I
EXBRSA	EQU	0FAF8H	; ---L-
I.FF00	EQU	0FF00H	; ----I

?.4090:	JP	J$5134			; translate error, update error display
?.4093:	JP	J$5008
?.4096:	JP	J$4ED3
?.4099:	JP	J$4EED
?.409C:	JP	C.4E4F			; initialize function key definition
?.409F:	JP	C.4E7A			; restore function key definition
?.40A2:	JP	J$4E97			; store function key definition
?.40A5:	JP	J$4DD1			; TELCOM welcome screen
?.40A8:	JP	J$4B21
?.40AB:	JP	J$4C93
?.40AE:	JP	J$496D
?.40B1:	JP	C.493B
?.40B4:	JP	C.48EA			; get comterm mode
?.40B7:	JP	C.4832			; construct RS232.INIT string
?.40BA:	JP	J$47F7
?.40BD:	JP	C.479B
?.40C0:	JP	J$46B6
?.40C3:	JP	J$4746
?.40C6:	JP	J$45FB
?.40C9:	JP	J$464C
?.40CC:	JP	J$4593			; display numeric setting
?.40CF:	JP	C.44D2			; display character (with ? support)
?.40D2:	JP	J$42AC
?.40D5:	JP	J$4EB4
?.40D8:	JP	J$4425
?.40DB:	JP	C.4486
?.40DE:	JP	J$4371			; initialize SRAM
?.40E1:	JP	C.514C			; get number of free data blocks
?.40E4:	JP	J$5166			; phone book entry table full ?
?.40E7:	JP	J$516B
?.40EA:	JP	J$4211
?.40ED:	JP	C.423F
?.40F0:	JP	J$4233			; flip protocol speed,
?.40F3:	JP	C.48D6
?.40F6:	JP	J$410E
?.40F9:	JP	J$4175
?.40FC:	JP	J$41B0
?.40FF:	JP	J$41BA
?.4102:	JP	J$520F			; test BTELCOM operand
?.4105:	JP	J$521B			; test BTELCOM operand, if = 0, get keyboard status
?.4108:	JP	J$5226			; test BTELCOM operand, if = 0, get key
?.410B:	JP	J$5194			; show copyright message

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

J$410E:	LD	IY,I$64AB
	LD	(IY+0),0
	LD	HL,I.68D2
	LD	DE,I$68D7
	LD	BC,729
	LDDR
	LD	HL,I.643D
	LD	DE,I.65FA
	LD	BC,5
	LDIR
	LD	HL,I.65FF
	LD	D,H
	LD	E,L
	LD	C,27
J$4133:	LD	B,27
J$4135:	LD	A,(DE)
	CP	81H
	JR	NZ,J$413C
	LD	A,20H
J$413C:	LD	(HL),A
	CP	0DH
	JR	Z,J$4147
	INC	HL
	INC	DE
	DJNZ	J$4135
	JR	J$414E

J$4147:	INC	(IY+0)
	INC	HL
J$414B:	INC	DE
	DJNZ	J$414B
J$414E:	DEC	C
	JR	NZ,J$4133
	LD	HL,I.65FF
	LD	BC,729
J$4157:	LD	A,(IY+0)
	AND	A
	JR	Z,J$416E
J$415D:	LD	A,(HL)
	CP	0DH
	JR	Z,J$4168
	INC	HL
	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,J$415D
J$4168:	INC	HL
	DEC	(IY+0)
	JR	J$4157

J$416E:	LD	(HL),0
	XOR	A
	LD	(D.63CC),A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

J$4175:	LD	HL,I.65D0
	LD	C,1DH
J$417A:	LD	B,15H
	LD	A,C
	CP	1CH
	JR	NC,J.4183
	LD	B,27
J.4183:	LD	A,(HL)
	CP	0DH
	JR	Z,J.4192
	AND	A
	JR	NZ,J$418D
	LD	(HL),20H
J$418D:	INC	HL
	DJNZ	J.4183
	JR	J.419A

J.4192:	INC	HL
	DEC	B
	JR	Z,J.419A
	LD	(HL),20H
	JR	J.4192

J.419A:	DEC	C
	JR	NZ,J$417A
	LD	HL,I.68D2
	LD	BC,729
J$41A3:	LD	A,(HL)
	CP	0DH
	RET	Z
	LD	(HL),20H
	DEC	HL
	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,J$41A3
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

J$41B0:	PUSH	AF
	PUSH	AF
	XOR	A
	LD	(D.64AA),A
	LD	A,1BH			; fore = black, back = light yellow
	JR	J$41C3

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

J$41BA:	PUSH	AF
	PUSH	AF
	LD	A,1
	LD	(D.64AA),A
	LD	A,15H			; fore = black, back = light blue
J$41C3:	LD	(D.64A5),A
	POP	AF
	LD	DE,2000H+5*(32*8)+1*8
	ADD	A,A
	LD	L,0
	LD	H,A
	ADD	HL,DE
	PUSH	HL
	LD	BC,13*8
	LD	A,(D.64A5)
	PUSH	AF
	PUSH	BC
	PUSH	HL
	CALL	FILVRM
	POP	HL
	POP	BC
	POP	AF
	LD	DE,-256
	ADD	HL,DE
	CALL	FILVRM
	POP	HL
	LD	DE,14*8
	ADD	HL,DE
	LD	BC,16*8
	PUSH	BC
	PUSH	HL
	LD	A,(D.64AA)
	AND	A
	JR	NZ,J$41FF
	LD	A,(D.64A5)
	PUSH	AF
	CALL	FILVRM
	JR	J$4205

J$41FF:	LD	A,1FH			; fore = black, back = white
	PUSH	AF
	CALL	FILVRM
J$4205:	POP	AF
	POP	HL
	POP	BC
	LD	DE,-256
	ADD	HL,DE
	CALL	FILVRM
	POP	AF
	RET

J$4211:	CALL	C.423F
	CALL	C.4E7A
	CALL	C.479B
	LD	IX,S.INIPLT
	CALL	EXTROM			; initialize color pallette
	CALL	C.6000
	DEFB	0
	DEFW	C.40B7			; COMTERM application
	LD	(D.64BB),A		; store exit code
	PUSH	AF			; store exit code
	CALL	C.4E4F			; initialize function key definition
	CALL	C.493B
	POP	AF			; restore exit code
	RET

J$4233:	LD	A,(D.6443)		; protocol speed
	OR	A			; 300 bps ?
	JR	Z,J$423B		; yep, 1200 bps
	LD	A,1			; 300 bps
J$423B:	DEC	A
	LD	(D.6443),A

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.423F:	LD	A,(D.6451)		; duplex mode
	AND	A
	JR	Z,J$4248
	XOR	A
	JR	J$4249

J$4248:	DEC	A
J$4249:	LD	(D$7EFC),A		; update duplex mode
	LD	A,(D.644F)
	AND	A
	JR	Z,J$4255
	XOR	A
	JR	J$4256

J$4255:	DEC	A
J$4256:	LD	(D$7EED),A		; update auto CR on receive
	LD	A,(D.644C)		; protocol mode
	LD	B,"T"
	AND	A
	JR	Z,J.4268
	LD	B,"X"
	DEC	A
	JR	Z,J.4268
	LD	B,"R"
J.4268:	LD	A,(D.6453)		; timer #1 value
	LD	E,A
	LD	A,(D.6454)		; timer #2 value
	LD	D,A
	LD	A,B
	CALL	C.6000
	DEFB	0
	DEFW	C.40BD			; set protocol and timer values
	CALL	C.4832			; construct RS232.INIT string
	CALL	C.6000
	DEFB	0
	DEFW	C.414A			; RS232.INIT
	LD	A,(D$63CB)
	AND	A
	LD	HL,0			; no auto login
	JR	NZ,J.4293
	LD	A,(D.64BB)
	CP	3
	JR	Z,J.4293
	LD	HL,I.65FF		; pointer to auto login string
J.4293:	CALL	C.48EA			; get comterm mode
	CALL	C.6000
	DEFB	0
	DEFW	C.40BA			; set comterm mode
	LD	HL,(D$6558)
	INC	H
	INC	L
	LD	(D$7EEA),HL
	LD	A,(D$655A)
	INC	A
	LD	(D$7EEC),A
	RET

J$42AC:	LD	A,(D.63A7)
	CP	02H	; 2 
	JP	C,J$4314
	SUB	02H	; 2 
	LD	L,A
	LD	A,(D.63CC)
	ADD	A,L
	CALL	C.4486
	LD	DE,I.65FA
	ADD	HL,DE
	PUSH	HL
	POP	IY
	LD	A,(D.63AC)
	SUB	04H	; 4 
	LD	B,A
	LD	D,00H
	LD	E,A
	ADD	HL,DE
	LD	A,(D.63A4)
	CP	7FH
	JR	Z,J.42DE
	CP	08H	; 8 
	JR	Z,J.42DE
	LD	(HL),A
	JP	J.436F

J.42DE:	INC	HL
	LD	A,27
	SUB	B
	LD	C,A
	LD	B,0
	LD	D,H
	LD	E,L
	DEC	DE
	LDIR
	LD	A,(D.63AC)
	CP	04H	; 4 
	JR	C,J$42F5
	DEC	A
	LD	(D.63AC),A
J$42F5:	LD	A,20H	; " "
	LD	(IY+26),A
	CALL	C.6000
	DEFB	4
	DEFW	C.40A2
	LD	B,3			; column = 3
	LD	A,(D.63A7)
	LD	C,10
	ADD	A,C
	LD	C,A			; line
	LD	D,27			; size = 27
	PUSH	IY
	POP	HL
	CALL	C.478A			; display string at location (with ? support)
	JP	J.436F

J$4314:	LD	HL,I.65D0
	AND	A
	JR	Z,J$431E
	LD	DE,I$0015
	ADD	HL,DE
J$431E:	PUSH	HL
	POP	IY
	LD	A,(D.63AC)
	SUB	0AH	; 10 
	LD	B,A
	LD	D,00H
	LD	E,A
	ADD	HL,DE
	LD	A,(D.63A4)
	CP	7FH
	JR	Z,J.4339
	CP	08H	; 8 
	JR	Z,J.4339
	LD	(HL),A
	JR	J.436F

J.4339:	INC	HL
	LD	A,15H
	SUB	B
	LD	C,A
	LD	B,00H
	LD	D,H
	LD	E,L
	DEC	DE
	LDIR
	LD	A,(D.63AC)
	CP	0AH	; 10 
	JR	C,J$4350
	DEC	A
	LD	(D.63AC),A
J$4350:	LD	A,20H	; " "
	LD	(IY+20),A
	CALL	C.6000
	DEFB	4
	DEFW	C.40A2
	LD	B,9			; column = 9
	LD	A,(D.63A7)
	LD	C,5			; line = 5
	AND	A
	JR	Z,J$4367
	LD	C,7			; line = 7
J$4367:	LD	D,21			; size = 21
	PUSH	IY
	POP	HL
	CALL	C.478A
J.436F:	XOR	A
	RET

;	  Subroutine initialize SRAM
;	     Inputs  ________________________
;	     Outputs ________________________

J$4371:	LD	HL,I$6380
	LD	DE,I$6380+1
	LD	BC,32-1
	LD	(HL),20H
	LDIR
	LD	(HL),0DH	; 13 
	LD	HL,0AA55H
	LD	(D$7EEE),HL		; SRAM initialized
	LD	HL,4D41H
	LD	(D$6376),HL		; SRAM initialized #2
	XOR	A
	LD	(D$63A5),A
	LD	(D$63AE),A
	LD	(D.643C),A
	LD	(D.63CA),A
	LD	HL,D.6523
	LD	DE,D.6523+1
	LD	(HL),A
	LD	BC,174-1
	LDIR
	LD	HL,I$6965
	LD	(D.6523),HL
	INC	HL
	LD	D,H
	LD	E,L
	INC	DE
	LD	(HL),A
	LD	BC,12CAH-1
	LDIR
	DEC	A
	LD	HL,I$6900
	LD	DE,I$6900+1
	LD	(HL),A
	LD	BC,102-1
	LDIR				; clear phone book entry table
	LD	DE,I$6550
	LD	HL,I$4415
	LD	BC,11
	LDIR
	LD	A,2
	LD	(D$7EFF),A
	DEC	A
	LD	(D$7EF9),A
	DEC	A
	LD	(D$7EFA),A
	INC	A
	LD	(D$7EFB),A
	LD	A,(D$6556)
	CALL	C.6000
	DEFB	0
	DEFW	C.4132
	LD	DE,I$655B
	LD	HL,I$4420
	LD	BC,5
	LDIR
	LD	HL,I.4410
	LD	DE,I.6525
	LD	BC,5
	LDIR
	LD	HL,I.4410
	LD	DE,I.652A
	LD	BC,5
	LDIR
	XOR	A
	CALL	C.6000
	DEFB	0
	DEFW	C.4132
	RET

I.4410:	DEFB	0C6H
	DEFB	0E6H
	DEFB	0E8H
	DEFB	01H
	DEFB	01H

I$4415:	DEFB	02H
	DEFB	02H
	DEFB	01H
	DEFB	00H
	DEFB	00H
	DEFB	01H
	DEFB	01H
	DEFB	00H
	DEFB	0EH
	DEFB	03H
	DEFB	0EH


I$4420:	DEFB	04H
	DEFB	00H
	DEFB	00H
	DEFB	03H
	DEFB	01H

J$4425:	PUSH	HL
	PUSH	DE
	PUSH	BC
	PUSH	AF
	LD	HL,I.65FA
	LD	IX,I.646F
	LD	E,00H
	LD	D,82H
	LD	C,27
J$4436:	LD	B,27
J$4438:	LD	A,(HL)
	CP	0DH
	JR	Z,J$444A
	INC	HL
	DJNZ	J$4438
	LD	(IX+0),D
J$4443:	INC	IX
	DEC	C
	JR	NZ,J$4436
	JR	J$445C

J$444A:	LD	(IX+0),D
	INC	E
	LD	A,E
	AND	01H	; 1 
	ADD	A,82H
	LD	D,A
	PUSH	DE
	LD	D,0
	LD	E,B
	ADD	HL,DE
	POP	DE
	JR	J$4443

J$445C:	LD	HL,I.68D2
	LD	IX,I$6489
	LD	C,27
J$4465:	LD	B,27
J$4467:	LD	A,(HL)
	CP	0DH
	JR	Z,J$4478
	DEC	HL
	DJNZ	J$4467
	LD	(IX+0),20H
	DEC	IX
	DEC	C
	JR	NZ,J$4465
J$4478:	LD	A,(D.6431)
	AND	A			; error ?
	JR	NZ,J$4481		; yep, skip
	CALL	C$449A
J$4481:	POP	AF
	POP	BC
	POP	DE
	POP	HL
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4486:	LD	H,0
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL			; *4
	LD	B,H
	LD	C,L
	ADD	HL,HL			; *8
	LD	D,H
	LD	E,L
	ADD	HL,HL			; *16
	ADD	HL,BC			; *20
	ADD	HL,DE			; *28
	LD	D,0
	LD	E,A
	AND	A
	SBC	HL,DE			; *27
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$449A:	LD	A,0FH
	LD	(D.643A),A
	LD	A,2
	LD	(D.63C6),A		; current column = 2
	LD	A,12
	LD	(D.63C7),A		; current line = 12
	LD	HL,I.646F
	LD	A,(D.63CC)
	LD	D,00H
	LD	E,A
	ADD	HL,DE
	LD	D,07H	; 7 
J$44B5:	LD	A,(HL)
	AND	A
	RET	Z
	CP	20H	; " "
	JR	NZ,J$44BE
	LD	A,0A0H
J$44BE:	CALL	C.44D2			; display character (with ? support)
	INC	HL
	LD	A,2
	LD	(D.63C6),A		; current column = 2
	LD	A,(D.63C7)
	INC	A
	LD	(D.63C7),A		; next current line
	DEC	D
	JR	NZ,J$44B5
	RET

;	  Subroutine display character (with ? support)
;	     Inputs  ________________________
;	     Outputs ________________________

C.44D2:	PUSH	HL
	PUSH	DE
	PUSH	BC
	LD	HL,D.643A
	BIT	7,(HL)
	JR	Z,J$44E0
	CP	0DH
	JR	Z,J$4504
J$44E0:	CP	82H
	JR	C,J.44EC
	CP	86H
	JR	NC,J.44EC
	SUB	81H
	JR	J.4505

J.44EC:	CP	0DH
	JR	Z,J$4547
	CP	0A0H
	JR	NZ,J$44F8
	LD	A,05H
	JR	J.4505

J$44F8:	LD	H,0
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	DE,I$1BBF
	ADD	HL,DE
	JR	J$450A

J$4504:	XOR	A
J.4505:	CALL	C$454B			; copy character pattern firmware
	JR	J$4517

J$450A:	LD	DE,I.6432
	LD	B,8
J$450F:	LD	A,(HL)
	SRL	A
	LD	(DE),A
	INC	HL
	INC	DE
	DJNZ	J$450F
J$4517:	LD	HL,I.6432
	LD	A,(D.643A)
	AND	0FH
	JR	NZ,J$452E
	LD	A,(D$63AD)
	LD	D,A
	LD	A,(D.63AC)
	INC	A
	LD	(D.63AC),A
	JR	J$4539

J$452E:	LD	A,(D.63C7)
	LD	D,A			; current line
	LD	A,(D.63C6)
	INC	A
	LD	(D.63C6),A		; increase current column
J$4539:	DEC	A
	ADD	A,A
	ADD	A,A
	ADD	A,A
	LD	E,A
	LD	BC,I$0008
	CALL	C.6000
	DEFB	5
	DEFW	C.4093
J$4547:	POP	BC
	POP	DE
	POP	HL
	RET

;	  Subroutine copy character pattern firmware
;	     Inputs  ________________________
;	     Outputs ________________________

C$454B:	PUSH	HL
	LD	HL,I$4563
	ADD	A,A
	ADD	A,A
	ADD	A,A
	LD	D,00H
	LD	E,A
	ADD	HL,DE
	LD	DE,I.6432
	LD	B,8
J$455B:	LD	A,(HL)
	LD	(DE),A
	INC	DE
	INC	HL
	DJNZ	J$455B
	POP	HL
	RET

I$4563:	NOP
	LD	(BC),A
	LD	(DE),A
	LD	(D$307E),A
	DJNZ	J$456B
J$456B:	LD	SP,I$4149
	LD	SP,I$4909
	LD	SP,I$7101
	LD	C,C
	LD	C,C
	LD	(HL),C
	LD	D,C
	LD	C,C
	LD	C,C
	LD	BC,I$7E00
	IN	A,(0BDH)
	LD	H,(HL)
	RST	20H
	RST	20H
	RST	38H
	NOP
	LD	(DE),A
	INC	H
	LD	C,B
	INC	H
	LD	(DE),A
	INC	H
	LD	C,B
	LD	BC,I.0101
	LD	BC,I.0101
	DEFB	1
	DEFB	1

J$4593:	LD	A,(HL)
	LD	B,10
	LD	C,0
	LD	DE,0
J$459B:	SUB	B
	JR	C,J$45AB
	INC	D
	PUSH	AF
	LD	A,D
	CP	10
	JR	C,J$45A8
	INC	E
	LD	D,0
J$45A8:	POP	AF
	JR	J$459B

J$45AB:	ADD	A,B
	LD	C,A
	LD	A,4FH	; "O"
	ADD	A,C
	LD	C,A
	LD	A,4FH	; "O"
	ADD	A,D
	LD	D,A
	LD	A,4FH	; "O"
	ADD	A,E
	LD	E,A
	LD	HL,I$6464
	LD	(HL),0FH	; 15 
	INC	HL
	LD	(HL),03H	; 3 
	INC	HL
	LD	(HL),E
	INC	HL
	LD	(HL),82H
	INC	HL
	LD	(HL),D
	INC	HL
	LD	(HL),82H
	INC	HL
	LD	(HL),C
	INC	HL
	LD	(HL),82H
	LD	A,(D$63A8)
	LD	C,A
	LD	HL,I$6463
	LD	A,(D.63C9)
	CP	0F0H
	JR	NZ,J$45E9
	LD	B,0EH	; 14 
	LD	A,C
	CP	05H	; 5 
	JR	Z,J.45F2
	LD	B,10H	; 16 
	JR	J.45F2

J$45E9:	LD	B,0AH	; 10 
	LD	A,C
	CP	03H	; 3 
	JR	Z,J.45F2
	LD	B,0CH	; 12 
J.45F2:	LD	(HL),B
	EX	DE,HL
	CALL	C.6000
	DEFB	7
	DEFW	C.40C9
	RET

J$45FB:	LD	A,(D$63AA)
	CP	05H	; 5 
	RET	C
	LD	HL,I.65BB
	LD	IY,I.65BB
	LD	A,(D.63AC)
	SUB	10H	; 16 
	LD	D,00H
	LD	E,A
	ADD	HL,DE
	LD	A,(D.63A4)
	CP	7FH
	JR	Z,J.461E
	CP	08H	; 8 
	JR	Z,J.461E
	LD	(HL),A
	RET

J.461E:	LD	C,10H	; 16 
	INC	HL
	LD	A,C
	SUB	E
	LD	C,A
	LD	B,00H
	LD	D,H
	LD	E,L
	DEC	DE
	LDIR
	LD	A,(D.63AC)
	CP	10H	; 16 
	JR	C,J$4636
	DEC	A
	LD	(D.63AC),A
J$4636:	LD	(IY+15),20H	; " "
	CALL	C.6000
	DEFB	4
	DEFW	C.409C
	LD	B,15			; column = 15
	LD	C,15			; line = 15
	LD	D,16			; size = 16
	PUSH	IY
	POP	HL
	JP	C.478A			; display string at location (with ? support)

J$464C:	LD	HL,I.652F
	LD	IY,I.652F
	LD	C,15H
	LD	A,(D.63AB)
	AND	A
	JR	Z,J$4664
	LD	HL,I.6545
	LD	IY,I.6545
	LD	C,0AH	; 10 
J$4664:	LD	A,(D.63AC)
	SUB	0BH	; 11 
	LD	D,00H
	LD	E,A
	ADD	HL,DE
	LD	A,(D.63A4)
	CP	7FH
	JR	Z,J.467A
	CP	08H	; 8 
	JR	Z,J.467A
	LD	(HL),A
	RET

J.467A:	INC	HL
	LD	A,C
	SUB	E
	LD	C,A
	LD	B,00H
	LD	D,H
	LD	E,L
	DEC	DE
	LDIR
	LD	A,(D.63AC)
	CP	0BH	; 11 
	JR	C,J$4690
	DEC	A
	LD	(D.63AC),A
J$4690:	LD	A,(D.63AB)
	AND	A
	JR	Z,J$46A0
	LD	(IY+9),20H	; " "
	LD	C,7			; line = 7
	LD	D,10			; size = 10
	JR	J$46A8

J$46A0:	LD	(IY+20),20H	; " "
	LD	C,5			; line = 5
	LD	D,21			; size = 21
J$46A8:	CALL	C.6000
	DEFB	4
	DEFW	C.409C
	LD	B,10			; column = 10
	PUSH	IY
	POP	HL
	JP	C.478A			; display string at location (with ? support)

J$46B6:	LD	A,(D.63A9)
	SUB	03H	; 3 
	LD	HL,I.6578
	LD	IY,I.6578
	JR	Z,J.46D5
	LD	HL,D.6580
	LD	IY,D.6580
	DEC	A
	JR	Z,J.46D5
	LD	HL,I.6588
	LD	IY,I.6588
J.46D5:	LD	A,(D.63AC)
	SUB	10H	; 16 
	LD	D,00H
	LD	E,A
	ADD	HL,DE
	LD	A,(D.63A4)
	CP	7FH
	JR	Z,J.46EB
	CP	08H	; 8 
	JR	Z,J.46EB
	LD	(HL),A
	RET

J.46EB:	LD	A,(D.63A9)
	CP	05H	; 5 
	LD	C,10H	; 16 
	JR	Z,J$46F6
	LD	C,08H	; 8 
J$46F6:	INC	HL
	LD	A,C
	SUB	E
	LD	C,A
	LD	B,00H
	LD	D,H
	LD	E,L
	DEC	DE
	LDIR
	LD	A,(D.63AC)
	CP	10H	; 16 
	JR	C,J$470C
	DEC	A
	LD	(D.63AC),A
J$470C:	LD	A,(D.63A9)
	CP	05H	; 5 
	JR	C,J$4719
	LD	(IY+15),20H	; " "
	JR	J$471D

J$4719:	LD	(IY+7),20H	; " "
J$471D:	CALL	C.6000
	DEFB	4
	DEFW	C.409C
	LD	B,15			; column = 15
	LD	A,(D.63A9)
	SUB	03H	; 3 
	LD	C,11			; line = 11
	JR	Z,J.4735
	LD	C,13			; line = 13
	DEC	A
	JR	Z,J.4735
	LD	C,15			; line = 15
J.4735:	LD	A,(D.63A9)
	CP	05H	; 5 
	LD	D,16			; size = 16
	JR	Z,J$4740
	LD	D,8			; size = 8
J$4740:	PUSH	IY
	POP	HL
	JP	C.478A			; display string at location (with ? support)

J$4746:	LD	HL,I.65E5
	LD	A,(D.63AC)
	SUB	0AH	; 10 
	LD	E,A
	LD	D,00H
	ADD	HL,DE
	LD	A,(D.63A4)
	CP	7FH
	JR	Z,J.475F
	CP	08H	; 8 
	JR	Z,J.475F
	LD	(HL),A
	RET

J.475F:	INC	HL
	LD	A,15H
	SUB	B
	LD	C,A
	LD	B,00H
	LD	D,H
	LD	E,L
	DEC	DE
	LDIR
	LD	A,(D.63AC)
	CP	0AH	; 10 
	JR	C,J$4776
	DEC	A
	LD	(D.63AC),A
J$4776:	LD	A,20H	; " "
	LD	(D$65F9),A
	CALL	C.6000
	DEFB	4
	DEFW	C.409C
	LD	B,09H	; 9 
	LD	C,05H	; 5 
	LD	D,21
	LD	HL,I.65E5

;	  Subroutine display string at location (with ? support)
;	     Inputs  ________________________
;	     Outputs ________________________

C.478A:	LD	A,B
	LD	(D.63C6),A		; update current column
	LD	A,C
	LD	(D.63C7),A		; update current line
J$4792:	LD	A,(HL)
	CALL	C.44D2			; display character (with ? support)
	INC	HL
	DEC	D
	JR	NZ,J$4792
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.479B:	LD	HL,I.65FF
	LD	BC,I$02F5
J.47A1:	DEC	BC
	LD	A,B
	OR	C
	JR	Z,J.47C4
	LD	A,(HL)
	AND	A
	JR	Z,J.47C4
	CP	0DH	; 13 
	JR	Z,J$47B1
	INC	HL
	JR	J.47A1

J$47B1:	PUSH	HL
	PUSH	BC
	LD	HL,I.68F2
	LD	DE,I$68F3
	LDDR
	POP	BC
	POP	HL
	DEC	BC
	INC	HL
	LD	(HL),0FFH
	INC	HL
	JR	J.47A1

J.47C4:	LD	HL,I.68F2
	LD	DE,I$68F4
	LD	BC,I$02F4
	LDDR
	LD	HL,I.65FF
	LD	D,H
	LD	E,L
	INC	DE
	INC	DE
J$47D6:	LD	BC,I.0000
J$47D9:	INC	BC
	LD	A,(DE)
	AND	A
	JR	Z,J$47EE
	CP	0DH	; 13 
	JR	Z,J$47E5
	INC	DE
	JR	J$47D9

J$47E5:	LD	(HL),C
	INC	HL
	LD	(HL),B
	LD	H,D
	LD	L,E
	INC	DE
	INC	DE
	JR	J$47D6

J$47EE:	LD	(HL),00H
	INC	HL
	LD	(HL),00H
	LD	HL,I.65FF
	RET

J$47F7:	LD	BC,0
	LD	HL,I$655B
	LD	A,(HL)
	CP	04H	; 4 
	JR	C,J$4808
	LD	B,06H	; 6 
	LD	C,01H	; 1 
	JR	J$480B

J$4808:	RLCA
	OR	B
	LD	B,A
J$480B:	INC	HL
	LD	A,(HL)
	OR	B
	LD	B,A
	INC	HL
	INC	HL
	LD	D,03H	; 3 
	LD	A,(HL)
	CP	03H	; 3 
	JR	Z,J$4825
	LD	D,01H	; 1 
	AND	A
	JR	Z,J.4824
	LD	D,00H
	DEC	A
	JR	Z,J.4824
	LD	D,02H	; 2 
J.4824:	LD	A,D
J$4825:	RLCA
	RLCA
	RLCA
	OR	B
	LD	B,A
	INC	HL
	LD	A,(HL)
	CPL
	RRCA
	AND	80H
	OR	B
	RET

;	  Subroutine construct RS232.INIT string
;	     Inputs  ________________________
;	     Outputs ________________________

C.4832:	LD	HL,I.6456
	LD	A,(D.6444)
	LD	B,"7"
	AND	A
	JR	Z,J$483F
	LD	B,"8"
J$483F:	LD	(HL),B
	LD	A,(D.6447)
	LD	B,"O"
	AND	A
	JR	Z,J.484F
	LD	B,"N"
	DEC	A
	JR	Z,J.484F
	LD	B,"E"
J.484F:	INC	HL
	LD	(HL),B
	LD	A,(D.6446)
	LD	B,"1"
	AND	A
	JR	Z,J.4861
	LD	B,"2"
	CP	01H	; 1 
	JR	Z,J.4861
	LD	B,"3"
J.4861:	INC	HL
	LD	(HL),B
	LD	A,(D.6448)
	LD	B,"X"
	AND	A
	JR	Z,J$486D
	LD	B,"N"
J$486D:	INC	HL
	LD	(HL),B
	INC	HL
	CALL	C.48D6
	LD	(HL),"A"
	JR	Z,J$4879
	LD	(HL),"O"
J$4879:	LD	A,(D.644D)
	LD	B,"A"
	AND	A
	JR	Z,J$4883
	LD	B,"N"
J$4883:	INC	HL
	LD	(HL),B
	LD	A,(D.644E)
	LD	B,"A"
	AND	A
	JR	Z,J$488F
	LD	B,"N"
J$488F:	INC	HL
	LD	(HL),B
	LD	A,(D.6445)
	LD	B,"S"
	AND	A
	JR	Z,J$489B
	LD	B,"N"
J$489B:	INC	HL
	LD	(HL),B
	LD	A,(D.6443)
	LD	DE,300
	AND	A
	JR	Z,J$48A9
	LD	DE,1200
J$48A9:	INC	HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
	INC	HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
	XOR	A
	INC	HL
	LD	(HL),A
	CALL	C.6000
	DEFB	0
	DEFW	C.40B4			; get my slotid
	LD	B,A
	CALL	C.4B0C
	LD	A,(D.6443)
	LD	D,A
	LD	E,0
	LD	A,(D$6557)
	AND	A
	JR	NZ,J$48CC
	LD	E,2
J$48CC:	LD	A,D
	AND	A
	JR	Z,J$48D1
	INC	E
J$48D1:	LD	A,E
	LD	HL,I.6456
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.48D6:	PUSH	HL
	LD	B,21
	LD	HL,I.65E5
J$48DC:	LD	A,(HL)
	CP	" "
	JR	Z,J$48E5
	CP	0DH
	JR	J$48E8

J$48E5:	INC	HL
	DJNZ	J$48DC
J$48E8:	POP	HL
	RET

;	  Subroutine get comterm mode
;	     Inputs  ________________________
;	     Outputs ________________________

C.48EA:	LD	BC,0
	LD	A,(D.644A)		; character mode
	CP	4
	JR	NC,J$48F8
	RLCA
	LD	B,A
	JR	J$48FC

J$48F8:	LD	B,4
	LD	C,1
J$48FC:	LD	A,(D.6450)
	OR	A
	JR	NZ,J$4903
	INC	B
J$4903:	LD	A,(D.6449)		; code page
	CP	1
	JR	NZ,J$490E
	LD	A,3
	JR	J.4914

J$490E:	CP	3
	JR	NZ,J.4914
	LD	A,1
J.4914:	RRCA
	RRCA
	RRCA
	OR	B
	LD	B,A
	LD	A,(D.644B)		; screen mode
	CP	3
	JR	Z,J$492D
	LD	D,1
	AND	A
	JR	Z,J.492C
	LD	D,0
	DEC	A
	JR	Z,J.492C
	LD	D,2
J.492C:	LD	A,D
J$492D:	RLCA
	RLCA
	RLCA
	OR	B
	LD	B,A
	LD	A,(D.6452)		; DEL mode
	CPL
	RRCA
	AND	80H
	OR	B
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.493B:	XOR	A                       ; speaker off
	CALL	C.6000
	DEFB	0
	DEFW	C.4174			; MODEM.SPKCNT
	LD	A,(EXBRSA)
	AND	A
	JR	Z,J$4956
	LD	IX,S.CHGMDP
	CALL	EXTROM
	LD	C,9
	LD	B,0
	CALL	WRTVDP
J$4956:	CALL	INIGRP
	LD	HL,FORCLR
	LD	(HL),1
	INC	HL
	LD	(HL),4
	INC	HL
	LD	(HL),14
	CALL	CHGCLR
	LD	A,1
	LD	(D$64A2),A
	RET

J$496D:	LD	A,(D$646D)
	AND	A
	JP	NZ,J$4AD8
	LD	A,(D$6551)
	DEC	A
	CALL	C.6000
	DEFB	0
	DEFW	C.4174			; MODEM.SPKCNT
	CALL	C$4ADA
	CALL	C.48D6
	JP	Z,J$4AC4
	LD	B,21
	LD	IY,D.6598
	LD	HL,I.65E5
	CALL	C.4B0C
	LD	D,0
J$4995:	LD	A,(HL)
	CALL	C.6000
	DEFB	4
	DEFW	C.4096			; to upper
	CP	"H"
	JR	Z,J.49E0
	CP	"T"
	JR	Z,J.49E0
	CP	"<"
	JR	Z,J.49E0
	CP	":"
	JR	Z,J.49E0
	CP	"X"
	JR	NZ,J$49B6
	LD	A,D
	OR	A
	JR	Z,J.49E0
	JR	J.49F1

J$49B6:	LD	A,C
	AND	A
	JR	NZ,J$49D9
	LD	A,(HL)
	CP	"*"
	JR	Z,J.49E0
	CP	"#"
	JR	Z,J.49E0
	CALL	C.6000
	DEFB	4
	DEFW	C.4096			; to upper
	CP	"A"
	JR	Z,J.49E0
	CP	"B"
	JR	Z,J.49E0
	CP	"C"
	JR	Z,J.49E0
	CP	"D"
	JR	Z,J.49E0
J$49D9:	LD	A,(HL)
	SUB	"0"
	CP	9+1
	JR	NC,J.49F1
J.49E0:	LD	A,(HL)
	CALL	C.6000
	DEFB	4
	DEFW	C.4096			; to upper
	LD	(IY+0),A
	XOR	A
	LD	(IY+1),A
	INC	IY
	INC	D
J.49F1:	INC	HL
	DJNZ	J$4995
	LD	HL,I.6578
	LD	DE,I.6578
	LD	C,0
	LD	B,8
J$49FE:	LD	A,(HL)
	SUB	"0"
	CP	9+1
	JR	NC,J$4A09
	LD	A,(HL)
	LD	(DE),A
	INC	DE
	INC	C
J$4A09:	INC	HL
	DJNZ	J$49FE
	LD	B,C
	LD	A,8
	SUB	B
	JR	Z,J$4A18
	LD	B,A
	XOR	A
J$4A14:	LD	(DE),A
	INC	DE
	DJNZ	J$4A14
J$4A18:	LD	B,C
	LD	DE,D.6598
	LD	A,(DE)
	CP	58H	; "X"
	JR	NZ,J$4A22
	INC	DE
J$4A22:	LD	HL,I.6578
J$4A25:	LD	A,(DE)
	CP	(HL)
	JR	NZ,J$4A45
	INC	DE
	INC	HL
	DEC	C
	JR	NZ,J$4A25
	LD	A,15H
	SUB	B
	LD	B,A
	LD	HL,D.6598
	LD	A,(HL)
	CP	58H	; "X"
	JR	NZ,J.4A3B
	INC	HL
J.4A3B:	LD	A,(DE)
	LD	(HL),A
	INC	HL
	INC	DE
	DJNZ	J.4A3B
	XOR	A
	LD	(HL),A
	INC	DE
	LD	(HL),A
J$4A45:	LD	A,(D.6580)
	SUB	"0"
	CP	9+1
	JP	NC,J.4AAD
	LD	A,(D.6598)
	CP	58H	; "X"
	JR	NZ,J.4AAD
	LD	HL,D.6580
	LD	DE,D.6580
	LD	C,0
	LD	B,8
J$4A60:	LD	A,(HL)
	CP	":"
	JR	Z,J$4A6B
	SUB	"0"
	CP	9+1
	JR	NC,J$4A6F
J$4A6B:	LD	A,(HL)
	LD	(DE),A
	INC	DE
	INC	C
J$4A6F:	INC	HL
	DJNZ	J$4A60
	LD	B,C
	LD	A,8
	SUB	B
	JR	Z,J$4A7E
	LD	B,A
	XOR	A
J$4A7A:	LD	(DE),A
	INC	DE
	DJNZ	J$4A7A
J$4A7E:	LD	A,C
	AND	A
	JR	Z,J.4AAD
	LD	D,C
	PUSH	DE
	LD	A,(D.6598)
	CP	58H	; "X"
	JR	NZ,J.4A8E
	DEC	C
	JR	Z,J$4A9F
J.4A8E:	LD	B,30
	LD	HL,I$65B6
	LD	DE,I$65B5
J$4A96:	LD	A,(DE)
	LD	(HL),A
	DEC	DE
	DEC	HL
	DJNZ	J$4A96
	DEC	C
	JR	NZ,J.4A8E
J$4A9F:	POP	DE
	LD	B,D
	LD	HL,D.6598
	LD	DE,D.6580
J$4AA7:	LD	A,(DE)
	LD	(HL),A
	INC	HL
	INC	DE
	DJNZ	J$4AA7
J.4AAD:	CALL	C.4B0C
	PUSH	BC
	CALL	C.6000
	DEFB	0
	DEFW	C.40B4			; get my slotid
	POP	BC
	LD	B,A
	LD	HL,D.6598
	CALL	C.6000
	DEFB	0
	DEFW	C.417A			; MODEM.DIALST
	JR	J$4ACB

J$4AC4:	XOR	A
	CALL	C.6000
	DEFB	0
	DEFW	C.4177			; MODEM.LINSEL
J$4ACB:	LD	HL,D.6598
	LD	D,H
	LD	E,L
	INC	DE
	LD	(HL),0
	LD	BC,30-1
	LDIR
J$4AD8:	XOR	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$4ADA:	CALL	C.6000
	DEFB	0
	DEFW	C.40C0			; get line status
	AND	08H	; 8 
	RET	NZ
	LD	A,1
	CALL	C.6000
	DEFB	0
	DEFW	C.4177			; MODEM.LINSEL
	CALL	C.4B0C
	LD	A,3CH	; "<"
	CALL	C.6000
	DEFB	0
	DEFW	C.417D			; MODEM.DIALCH
	XOR	A
	CALL	C.6000
	DEFB	0
	DEFW	C.4177			; MODEM.LINSEL
	CALL	C.6000
	DEFB	0
	DEFW	C.40C0			; get line status
	AND	03H	; 3 
	LD	(D$64B4),A
	LD	(D$6373),A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4B0C:	LD	C,03H	; 3 
	LD	A,(D$6552)
	AND	A
	JR	Z,J.4B20
	LD	C,02H	; 2 
	DEC	A
	JR	Z,J.4B20
	LD	C,00H
	DEC	A
	JR	Z,J.4B20
	LD	C,04H	; 4 
J.4B20:	RET

J$4B21:	LD	HL,I.643D
	LD	DE,I.643D+1
	LD	(HL),0
	LD	BC,5-1
	LDIR
	LD	A,(D.63C9)
	CP	0F0H
	JR	NZ,J$4B50
	LD	HL,I.6560
	LD	DE,D.6443
	LD	BC,9
	LDIR
	LD	DE,D.644D
	LD	BC,3
	LDIR
	LD	DE,D.6453
	LD	BC,2
	LDIR				; initialize timer #1/#2 value
J$4B50:	LD	IX,I.643D
	LD	DE,I.6442
	LD	A,(DE)
	AND	A
	LD	A,(IX+2)
	JR	Z,J$4B60
	OR	20H
J$4B60:	LD	(IX+2),A
	INC	DE
	LD	A,(DE)
	AND	A
	LD	A,(IX+1)
	JR	Z,J$4B6D
	OR	80H
J$4B6D:	LD	(IX+1),A
	INC	DE
	LD	A,(DE)
	OR	(IX+0)
	LD	(IX+0),A
	INC	DE
	LD	A,(DE)
	OR	(IX+1)
	LD	(IX+1),A
	INC	DE
	LD	A,(DE)
	SLA	A
	SLA	A
	SLA	A
	OR	(IX+0)
	LD	(IX+0),A
	INC	DE
	LD	A,(DE)
	LD	B,01H	; 1 
	AND	A
	JR	Z,J.4B9C
	LD	B,02H	; 2 
	DEC	A
	JR	Z,J.4B9C
	LD	B,00H
J.4B9C:	LD	A,B
	SLA	A
	OR	(IX+0)
	LD	(IX+0),A
	INC	DE
	LD	A,(DE)
	AND	A
	LD	A,(IX+0)
	JR	Z,J$4BAF
	OR	20H	; " "
J$4BAF:	LD	(IX+0),A
	INC	DE
	LD	A,(DE)
	CP	01H	; 1 
	JR	NZ,J$4BBC
	LD	A,03H	; 3 
	JR	J.4BC2

J$4BBC:	CP	03H	; 3 
	JR	NZ,J.4BC2
	LD	A,01H	; 1 
J.4BC2:	SLA	A
	OR	(IX+1)
	LD	(IX+1),A
	INC	DE
	LD	A,(DE)
	CP	04H	; 4 
	JR	Z,J$4BDB
	SLA	A
	SLA	A
	SLA	A
	OR	(IX+1)
	JR	J$4BE0

J$4BDB:	LD	A,(IX+1)
	OR	40H	; "@"
J$4BE0:	LD	(IX+1),A
	INC	DE
	LD	B,01H	; 1 
	LD	A,(DE)
	AND	A
	JR	Z,J.4BF6
	LD	B,00H
	DEC	A
	JR	Z,J.4BF6
	LD	B,02H	; 2 
	DEC	A
	JR	Z,J.4BF6
	LD	B,03H	; 3 
J.4BF6:	LD	A,B
	OR	(IX+2)
	LD	(IX+2),A
	INC	DE
	LD	A,(DE)
	AND	A
	JR	Z,J$4C0A
	LD	B,02H	; 2 
	DEC	A
	JR	Z,J$4C09
	LD	B,01H	; 1 
J$4C09:	LD	A,B
J$4C0A:	SLA	A
	SLA	A
	SLA	A
	OR	(IX+2)
	LD	(IX+2),A
	INC	DE
	LD	A,(DE)
	AND	A
	LD	A,(IX+0)
	JR	Z,J$4C20
	OR	40H	; "@"
J$4C20:	LD	(IX+0),A
	INC	DE
	LD	A,(DE)
	AND	A
	LD	A,(IX+0)
	JR	Z,J$4C2D
	OR	80H
J$4C2D:	LD	(IX+0),A
	INC	DE
	LD	A,(DE)
	AND	A
	LD	A,(IX+2)
	JR	Z,J$4C3A
	OR	80H
J$4C3A:	LD	(IX+2),A
	INC	DE
	LD	A,(DE)
	AND	A
	LD	A,(IX+1)
	JR	Z,J$4C47
	OR	20H	; " "
J$4C47:	LD	(IX+1),A
	INC	DE
	LD	A,(DE)
	AND	A
	LD	A,(IX+2)
	JR	Z,J$4C54
	OR	40H	; "@"
J$4C54:	LD	(IX+2),A
	INC	DE
	LD	A,(DE)
	AND	A
	LD	A,(IX+2)
	JR	Z,J$4C61
	OR	04H	; 4 
J$4C61:	LD	(IX+2),A
	INC	DE
	LD	A,(DE)
	LD	(IX+3),A
	INC	DE
	LD	A,(DE)
	LD	(IX+4),A
	LD	HL,I.643D
	LD	B,5
J$4C73:	INC	(HL)
	INC	HL
	DJNZ	J$4C73
	LD	HL,I.643D
	LD	BC,5
	LD	A,(D.63C9)
	CP	0FH	; 15 
	JR	NZ,J$4C8A
	LD	DE,I.6525
	LDIR
	RET

J$4C8A:	CP	0F0H
	RET	NZ
	LD	DE,I.652A
	LDIR
	RET

J$4C93:	LD	HL,I.6442
	LD	DE,I.6442+1
	LD	(HL),0
	LD	BC,19-1
	LDIR
	LD	B,5
	LD	HL,I.643D
J$4CA5:	DEC	(HL)
	INC	HL
	DJNZ	J$4CA5
	LD	HL,I.643D
	LD	DE,D.6444		; data bits
	CALL	C.4DC1
	LD	DE,D.6447		; parity
	CALL	C.4DC8
	LD	DE,D.6446		; stop bits
	CALL	C.4DC8
	LD	DE,D.6448		; XON/XOFF
	CALL	C.4DC1
	LD	DE,D.644D		; auto LF on receive
	CALL	C.4DC1
	LD	DE,D.644E		; auto LF on send
	CALL	C.4DC1
	INC	HL
	LD	DE,D.6445		; SI/SO
	CALL	C.4DC1
	LD	DE,D.6449		; code page
	CALL	C.4DC8
	LD	DE,D.644A		; character mode
	CALL	C.4DC8
	LD	DE,D.6450
	CALL	C.4DC1
	RRC	(HL)
	LD	DE,D.6443		; protocol speed
	CALL	C.4DC1
	INC	HL
	LD	DE,D.644B		; screen mode
	CALL	C.4DC8
	LD	DE,D.6452		; DEL mode
	CALL	C.4DC1
	LD	DE,D.644C		; protocol mode
	CALL	C.4DC8
	LD	DE,I.6442
	CALL	C.4DC1
	LD	DE,D.6451		; duplex mode
	CALL	C.4DC1
	LD	DE,D.644F		; auto CR on receive
	CALL	C.4DC1
	LD	A,(D$6440)
	LD	(D.6453),A		; update timer #1 value
	LD	A,(D$6441)
	LD	(D.6454),A		; update timer #2 value
	LD	A,(D.643E)
	BIT	6,A
	JR	Z,J$4D2E
	LD	A,4
	LD	(D.644A),A		; character mode = 
J$4D2E:	LD	A,(D.644B)		; screen mode
	CP	2
	JR	NC,J$4D40
	LD	B,1
	AND	A
	JR	Z,J$4D3C
	LD	B,0
J$4D3C:	LD	A,B
	LD	(D.644B),A		; update screen mode
J$4D40:	LD	B,2
	LD	A,(D.6447)
	AND	A
	JR	Z,J.4D4F
	LD	B,0
	DEC	A
	JR	Z,J.4D4F
	LD	B,1
J.4D4F:	LD	A,B
	LD	(D.6447),A
	LD	A,(D.644C)		; protocol mode
	AND	A			; text terminal ?
	JR	Z,J$4D64		; yep,
	LD	B,2
	DEC	A			; X-modem ?
	JR	Z,J$4D60		; yep, flip to raw terminal
	LD	B,1			; X-modem
J$4D60:	LD	A,B
	LD	(D.644C),A		; update protocol mode
J$4D64:	LD	A,(D.6449)		; code page
	CP	1
	JR	NZ,J$4D6F
	LD	A,3
	JR	J$4D75

J$4D6F:	CP	3
	JR	NZ,J$4D78
	LD	A,1
J$4D75:	LD	(D.6449),A		; update code page
J$4D78:	LD	B,5
	LD	HL,I.643D
J$4D7D:	INC	(HL)
	INC	HL
	DJNZ	J$4D7D
	LD	HL,I.643D
	LD	BC,5
	LD	A,(D$63A0)
	CP	1			; option 1 ?
	JR	NZ,J$4D9D		; nope,
	LD	A,(D.63C9)
	CP	0FH	; 15 
	RET	NZ
	LD	DE,I.6525
	LD	BC,5
	LDIR
	RET

J$4D9D:	CP	6			; option 6 ?
	RET	NZ			; nope, quit
	LD	DE,I.652A
	LDIR
	LD	HL,D.6443
	LD	DE,I.6560
	LD	BC,9
	LDIR
	LD	HL,D.644D
	LD	BC,3
	LDIR
	LD	HL,D.6453
	LD	BC,2
	LDIR				; store timer #1/#2 value
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4DC1:	LD	A,(HL)
	AND	01H
	LD	(DE),A
	RRC	(HL)
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4DC8:	LD	A,(HL)
	AND	03H	; 3 
	LD	(DE),A
	RRC	(HL)
	RRC	(HL)
	RET

J$4DD1:	CALL	DISSCR
	LD	DE,0
	LD	BC,768
J$4DDA:	LD	A,71H
	CALL	C.6000
	DEFB	5
	DEFW	C.40B4			; write character pattern
	LD	A,71H
	CALL	C.6000
	DEFB	5
	DEFW	C.40B7			; write character color pattern
	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,J$4DDA
	LD	HL,I$4E10
J$4DF2:	LD	A,(HL)
	LD	(D.63C6),A		; update current column
	INC	HL
	LD	A,(HL)
	LD	(D.63C7),A		; update current line
	INC	HL
J$4DFC:	LD	A,(HL)
	CP	0FFH
	JR	Z,J$4E07
	CALL	C.44D2			; display character (with ? support)
	INC	HL
	JR	J$4DFC

J$4E07:	INC	HL
	LD	A,(HL)
	CP	0FFH
	JR	NZ,J$4DF2
	JP	ENASCR

I$4E10:	DEFB	11
	DEFB	5
	DEFB	"MSX-TELCOM"
	DEFB	0FFH
	DEFB	6
	DEFB	8
	DEFB	"(C)  COPYRIGHT 1987"
	DEFB	0FFH
	DEFB	4
	DEFB	11
	DEFB	"ASCII & MATSUSHITA Corp."
	DEFB	0FFH
	DEFB	0FFH

;	  Subroutine initialize function key definition
;	     Inputs  ________________________
;	     Outputs ________________________

C.4E4F:	LD	HL,FNKSTR
	LD	DE,15
	LD	B,3
	LD	A,0FH
J$4E59:	LD	(HL),A
	INC	HL
	LD	(HL),0
	ADD	HL,DE
	INC	A
	DJNZ	J$4E59
	LD	B,5
	LD	A,13H
J$4E65:	LD	(HL),A
	INC	HL
	LD	(HL),0
J$4E69:	ADD	HL,DE
	INC	A
	DJNZ	J$4E65
	LD	B,2
	LD	A,19H
J$4E71:	LD	(HL),A
	INC	HL
	LD	(HL),0
	ADD	HL,DE
	INC	A
	DJNZ	J$4E71
	RET

;	  Subroutine restore function key definition
;	     Inputs  ________________________
;	     Outputs ________________________

C.4E7A:	LD	HL,FNKSTR
	LD	IX,I.648D
	LD	DE,15
	LD	B,10
J$4E86:	LD	A,(IX+0)
	LD	(HL),A
	INC	HL
J$4E8B:	INC	IX
	LD	A,(IX+0)
	LD	(HL),A
	INC	IX
	ADD	HL,DE
	DJNZ	J$4E86
	RET

;	  Subroutine store function key definition
;	     Inputs  ________________________
;	     Outputs ________________________

J$4E97:	LD	HL,FNKSTR
	LD	IX,I.648D
	LD	DE,15
	LD	B,10
J$4EA3:	LD	A,(HL)
	LD	(IX+0),A
	INC	HL
	INC	IX
	LD	A,(HL)
	LD	(IX+0),A
	INC	IX
	ADD	HL,DE
	DJNZ	J$4EA3
	RET

J$4EB4:	PUSH	BC
	LD	HL,I$4ECB
	XOR	A
	OUT	(0D8H),A
	LD	A,02H	; 2 
	OUT	(0D9H),A
	LD	B,08H	; 8 
J$4EC1:	IN	A,(0D9H)
	CP	(HL)
	JR	NZ,J$4EC9
	INC	HL
	DJNZ	J$4EC1
J$4EC9:	POP	BC
	RET

I$4ECB:	DEFB	00H
	DEFB	40H
	DEFB	20H
	DEFB	10H
	DEFB	08H
	DEFB	04H
	DEFB	02H
	DEFB	01H

J$4ED3:	CALL	C.6000
	DEFB	0
	DEFW	C.40E7			; get usable screen size
	LD	A,H
	LD	(D.64AD),A
	LD	A,L
	SUB	2
	LD	(D.64AE),A
	LD	HL,0
	LD	(D.64AF),HL
	LD	(D.64B1),HL
	RET

J$4EED:	LD	B,A
	LD	A,(D$655D)
	OR	A
	LD	A,B
	JP	NZ,J.4F80
	LD	HL,D.64AF
	CP	0CH	; 12 
	JR	Z,J$4F1F
	CP	7FH
	JR	Z,J$4F27
	CP	08H	; 8 
	JR	Z,J$4F2D
	CP	0DH	; 13 
	JR	Z,J.4F34
	CP	0AH	; 10 
	JR	Z,J$4F38
	CP	09H	; 9 
	JR	Z,J$4F3D
	CP	20H	; " "
	JR	C,J.4F55
	INC	(HL)
	XOR	A
	LD	(D.64B1),A
	LD	(D.64B2),A
	JR	J.4F55

J$4F1F:	LD	A,(D.64AE)
	LD	(D.64B0),A
	JR	J.4F34

J$4F27:	LD	A,(D$6371)
	OR	A
	JR	Z,J.4F55
J$4F2D:	LD	A,(HL)
	OR	A
	JR	Z,J.4F55
	DEC	(HL)
	JR	J.4F55

J.4F34:	LD	(HL),00H
	JR	J.4F55

J$4F38:	INC	HL
	INC	(HL)
	DEC	HL
	JR	J.4F55

J$4F3D:	XOR	A
	LD	(D.64B1),A
	LD	(D.64B2),A
	LD	A,(HL)
	AND	07H	; 7 
	LD	C,A
	LD	A,08H	; 8 
	SUB	C
	ADD	A,(HL)
	LD	C,A
	LD	A,(D.64AD)
	CP	C
	LD	(HL),C
	JR	NC,J.4F55
	LD	(HL),A
J.4F55:	LD	C,(HL)
	LD	A,(D.64AD)
	CP	C
	LD	A,(D.64B0)
	JR	NC,J$4F65
	LD	(HL),01H	; 1 
	INC	A
	LD	(D.64B0),A
J$4F65:	LD	C,A
	LD	A,(D.64AE)
	SUB	C
	OR	A
	PUSH	BC
	CALL	Z,C$4F8F
	POP	BC
	RET	C
	LD	A,B
	CP	0DH	; 13 
	LD	HL,D.64B1
	JR	Z,J.4F88
	CP	0AH	; 10 
	LD	HL,D.64B2
	JR	Z,J.4F88
J.4F80:	CALL	C.6000
	DEFB	2
	DEFW	C.4093
	OR	A
	RET

J.4F88:	INC	(HL)
	DEC	(HL)
	JR	Z,J.4F80
	LD	(HL),00H
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$4F8F:	LD	HL,I$4FC9
	CALL	C.4FF0
	CALL	C.4FA1
	PUSH	AF
	LD	HL,I$4FEA
	CALL	C.4FF0
	POP	AF
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4FA1:	CALL	KILBUF
	CALL	C$4FFE			; get key, to upper
	CP	0DH
	JR	Z,J$4FB5
	CP	"Q"
	SCF
	RET	Z
	SUB	" "
	JR	Z,J$4FB9
	JR	C.4FA1

J$4FB5:	LD	A,(D.64AE)
	DEC	A
J$4FB9:	LD	(D.64B0),A
	LD	A,(D.64AF)
	OR	A
	RET	NZ
	CPL
	LD	(D.64B1),A
	LD	(D.64B2),A
	RET

I$4FC9:	DEC	C
	LD	A,(BC)
	DEC	DE
	LD	E,E
	SCF
	LD	L,L
	DEC	L
	DEC	L
	JR	NZ,J.5020
	LD	L,A
	LD	(HL),D
	LD	H,L
	JR	NZ,J$5005
	DEC	L
	JR	NZ,J$5003
	JR	NZ,J.5020
	LD	D,D
	CPL
	LD	D,E
	LD	D,B
	CPL
	LD	D,C
	JR	NZ,J$500E
	DEC	DE
	LD	E,E
	JR	NC,J$5056
	NOP
I$4FEA:	DEC	C
	DEC	DE
	LD	E,E
	JR	NC,J$503A
	NOP
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4FF0:	LD	A,(HL)
	OR	A
	RET	Z
	PUSH	HL
	CALL	C.6000
	DEFB	2
	DEFW	C.4093
	POP	HL
	INC	HL
	JR	C.4FF0

;	  Subroutine get key, to upper
;	     Inputs  ________________________
;	     Outputs ________________________

C$4FFE:	CALL	CHGET
	CALL	C.6000
	DEFB	4
	DEFW	C.4096			; to upper
	RET

;	  Subroutine ________________________
;	     Inputs  ________________________
;	     Outputs ________________________

J$5008:	LD	C,A
	CP	"*"
	JR	Z,J.5016
	CP	"#"
	JR	Z,J.5016
	SUB	"0"
	CP	9+1
	RET	NC
J.5016:	PUSH	BC
	CALL	C$5029
	POP	BC
	PUSH	AF
	LD	A,C
	LD	C,0
	CALL	C.6000
	DEFB	0
	DEFW	C.417D			; MODEM.DIALCH
	POP	AF
	JP	J$502F

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$5029:	LD	IX,I$50DD
	JR	J$5033

J$502F:	LD	IX,J.50FD
J$5033:	PUSH	AF
	CP	"*"
	JR	NZ,J$503C
	LD	A,09H
J$503A:	JR	J.504B

J$503C:	CP	"#"
	JR	NZ,J$5044
	LD	A,0BH
	JR	J.504B

J$5044:	DEC	A
	CP	0FFH
	JR	NZ,J.504B
	LD	A,0AH
J.504B:	LD	HL,I$507D
	ADD	A,A
	ADD	A,A
	ADD	A,A
	LD	D,0
	LD	E,A
	ADD	HL,DE
	LD	B,4
J$5057:	PUSH	BC
	PUSH	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	EX	DE,HL
	LD	B,8
J$505F:	PUSH	BC
	PUSH	HL
	PUSH	IX
	LD	A,(IX+0)
	LD	BC,1
	CALL	FILVRM
	POP	IX
J$506E:	POP	HL
	POP	BC
	INC	HL
	INC	IX
	DJNZ	J$505F
	POP	HL
J$5076:	POP	BC
	INC	HL
	INC	HL
	DJNZ	J$5057
	POP	AF
	RET

I$507D:	XOR	B
	ADD	HL,HL
	OR	B
	ADD	HL,HL
	XOR	B
	LD	HL,(D$2AB0)
J$5084	EQU	$-1
	RET	NZ
	ADD	HL,HL
	RET	Z
	ADD	HL,HL
	RET	NZ
	LD	HL,(D$2AC8)
	RET	C
	ADD	HL,HL
	RET	PO
	ADD	HL,HL
	RET	C
	LD	HL,(D$2AE0)
	XOR	B
J$5096:	INC	L
	OR	B
	INC	L
	XOR	B
	DEC	L
	OR	B
	DEC	L
	RET	NZ
	INC	L
	RET	Z
	INC	L
	RET	NZ
	DEC	L
	RET	Z
J$50A4:	DEC	L
	RET	C
	INC	L
	RET	PO
	INC	L
	RET	C
	DEC	L
	RET	PO
	DEC	L
	XOR	B
	CPL
	OR	B
	CPL
	XOR	B
	JR	NC,J$5064
	JR	NC,J$5076
	CPL
	RET	Z
	CPL
	RET	NZ
	JR	NC,J$5084
	JR	NC,J$5096
	CPL
	RET	PO
	CPL
	RET	C
	JR	NC,J$50A4
	JR	NC,J$506E
	LD	(D$32B0),A
	XOR	B
	INC	SP
	OR	B
	INC	SP
	RET	NZ
	LD	(D$32C8),A
	RET	NZ
	INC	SP
	RET	Z
	INC	SP
	RET	C
	LD	(D$32E0),A
	RET	C
	INC	SP
	RET	PO
	INC	SP
I$50DD:	JR	J$50F7

?.50DF:	JR	J$50F9

?.50E1:	JR	J$50FB

?.50E3:	JR	J.50FD

?.50E5:	JR	J$50FF

?.50E7:	JR	J$5101

?.50E9:	JR	J$5103

?.50EB:	JR	J$5105

?.50ED:	JR	J$5107

?.50EF:	JR	J$5109

?.50F1:	JR	J$510B

?.50F3:	JR	J$510D

?.50F5:	JR	J$510F

J$50F7:	JR	J$5111

J$50F9:	JR	J$5113

J$50FB:	JR	J$5115

J.50FD:	RRA
	RRA
J$50FF:	RRA
	RRA
J$5101:	RRA
	RRA
J$5103:	RRA
	RRA
J$5105:	RRA
	RRA
J$5107:	RRA
	RRA
J$5109:	RRA
	RRA
J$510B:	RRA
	RRA
J$510D:	RRA
	RRA
J$510F:	RRA
	RRA
J$5111:	RRA
	RRA
J$5113:	RRA
	RRA
J$5115:	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA

I.511D:	DEFB	0
	DEFB	041H
	DEFB	0
	DEFB	0
	DEFB	0
	DEFB	0
	DEFB	0
	DEFB	0
	DEFB	0
	DEFB	7
	DEFB	13H
	DEFB	35H
	DEFB	38H
	DEFB	3DH
	DEFB	3EH
	DEFB	41H
	DEFB	42H
	DEFB	43H
	DEFB	44H
	DEFB	45H
	DEFB	46H
	DEFB	0
	DEFB	36H

;	  Subroutine translate error, update error display
;	     Inputs  ________________________
;	     Outputs ________________________

J$5134:	LD	HL,I.511D
	LD	BC,I$0017
	CPIR
	LD	A,18H
	JR	NZ,J$5142
	DEC	A
	SUB	C
J$5142:	LD	(D.6431),A		; update last error
	CALL	C.6000
	DEFB	7
	DEFW	C.4090			; update error display
	RET

;	  Subroutine get number of free data blocks
;	     Inputs  ________________________
;	     Outputs ________________________

C.514C:	LD	HL,I$6966
	LD	DE,0
	LD	BC,100
J$5155:	LD	A,(HL)
	OR	A			; data block free ?
	JR	NZ,J$515A		; nope,
	INC	DE
J$515A:	PUSH	BC
	LD	BC,48
	ADD	HL,BC
	POP	BC
	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,J$5155
	RET

;	  Subroutine phone book entry table full ?
;	     Inputs  ________________________
;	     Outputs ________________________

J$5166:	LD	A,(I$6900+99)
	INC	A
	RET

J$516B:	PUSH	DE
	CALL	C.514C			; get number of free data blocks
	PUSH	DE
	LD	BC,48
	LD	IX,I.65D0
	LD	DE,0
	LD	HL,0
J.517D:	LD	A,(IX+0)
	OR	A
	JR	Z,J$518F
	INC	IX
	INC	HL
	SBC	HL,BC
	INC	DE
	JR	Z,J.517D
	DEC	DE
	ADD	HL,BC
	JR	J.517D

J$518F:	POP	HL
	SBC	HL,DE
	POP	DE
	RET

;	  Subroutine show copyright message
;	     Inputs  ________________________
;	     Outputs ________________________

J$5194:	CALL	C$5200
	JR	NZ,J$51D8
	CALL	C.6000
	DEFB	5
	DEFW	C.40E4
	LD	A,0FH
	LD	(D.643A),A
	LD	HL,I$51DA
	LD	BC,7*256+8		; column = 7, line = 8
	LD	D,18			; size = 18
	CALL	C.478A			; display string at location (with ? support)
	LD	HL,I$51ED
	LD	BC,7*256+9		; column = 7, line = 9
	LD	D,18			; size = 18
	CALL	C.478A			; display string at location (with ? support)
J$51BA:	LD	A,6
	CALL	SNSMAT
	AND	81H			; SHIFT+F3 ?
	JR	Z,J$51BA		; yep, wait
	CALL	KILBUF			; clear keyboard buffer
	CALL	C.6000
	DEFB	5
	DEFW	C.40E7
	CALL	C.6000
	DEFB	4
	DEFW	C.40A5			; handle option
	CALL	C.6000
	DEFB	7
	DEFW	C.40AE
J$51D8:	XOR	A
	RET

I$51DA:	DEFB	"Copyright (C) 1988"
	DEFB	0FFH

I$51ED:	DEFB	"ASCII & MATSUSHITA"
	DEFB	0FFH

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$5200:	LD	A,(D.6431)
	AND	A			; error ?
	RET	NZ			; yep, quit
	LD	A,(D.63CA)
	AND	A
	RET	NZ
	LD	A,(D.643C)
	AND	A
	RET

;	  Subroutine test BTELCOM operand
;	     Inputs  ________________________
;	     Outputs ________________________

J$520F:	PUSH	BC
	PUSH	HL
	LD	B,A
	LD	HL,(D.6374)		; BTELCOM operand
	LD	A,L
	OR	H			; pointer specified ?
	POP	HL
	LD	A,B
	POP	BC
J.521A:	RET

;	  Subroutine test BTELCOM operand, if = 0, get keyboard status
;	     Inputs  ________________________
;	     Outputs ________________________

J$521B:	PUSH	HL
	LD	HL,(D.6374)		; BTELCOM operand
	LD	A,L
	OR	H			; pointer specified ?
	POP	HL
	RET	NZ			; yep, quit ('have key')
	JP	CHSNS

;	  Subroutine test BTELCOM operand, if = 0, get key
;	     Inputs  ________________________
;	     Outputs ________________________

J$5226:	PUSH	HL
	LD	HL,(D.6374)		; BTELCOM operand
	LD	A,L
	OR	H			; pointer specified ?
	JR	Z,J$5244		; nope, quit with CHGET
	LD	A,(HL)
	OR	A			; end marker ?
	JR	Z,J$523F		; yep,
	INC	HL
	INC	(HL)
	DEC	(HL)			; end marker ?
	JR	NZ,J$523A		; nope, update pointer
	LD	HL,0
J$523A:	LD	(D.6374),HL		; update BTELCOM operand
	POP	HL
	RET

J$523F:	LD	L,A
	LD	H,A
	LD	(D.6374),HL		; update BTELCOM operand
J$5244:	POP	HL
	JP	CHGET

?.5248:	DEFS	6000H-$,0FFH

	END
