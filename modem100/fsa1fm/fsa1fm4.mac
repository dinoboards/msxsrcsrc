; FSA1FM4.MAC
;
; MSX-MODEM Panasonic FSA1FM
;
; Source re-created by Z80DIS 2.2
; Z80DIS was written by Kenneth Gielow, Palo Alto, CA
;
; Code Copyrighted by ASCII and maybe others
; Source comments by Arjen Zeilemaker
;
; Sourcecode supplied for STUDY ONLY
; Recreation NOT permitted without authorisation of the copyrightholders
;

        .Z80
        ASEG

        org     04090H
;
I.0000	EQU	0000H	; ----I
I.0003	EQU	0003H	; ----I
VDP.DR	EQU	0006H
VDP.DW	EQU	0007H
I$0007	EQU	0007H	; ----I
I$000F	EQU	000FH	; ----I
C$0010	EQU	0010H	; -C---
I$0013	EQU	0013H	; ----I
I$0014	EQU	0014H	; ----I
C$0020	EQU	0020H	; -C---
C.0028	EQU	0028H	; -C---
C$0030	EQU	0030H	; -C---
C.0038	EQU	0038H	; -C--I
I.0040	EQU	0040H	; ----I
DISSCR	EQU	0041H	; -C---
ENASCR	EQU	0044H	; -C---
WRTVDP	EQU	0047H	; -C---
I$0048	EQU	0048H	; ----I
FILVRM	EQU	0056H	; JC---
CHGCLR	EQU	0062H	; J----
I$0070	EQU	0070H	; ----I
I.0078	EQU	0078H	; ----I
I$00A8	EQU	00A8H	; ----I
I$00B0	EQU	00B0H	; ----I
BEEP	EQU	00C0H	; -C---
I$00E0	EQU	00E0H	; ----I
I$0100	EQU	0100H	; ----I
I.0101	EQU	0101H	; ----I
I$011A	EQU	011AH	; ----I
KILBUF	EQU	0156H	; -C---
EXTROM	EQU	015FH	; -C---
S.CHGMDP	EQU	01B5H	; ----I
I$0202	EQU	0202H	; ----I
I$0301	EQU	0301H	; ----I
I$0302	EQU	0302H	; ----I
I$0306	EQU	0306H	; ----I
I.0403	EQU	0403H	; ----I
I.0905	EQU	0905H	; ----I
I.0907	EQU	0907H	; ----I
I$0A05	EQU	0A05H	; ----I
I$0A07	EQU	0A07H	; ----I
I$0A08	EQU	0A08H	; ----I
I$0E01	EQU	0E01H	; ----I
I$0F0B	EQU	0F0BH	; ----I
I$0F0D	EQU	0F0DH	; ----I
I.0F0F	EQU	0F0FH	; ----I
C$105C	EQU	105CH	; -C---
I$1413	EQU	1413H	; ----I
I.1F1E	EQU	1F1EH	; ----I
D$2300	EQU	2300H	; ---L-
I$2408	EQU	2408H	; ----I
I$2508	EQU	2508H	; ----I
I$2708	EQU	2708H	; ----I
I$2910	EQU	2910H	; ----I
J$3040	EQU	3040H	; J----

C.6000	EQU	6000H	; -C---
D$6370	EQU	6370H	; --S--
D$6371	EQU	6371H	; --S--
D.6372	EQU	6372H	; --SL-
D.6373	EQU	6373H	; --S--
D$6374	EQU	6374H			; BTELCOM operand
D$6376	EQU	6376H			; SRAM initialized #2
D.63A0	EQU	63A0H			; selected option
D.63A1	EQU	63A1H	; --SLI
D$63A3	EQU	63A3H	; ---L-
D.63A4	EQU	63A4H	; ---L-
D.63A5	EQU	63A5H	; --SL-
D.63A7	EQU	63A7H	; --SL-
D.63A8	EQU	63A8H	; --SL-
D.63A9	EQU	63A9H	; --SL-
D.63AA	EQU	63AAH	; --SL-
D.63AB	EQU	63ABH	; --SL-
D.63AC	EQU	63ACH			; current column
D.63AD	EQU	63ADH			; current line
D.63AE	EQU	63AEH	; --SL-
D$63B4	EQU	63B4H			; VDP data read I/O port
D$63C6	EQU	63C6H			; current column
D$63C7	EQU	63C7H			; current line
D.63C8	EQU	63C8H	; --SL-
D.63C9	EQU	63C9H	; --SL-
D.63CA	EQU	63CAH	; --SL-
D.63CB	EQU	63CBH	; --SL-
D.63CC	EQU	63CCH	; --SL-
I.63CD	EQU	63CDH	; ----I
D.6431	EQU	6431H			; last error
D$643A	EQU	643AH	; --S--
D.643C	EQU	643CH	; --SL-
I.643D	EQU	643DH	; ----I
D.6442	EQU	6442H			; settings page 0
D$6443	EQU	6443H			; protocol speed
I$6449	EQU	6449H			; settings page 1
I$6450	EQU	6450H			; settings page 2
I.6453	EQU	6453H			; timer #1 value
D$6455	EQU	6455H	; --S--
D.646C	EQU	646CH	; --SL-
D.646D	EQU	646DH	; --SL-
D.648A	EQU	648AH	; --SL-
D.648B	EQU	648BH	; --SL-
D.648C	EQU	648CH	; --SL-
D.64A2	EQU	64A2H	; --SL-
D$64A4	EQU	64A4H	; --S--
D.64A5	EQU	64A5H	; --SLI
D$64A6	EQU	64A6H	; ---L-
D$64A7	EQU	64A7H	; ---L-
D$64A8	EQU	64A8H	; ---L-
I$64A9	EQU	64A9H	; ----I
D.64AA	EQU	64AAH	; --SL-
D.64AC	EQU	64ACH	; --SL-
D.64B4	EQU	64B4H	; --SL-
I.64B5	EQU	64B5H	; ----I
D.64B8	EQU	64B8H	; --SL-
D.64B9	EQU	64B9H			; current option page
D.64BA	EQU	64BAH	; --SL-
D.6523	EQU	6523H	; --SL-
I$6525	EQU	6525H	; ----I
I.652A	EQU	652AH	; ----I
I.652F	EQU	652FH	; ----I
I.6545	EQU	6545H	; ----I
I$6550	EQU	6550H	; ----I
D.6551	EQU	6551H	; ---LI
I$6553	EQU	6553H	; ----I
D$6556	EQU	6556H	; ---L-
I$6558	EQU	6558H	; ----I
I.655B	EQU	655BH	; ----I
D.655D	EQU	655DH	; --SL-
I.6560	EQU	6560H	; ----I
I$6567	EQU	6567H	; ----I
I.656C	EQU	656CH	; ----I
D$656F	EQU	656FH	; --S--
I$6578	EQU	6578H	; ----I
I$6580	EQU	6580H	; ----I
I.6588	EQU	6588H	; ----I
I$6597	EQU	6597H	; ----I
I.65BB	EQU	65BBH	; ----I
I$65CA	EQU	65CAH	; ----I
I.65CF	EQU	65CFH	; ----I
D.65D0	EQU	65D0H	; ---LI
I.65E5	EQU	65E5H	; ----I
I$65E6	EQU	65E6H	; ----I
I.65FA	EQU	65FAH	; ----I
D.65FC	EQU	65FCH	; ---L-

I.6900	EQU	6900H			; phone book entry table
I.6966	EQU	6966H			; phone book data blocks
I.7C25	EQU	7C25H	; ----I
D$7EE7	EQU	7EE7H                   ; printer not ready counter
D.7EE9	EQU	7EE9H			; printer output enabled
D$7EEE	EQU	7EEEH			; SRAM initialized
D.7EF0	EQU	7EF0H	; --SL-
D.7EF1	EQU	7EF1H	; --SL-
D.7EF3	EQU	7EF3H			; current phone book data block
D.7EF4	EQU	7EF4H	; --SLI
D.7EF5	EQU	7EF5H	; --SL-
D.7EF6	EQU	7EF6H	; --SL-
D.7EF7	EQU	7EF7H	; --SL-
D.7EF8	EQU	7EF8H	; --SL-
I$7EF9	EQU	7EF9H	; ----I
D$7EFF	EQU	7EFFH	; --S--

I$9000	EQU	9000H	; ----I
I$AB3A	EQU	0AB3AH	; ----I
I$AF01	EQU	0AF01H	; ----I
D$C5D5	EQU	0C5D5H	; --S--
D$C941	EQU	0C941H	; --S--
C.CD40	EQU	0CD40H	; JC---
J$CD5A	EQU	0CD5AH	; J----
J$DA40	EQU	0DA40H	; J----
J$F15B	EQU	0F15BH	; J----
CSRX	EQU	0F3DDH	; ---L-
CNSDFG	EQU	0F3DEH	; --SL-
RG1SAV	EQU	0F3E0H	; --SL-
FORCLR	EQU	0F3E9H	; ----I
LPTPOS	EQU	0F415H	; --S--
KEYBUF	EQU	0FBF0H	; ----I
INTFLG	EQU	0FC9BH	; --S-I
I.FF00	EQU	0FF00H	; ----I

?.4090:	JP	J$40B4                  ; TELCOM application
?.4093:	JP	J$40B1			; BTELCOM application
?.4096:	JP	C.4653			; to upper
I$4099:	JP	C.46C6			; 643A = 00H
?.409C:	JP	C.46C9			; 643A = 0FH
?.409F:	JP	C.46CD			; 643A = 80H
?.40A2:	JP	C.46D1			; 643A = 8FH
I$40A5:	JP	C.42D7			; handle option
?.40A8:	JP	C.5FB8
?.40AB:	JP	J$45D4			; REMOTE application
?.40AE:	JP	C.5A7A

;	  Subroutine BTELCOM application
;	     Inputs  ________________________
;	     Outputs ________________________

J$40B1:	PUSH	HL
	JR	J$40B8

;	  Subroutine TELCOM application
;	     Inputs  ________________________
;	     Outputs ________________________

J$40B4:	PUSH	HL
	LD	HL,0			; BTELCOM operand = 0
J$40B8:	LD	(D$6374),HL		; store operand
	CALL	C.4254
J$40BE:	LD	A,(D.63A0)		; selected option
	CP	0FFH
	JR	Z,J$40C9
	CP	8
	JR	C,J$40CE
J$40C9:	CALL	C$4641			; restore current screen colors, vdp register 1
	POP	HL
	RET

J$40CE:	LD	HL,I$40E2
	ADD	A,A
	LD	E,A
	LD	D,0
	ADD	HL,DE
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	LD	(D.63A1),DE
	CALL	C.40F2
	JR	J$40BE

I$40E2:	DEFW	I.4160			; option 0
	DEFW	I.417E			; option 1
	DEFW	I.41A0			; option 2
	DEFW	I.41BE			; option 3
	DEFW	I.41DC			; option 4
	DEFW	I.41FA			; option 5
	DEFW	I.4218			; option 6
	DEFW	I.4236			; option 7

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.40F2:	LD	A,(D.63C9)
	AND	A
	JR	Z,J$40FB
	CALL	C.5D7B			; connect to phone
J$40FB:	CALL	C.6000
	DEFB	5
	DEFW	C.4090
	CALL	C.42D7			; handle option
	LD	A,(D.63A0)		; selected option
	DEC	A
	JR	NZ,J.411C
	CALL	C.4840
	JR	NZ,J.413F
	CALL	C.466C
	LD	DE,I$419C
	JR	Z,J$411A
	LD	DE,I$419E
J$411A:	JR	J$4152

J.411C:	LD	B,00H
	LD	A,(D.63A0)		; selected option
	CP	1
	JR	NZ,J.412C
	LD	A,(D.6551)
	DEC	A
	JR	Z,J.412C
	INC	B
J.412C:	LD	A,B
	CALL	C.6000
	DEFB	0
	DEFW	C.4174			; MODEM.SPKCNT
	LD	A,(D.63A0)		; selected option
	CP	4
	JR	C,J.413F
	CP	7
	JP	Z,J$45EE
J.413F:	CALL	C.6000
	DEFB	5
	DEFW	C.409F
	LD	A,(D$63A3)
	DEC	A
	ADD	A,A
	LD	E,A
	LD	D,00H
	LD	HL,(D.63A1)
	ADD	HL,DE
	EX	DE,HL
J$4152:	LD	HL,I$415C
	PUSH	HL
	EX	DE,HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	EX	DE,HL
	JP	(HL)

I$415C:	AND	A
	RET	NZ
	JR	J.411C

; option 0

I.4160:	DEFW	C.4566			; F1
	DEFW	C.485E			; F2
	DEFW	C.489F			; F3
	DEFW	C.48B1			; F4
	DEFW	C.4581			; F5
	DEFW	C.4578			; F6
	DEFW	C.455C			; F7
	DEFW	C.42D0			; F8
	DEFW	C.48D3			; F9
	DEFW	C.4933			; F10
	DEFW	C.49EF			; RIGHT
	DEFW	C.49DB			; LEFT
	DEFW	C.4940			; UP
	DEFW	C.4985			; DOWN
	DEFW	C.4A3D			; other

; option 1

I.417E:	DEFW	C.4538			; F1
	DEFW	C.4DA2			; F2
	DEFW	C.4D03			; F3
	DEFW	C.4DBD			; F4
	DEFW	C.4516			; F5
	DEFW	C.5D56			; F6
	DEFW	C.5D56			; F7
	DEFW	C.5D56			; F8
	DEFW	C.5D56			; F9
	DEFW	C.5D56			; F10
	DEFW	C.4DF9			; RIGHT
	DEFW	C.4DDD			; LEFT
	DEFW	C.5D56			; UP
	DEFW	C.5D56			; DOWN
	DEFW	C.4C53			; other

I$419C:	DEFW	C.4BEF

I$419E:	DEFW	C.47FE

; option 2

I.41A0:	DEFW	C.454C			; F1
	DEFW	C.5023			; F2
	DEFW	C.505E			; F3
	DEFW	C.5D56			; F4
	DEFW	C.4F13			; F5
	DEFW	C.5D56			; F6
	DEFW	C.5D56			; F7
	DEFW	C.5D56			; F8
	DEFW	C.5D56			; F9
	DEFW	C.5D56			; F10
	DEFW	C.526A			; RIGHT
	DEFW	C.5214			; LEFT
	DEFW	C.5166			; UP
	DEFW	C.51B7			; DOWN
	DEFW	C.4E44			; other

; option 3

I.41BE:	DEFW	C.5D56			; F1
	DEFW	C.5D56			; F2
	DEFW	C.5D56			; F3
	DEFW	C.5371			; F4
	DEFW	C.5397			; F5
	DEFW	C.5D56			; F6
	DEFW	C.5D56			; F7
	DEFW	C.5D56			; F8
	DEFW	C.5D56			; F9
	DEFW	C.5D56			; F10
	DEFW	C.54EC			; RIGHT
	DEFW	C.544C			; LEFT
	DEFW	C.53AE			; UP
	DEFW	C.53FB			; DOWN
	DEFW	C.536F			; other

; option 4

I.41DC:	DEFW	C.55B2			; F1
	DEFW	C.5602			; F2
	DEFW	C.563E			; F3
	DEFW	C.537E			; F4
	DEFW	C.5664			; F5
	DEFW	C.5D56			; F6
	DEFW	C.5D56			; F7
	DEFW	C.5D56			; F8
	DEFW	C.5D56			; F9
	DEFW	C.5D56			; F10
	DEFW	C.57EE			; RIGHT
	DEFW	C.57A9			; LEFT
	DEFW	C.56C6			; UP
	DEFW	C.5745			; DOWN
	DEFW	C.5864			; other

; option 5

I.41FA:	DEFW	C.5D56			; F1
	DEFW	C.5D56			; F2
	DEFW	C.5D56			; F3
	DEFW	C.5D56			; F4
	DEFW	C.5944			; F5
	DEFW	C.5D56			; F6
	DEFW	C.5D56			; F7
	DEFW	C.5D56			; F8
	DEFW	C.5D56			; F9
	DEFW	C.5D56			; F10
	DEFW	C.5C4C			; RIGHT
	DEFW	C.5C14			; LEFT
	DEFW	C.5BD2			; UP
	DEFW	C.5BF1			; DOWN
	DEFW	C.5B6D			; other

; option 6

I.4218:	DEFW	C.4548			; F1
	DEFW	C.4597			; F2
	DEFW	C.5D56			; F3
	DEFW	C.5D56			; F4
	DEFW	C.5944			; F5
	DEFW	C.5D56			; F6
	DEFW	C.5D56			; F7
	DEFW	C.5D56			; F8
	DEFW	C.5D56			; F9
	DEFW	C.5D56			; F10
	DEFW	C.5CF7			; RIGHT
	DEFW	C.5CE7			; LEFT
	DEFW	C.5CA2			; UP
	DEFW	C.5CC4			; DOWN
	DEFW	C.5D10			; other

; option 7

I.4236:	DEFW	C.5D56			; F1
	DEFW	C.5D56			; F2
	DEFW	C.5D56			; F3
	DEFW	C.5D56			; F4
	DEFW	C.5D71			; F5
	DEFW	C.5D56			; F6
	DEFW	C.5D56			; F7
	DEFW	C.5D56			; F8
	DEFW	C.5D56			; F9
	DEFW	C.5D56			; F10
	DEFW	C.5D56			; RIGHT
	DEFW	C.5D56			; LEFT
	DEFW	C.5D56			; UP
	DEFW	C.5D56			; DOWN
	DEFW	C.5D56			; other

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4254:	CALL	DISSCR			; disable screen
	LD	HL,D.63A0
	LD	DE,D.63A0+1
	LD	(HL),0
	LD	BC,011BH-1
	LDIR
	CALL	C$462F			; store current screen colors, vdp register 1
	CALL	C.4DCC
	CALL	C.42AD
	LD	HL,(VDP.DR)
	LD	(D$63B4),HL
	CALL	C.6000
	DEFB	6
	DEFW	C.40A2			; store function key definition
	CALL	C.6000
	DEFB	6
	DEFW	C.409C			; initialize function key definition
	CALL	ENASCR			; enable screen
	CALL	C.46C9			; 643A = 0FH
	CALL	C.5D84			; counter #1, clear
	CALL	C.468B
	CALL	C.535E
	LD	HL,(D$7EEE)
	LD	A,55H
	CP	L			; SRAM initialized ?
	JR	NZ,J.42A6		; nope, initialize
	CPL
	CP	H			; SRAM initialized ?
	JR	NZ,J.42A6		; nope, initialize
	LD	HL,(D$6376)
	LD	A,"A"
	CP	L			; SRAM initialized #2 ?
	JR	NZ,J.42A6		; nope, initialize
	LD	A,"M"
	CP	H			; SRAM initialized #2 ?
	RET	Z			; yep, quit
J.42A6:	CALL	C.6000
	DEFB	6
	DEFW	C.40DE			; initialize SRAM
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.42AD:	LD	A,2
	LD	IX,S.CHGMDP
	CALL	EXTROM
	LD	A,(RG1SAV)
	AND	0FCH
	LD	B,A
	LD	C,1
	CALL	WRTVDP
	LD	HL,FORCLR
	LD	(HL),15
	INC	HL
	LD	A,3
	LD	(HL),A
	INC	HL
	LD	(HL),A
	DEC	A
	JP	CHGCLR

;	  Subroutine option 0, F8
;	     Inputs  ________________________
;	     Outputs ________________________

C.42D0:	CALL	C.6000
	DEFB	6
	DEFW	C.410B			; show copyright message
	RET

;	  Subroutine handle option
;	     Inputs  ________________________
;	     Outputs ________________________

C.42D7:	LD	A,(D.63A0)		; selected option
	AND	A			; option 0 ?
	JR	Z,J$42F5		; yep,
	DEC	A			; option 1 ?
	JR	Z,J$431E		; yep,
	DEC	A			; option 2 ?
	JP	Z,J$43A3		; yep,
	DEC	A			; option 3 ?
	JP	Z,J$43B6		; yep,
	DEC	A			; option 4 ?
	JP	Z,J$4470		; yep,
	DEC	A			; option 5 ?
	JP	Z,J$44C7		; yep,
	DEC	A			; option 6 ?
	JP	Z,J$44F3		; yep,
	RET

; option 0

J$42F5:	LD	A,1
	LD	(D.646C),A
	XOR	A
	LD	(D.63CA),A
	LD	A,(D.63A5)
	CALL	C.4A09
	LD	HL,I.6560
	LD	DE,I.6560+1
	LD	BC,16-1
	LD	(HL),0
	LDIR
	LD	A,0FFH
	LD	(D.64A2),A
	CALL	C.4AA5
	XOR	A
	LD	(D.64A2),A
	RET

; option 1

J$431E:	XOR	A
	LD	(D.646D),A
	LD	(D.64BA),A
	CALL	C.4840
	JP	NZ,J$436A
	CALL	C$4E15
	LD	HL,I.65FA
	LD	DE,I.643D
	CALL	C.5364
	CALL	C.5D99
	CALL	C.6000
	DEFB	6
	DEFW	C.40F3
	JR	Z,J.434E
	CALL	C.5DE6			; get line status
	AND	03H	; 3 
	JR	Z,J.434E
	LD	A,8
	JP	C.465D			; update error display

J.434E:	XOR	A			; connect to modem
	CALL	C.5D7D			; MODEM.LINSEL
	CALL	C.4823
	JP	Z,C.4D60
	CP	03H	; 3 
	JP	NC,C.4D60
	LD	(D.64B4),A
	LD	(D.6373),A
	CALL	C.6000
	DEFB	6
	DEFB	C.40AE
	RET

J$436A:	LD	HL,I$6525
	LD	DE,I.643D
	CALL	C.5364
	CALL	C.5D99
	CALL	C.5D74
	LD	A,9
	LD	(D.63AC),A		; current column = 9
	LD	A,5
	LD	(D.63AD),A
	JP	C.5DA0

?.4386:	CALL	C.46C9			; 643A = 0FH
	LD	HL,I.65E5
	LD	BC,9*256+5		; column = 9, line = 5
	LD	D,21			; size = 21
	CALL	C.461E			; display string at location (with ? support)
	LD	A,(D$64A7)
	LD	(D.63AC),A		; update current column
	LD	A,(D$64A8)
	LD	(D.63AD),A
	JP	C.5DA0

; option 2

J$43A3:	CALL	C$52BF
	XOR	A
	LD	(D.63A7),A
	LD	(D.63CC),A
	CALL	C.50BE
	CALL	C.484A
	JP	C.5DA0

; option 3

J$43B6:	CALL	C.6000
	DEFB	7
	DEFW	C.40BA
	LD	A,(D.63C9)
	LD	C,A
	LD	DE,D.6442		; settings page 0
	LD	HL,I.4453
	LD	B,7			; settings on page = 7
	LD	A,(D.64B9)
	AND	A			; option page 0 ?
	JR	NZ,J$43DB		; nope,
	LD	A,C
	CP	0F0H
	JR	NZ,J.43FD
	LD	DE,I.6560		; settings page 0
	LD	HL,I.4464
	JR	J.43FD

J$43DB:	LD	DE,I$6449		; settings page 1
	LD	HL,I.445A
	LD	B,7			; settings on page = 7
	DEC	A
	JR	NZ,J$43F5
	LD	A,C
	CP	0F0H
	JR	NZ,J.43FD
	LD	B,5			; settings on page = 5
	LD	DE,I$6567		; settings page 1
	LD	HL,I.446B
	JR	J.43FD

J$43F5:	LD	DE,I$6450		; settings page 2
	LD	HL,I.4461
	LD	B,3			; settings on page = 3
J.43FD:	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	A,(DE)
	LD	B,(HL)
	ADD	A,B
	CALL	C.6000
	DEFB	7
	DEFW	C.4093
	POP	HL
	POP	BC
	POP	DE
	INC	HL
	INC	DE
	DJNZ	J.43FD			; next setting
	LD	A,(D.64B9)
	LD	C,A			; option page
	LD	A,(D.63C9)
	CP	0F0H
	JR	NZ,J$4431
	LD	A,C
	AND	A			; option page 0 ?
	JR	Z,J.444C		; yep,
	LD	A,5
	LD	(D.63A8),A
	LD	HL,I.656C
	PUSH	HL
	CALL	C.5DC3			; display numeric setting
	POP	HL
	INC	HL
	LD	A,6
	JR	J$4446

J$4431:	LD	A,C
	CP	2
	JR	NZ,J.444C
	LD	A,3
	LD	(D.63A8),A
	LD	HL,I.6453		; timer #1 value
	PUSH	HL
	CALL	C.5DC3			; display numeric setting
	POP	HL
	INC	HL
	LD	A,4
J$4446:	LD	(D.63A8),A
	CALL	C.5DC3			; display numeric setting
J.444C:	XOR	A
	LD	(D.63A8),A
	JP	C.5DCA

I.4453:	DEFB	0
	DEFB	2
	DEFB	4
	DEFB	6
	DEFB	8
	DEFB	11
	DEFB	14

I.445A:	DEFB	10H
	DEFB	15H
	DEFB	1AH
	DEFB	1EH
	DEFB	21H
	DEFB	23H
	DEFB	25H

I.4461:	DEFB	27H
	DEFB	29H
	DEFB	2BH

I.4464:	DEFB	0
	DEFB	2
	DEFB	4
	DEFB	6
	DEFB	9
	DEFB	12
	DEFB	14

I.446B:	DEFB	13H
	DEFB	18H
	DEFB	1CH
	DEFB	1EH
	DEFB	20H

; option 4

J$4470:	LD	A,(D.63A9)
	CALL	C.5DD1
	CALL	C.5939
	LD	(D.63A9),A
	CALL	C.5DA7
	CALL	C.6000
	DEFB	7
	DEFW	C.40BD
	LD	A,(D.64B9)
	AND	A			; option page 0 ?
	JR	NZ,J$4498		; nope,
	LD	DE,D.6551
	LD	HL,I.44A9
	LD	B,6
	CALL	C.44B3
	JR	J$44A6

J$4498:	LD	DE,I$6558
	LD	HL,I$44B0
	LD	B,3
	CALL	C.44B3
	CALL	C$5915
J$44A6:	JP	C.5DCA

I.44A9:	DEFB	03H
	DEFB	06H
	DEFB	0AH
	DEFB	0CH
	DEFB	0EH
	DEFB	10H

	DEFB	12H

I$44B0:	DEFB	14H
	DEFB	23H
	DEFB	32H

C.44B3:	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	A,(DE)
	LD	B,(HL)
	ADD	A,B
	CALL	C.6000
	DEFB	7
	DEFW	C.4096
	POP	HL
	POP	BC
	POP	DE
	INC	HL
	INC	DE
	DJNZ	C.44B3
	RET

; option 5

J$44C7:	LD	DE,I.655B
	LD	HL,I.5C98
	LD	B,5
J$44CF:	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	A,(DE)
	LD	B,(HL)
	ADD	A,B
	CALL	C.6000
	DEFB	7
	DEFW	C.4099
	POP	HL
	POP	BC
	POP	DE
	INC	HL
	INC	DE
	DJNZ	J$44CF
	LD	A,05H	; 5 
	LD	(D.63AA),A
	CALL	C.5DCA
	CALL	C.4855
	CALL	C.5DA0
	JP	J$5BC4

; option 6

J$44F3:	LD	HL,I.652A
	LD	DE,I.643D
	CALL	C.5364
	CALL	C.5D99
	XOR	A
	LD	(D.63AB),A
	CALL	C.50BE
	LD	A,10
	LD	(D.63AC),A		; current column = 10
	LD	A,5
	LD	(D.63AD),A
	CALL	C.5DA0
	JP	J$5D58

;	  Subroutine option 1, F5
;	     Inputs  ________________________
;	     Outputs ________________________

C.4516:	CALL	C.4845
	CALL	NZ,C.4CBD
	CALL	C.4667			; no error ?
	CALL	NZ,C.465C		; nope,
	CALL	C.5D7B			; connect to phone
	CALL	C.4DCC
	CALL	KILBUF			; clear keyboard buffer
	XOR	A
	JP	J.45CC			; option = 0

J.452F:	XOR	A
	LD	(D.63C9),A
J$4533:	LD	A,2
	JP	J.45CC			; option = 2

;	  Subroutine option 1, F1
;	     Inputs  ________________________
;	     Outputs ________________________

C.4538:	CALL	C.4667			; no error ?
	JP	NZ,J.45D2		; nope,
	CALL	C.4840
	JP	Z,J.45D2
	LD	A,0FH
	JR	J.4554

;	  Subroutine option 6, F1
;	     Inputs  ________________________
;	     Outputs ________________________

C.4548:	LD	A,0F0H
	JR	J.4554

;	  Subroutine option 2, F1
;	     Inputs  ________________________
;	     Outputs ________________________

C.454C:	CALL	C.4667			; no error ?
	JP	NZ,J.45D2		; nope,
	LD	A,0FFH
J.4554:	LD	(D.63C9),A
	LD	A,3
	JP	J.45CC			; option = 3

;	  Subroutine option 0, F7
;	     Inputs  ________________________
;	     Outputs ________________________

C.455C:	CALL	C.4671
	JP	NZ,J.45D2
	LD	A,4
	JR	J.45CC			; option = 4

;	  Subroutine option 0, F1
;	     Inputs  ________________________
;	     Outputs ________________________

C.4566:	CALL	C.4671
	JP	NZ,J.45D2
	XOR	A
	LD	(D.63C9),A
	INC	A
	LD	(D.63CB),A
J$4574:	LD	A,1
	JR	J.45CC			; option = 1

;	  Subroutine option 0, F6
;	     Inputs  ________________________
;	     Outputs ________________________

C.4578:	CALL	C.4671
	JR	NZ,J.45D2
	LD	A,5
	JR	J.45CC			; option = 5

;	  Subroutine option 0, F5
;	     Inputs  ________________________
;	     Outputs ________________________

C.4581:	CALL	C.4667			; no error ?
	JP	NZ,J.45D2		; nope,
	CALL	C.4831
	JP	NZ,J.4882
	CALL	C.4836
	JP	NZ,J.4882
J$4593:	LD	A,6
	JR	J.45CC			; option = 6

;	  Subroutine option 6, F2
;	     Inputs  ________________________
;	     Outputs ________________________

C.4597:	LD	HL,I.652A
	LD	DE,I.643D
	CALL	C.5364
	CALL	C.5D99
	LD	HL,I.65E5
	LD	DE,I.65E5+1
	LD	(HL),20H	; " "
	LD	BC,I$0014
	LDIR
	CALL	C.6000
	DEFB	6
	DEFW	C.40ED
	LD	A,7
	JR	J.45CC			; option = 7

J$45BA:	LD	A,(D.646C)
	AND	A
	JR	Z,J$45C7
	LD	A,0FFH
	LD	(D.646C),A
	JR	J.45D2

J$45C7:	CALL	C$45E6			; restore function key definition
	LD	A,0FFH
J.45CC:	LD	(D.63A0),A		; update selected option
	LD	A,0FFH
	RET

J.45D2:	XOR	A
	RET

;	  Subroutine REMOTE application
;	     Inputs  ________________________
;	     Outputs ________________________

J$45D4:	CALL	C.4254
	CALL	C.4597			; option 6, F2
	CALL	C.6000
	DEFB	5
	DEFW	C.4090
	CALL	C.42D7			; handle option
	CALL	C$45ED

;	  Subroutine restore function key definition
;	     Inputs  ________________________
;	     Outputs ________________________

C$45E6:	CALL	C.6000
	DEFB	6
	DEFW	C.409F			; restore function key definition
	RET

;	  Subroutine set ? flag,
;	     Inputs  ________________________
;	     Outputs ________________________

C$45ED:	DEFB	3EH

;	  Subroutine reset ? flag,
;	     Inputs  ________________________
;	     Outputs ________________________

J$45EE:	XOR	A
	LD	(D$6370),A
	LD	HL,I.652F
	PUSH	HL
	LD	B,15H
	CALL	C.460F
	LD	HL,I.6545
	PUSH	HL
	LD	B,0AH	; 10 
	CALL	C.460F
	POP	DE
	POP	HL
	CALL	C.6000
	DEFB	3
	DEFW	C.40BD
	JP	J$4593			; option = 6

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.460F:	LD	E,B
	LD	D,0
	ADD	HL,DE
	INC	B
J$4614:	LD	A,(HL)
	CP	21H	; "!"
	RET	NC
	LD	(HL),00H
	DEC	HL
	DJNZ	J$4614
	RET

;	  Subroutine display string at location (with ? support)
;	     Inputs  HL = pointer to string, D = size, B = column, C = line
;	     Outputs ________________________

C.461E:	LD	A,B
	LD	(D$63C6),A		; update current column
	LD	A,C
	LD	(D$63C7),A		; update current line
J$4626:	LD	A,(HL)
	CALL	C.5DAE			; display character (with ? support)
	INC	HL
	DEC	D
	JR	NZ,J$4626
	RET

;	  Subroutine store current screen colors, vdp register 1
;	     Inputs  ________________________
;	     Outputs ________________________

C$462F:	LD	HL,FORCLR
	LD	DE,I.64B5
	LD	BC,3
	LDIR
	LD	A,(RG1SAV)
	LD	(D.64B8),A
	RET

;	  Subroutine restore current screen colors, vdp register 1
;	     Inputs  ________________________
;	     Outputs ________________________

C$4641:	LD	HL,I.64B5
	LD	DE,FORCLR
	LD	BC,3
	LDIR
	LD	A,(D.64B8)
	LD	(RG1SAV),A
	RET

;	  Subroutine to upper
;	     Inputs  ________________________
;	     Outputs ________________________

C.4653:	CP	"a"
	RET	C
	CP	"z"+1
	RET	NC
	SUB	20H
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.465C:	XOR	A

;	  Subroutine update error display
;	     Inputs  ________________________
;	     Outputs ________________________

C.465D:	LD	(D.6431),A		; update error code
	CALL	C.6000
	DEFB	7
	DEFW	C.4090			; update error display
	RET

;	  Subroutine no error ?
;	     Inputs  ________________________
;	     Outputs ________________________

C.4667:	LD	A,(D.6431)
	AND	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.466C:	LD	A,(D.6442)
	AND	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4671:	LD	A,(D.6431)
	AND	A			; no error ?
	RET	NZ			; nope, quit
	LD	A,(D.63CA)
	AND	A
	RET	NZ
	LD	A,(D.643C)
	AND	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4680:	LD	HL,I.63CD
	LD	E,D
	LD	D,0
	ADD	HL,DE
	LD	A,(HL)
	CP	0FFH
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.468B:	CALL	C.4836
	JR	Z,J$469B
	LD	HL,I.63CD
	LD	A,(D.63AE)
	LD	D,0
	LD	E,A
	ADD	HL,DE
	LD	A,(HL)
J$469B:	LD	(D.63AE),A
	CP	57H	; "W"
	JR	C,J$46AA
	SUB	57H	; "W"
	LD	(D.63A5),A
	XOR	A
	JR	J$46AE

J$46AA:	XOR	A
	LD	(D.63A5),A
J$46AE:	LD	(D.643C),A
	LD	(D.63CA),A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.46B5:	PUSH	AF
	LD	A,(D.63A0)		; selected option
	DEC	A
	JR	NZ,J.46C4
	CALL	C.4667			; no error ?
	JR	Z,J.46C4		; yep,
	CALL	C.465C
J.46C4:	POP	AF
	RET

;	  Subroutine 643A = 00H
;	     Inputs  ________________________
;	     Outputs ________________________

C.46C6:	XOR	A
	JR	J.46D3

;	  Subroutine 643A = 0FH
;	     Inputs  ________________________
;	     Outputs ________________________

C.46C9:	LD	A,0FH
	JR	J.46D3

;	  Subroutine 643A = 80H
;	     Inputs  ________________________
;	     Outputs ________________________

C.46CD:	LD	A,80H
	JR	J.46D3

;	  Subroutine 643A = 8FH
;	     Inputs  ________________________
;	     Outputs ________________________

C.46D1:	LD	A,8FH
J.46D3:	LD	(D$643A),A
	RET

J$46D7:	CALL	C.6000
	DEFB	6
	DEFW	C.40F3
	JP	NZ,J$475C
	CALL	C.4667			; no error ?
	JR	Z,J$4704		; yep,
	CALL	C.5D84			; counter #1, clear
J$46E8:	CALL	C.5DD8
	JR	Z,J$46FA
	CALL	C.5DDF
	CP	14H	; 20 
	JP	Z,C.4516
	CALL	C.46B5
	XOR	A
	RET

J$46FA:	CALL	C.5D8B			; counter #1, get number of seconds
	CP	40
	JR	C,J$46E8
	JP	J.4516

J$4704:	CALL	C.6000
	DEFB	6
	DEFW	C.40ED
	CALL	C.6000
	DEFB	0
	DEFW	C.4135
	CALL	C.5D84			; counter #1, clear
J.4713:	CALL	C.5DD8
	JR	Z,J$472B
	CALL	C.5DDF
	CP	14H	; 20 
	JR	Z,J.4743
	CP	17
	JP	Z,J$4749
	CP	19
	JP	Z,J$474F
	JR	J.4713

J$472B:	CALL	C.5D8B			; counter #1, get number of seconds
	CP	40
	JR	NC,J.4743
	CALL	C.6000
	DEFB	0
	DEFW	C.4096			; get carrier detect status
	JR	NC,J.4713
	CALL	C.6000
	DEFB	0
	DEFW	C.4138
	JP	J.4801

J.4743:	CALL	C.4755
	JP	C.4516

J$4749:	CALL	C.4755
	JP	C.4D03

J$474F:	CALL	C.4755
	JP	C.4DBD

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4755:	CALL	C.6000
	DEFB	0
	DEFW	C.413B
	RET

J$475C:	LD	A,(D$6443)		; protocol speed
	LD	D,2
	AND	A
	JR	Z,J$4766
	LD	D,3
J$4766:	CALL	C.6000
	DEFB	6
	DEFW	C.40ED
	CALL	C.6000
	DEFB	0
	DEFW	C.40A8			; initialize dial tone detect
	CALL	C.5D84			; counter #1, clear
J.4775:	CALL	C.5D8B			; counter #1, get number of seconds
	CP	40
	JR	NC,J.47C2
	CALL	C.6000
	DEFB	0
	DEFW	C.40ED			; get dial tone dectect flag
	CP	0FEH
	JR	NC,J$478C
	CP	03H	; 3 
	JR	NC,J.47B8
	JR	J$4797

J$478C:	CALL	C.5DB5			; finish dial tone detect
	CALL	C.6000
	DEFB	0
	DEFW	C.40EA			; dialtone ?? counter > 70 ?
	JR	NC,J.47BD
	CALL	C.5DD8
	JR	Z,J.4775
	CALL	C.5DDF
	CP	14H	; 20 
	JR	Z,J.47C2
	CP	11H	; 17 
	JR	Z,J$47B3
	CALL	C.46B5
	CP	19
	JR	NZ,J.4775
	LD	HL,C.4DBD
	JR	J.47C5

J$47B3:	LD	HL,C.4D03
	JR	J.47C5

J.47B8:	LD	HL,I$47D0
	JR	J.47C5

J.47BD:	LD	HL,J.4801
	JR	J.47C5

J.47C2:	LD	HL,C.4516
J.47C5:	PUSH	HL

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.47C6:	CALL	C.5DB5			; finish dial tone detect
	CALL	C.6000
	DEFB	0
	DEFW	C.4144			; disable dail tone handler
	RET

I$47D0:	LD	A,(D.64BA)
	CP	02H	; 2 
	JR	NC,J$47EB
	INC	A
	LD	(D.64BA),A
	CALL	C.5D7B			; connect to phone
	CALL	C.5D84			; counter #1, clear
J$47E1:	CALL	C.5D8B			; counter #1, get number of seconds
	CP	3
	JR	C,J$47E1
	JP	J$4D07

J$47EB:	LD	A,16H
	CALL	C.465D			; update error display
	XOR	A
	LD	(D.64BA),A
	INC	A
	LD	(D.63A0),A		; update selected option
	CALL	C.5D7B			; connect to phone
	JP	J.411C

J$47FE:	JP	J$46D7

J.4801:	LD	A,(D.6551)
	SUB	1
	SBC	A,A
	CALL	C.6000
	DEFB	0
	DEFW	C.4174			; MODEM.SPKCNT
	CALL	C.6000
	DEFB	6
	DEFW	C.40EA
	PUSH	AF
	CALL	C.42AD
	POP	AF
	CP	03H	; 3 
	JR	Z,J$481F
	JP	C.4516

J$481F:	XOR	A
	JP	J.4554

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4823:	CALL	C.4C4A			; wait ? ms
	LD	B,3CH	; "<"
J$4828:	CALL	C.5DE6			; get line status
	AND	03H	; 3 
	RET	NZ
	DJNZ	J$4828
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4831:	LD	A,(D.63CA)
	AND	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4836:	LD	A,(D.643C)
	AND	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.483B:	LD	A,(D.63C8)
	AND	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4840:	LD	A,(D.63CB)
	AND	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4845:	LD	A,(D.646D)
	AND	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.484A:	LD	A,9
	LD	(D.63AC),A		; current column = 9
	LD	A,5
	LD	(D.63AD),A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4855:	LD	A,15
	LD	(D.63AC),A		; current column = 15
	LD	(D.63AD),A
	RET

;	  Subroutine option 0, F2
;	     Inputs  ________________________
;	     Outputs ________________________

C.485E:	CALL	C.4671
	JR	NZ,J$489D
	INC	A
	LD	(D.63CA),A
	LD	A,(D.63A5)
	CALL	C.4A0E
	CALL	C.6000
	DEFB	5
	DEFW	C.40C0
	LD	A,10
	LD	(D.63AC),A		; current column = 10
	LD	A,8
	LD	(D.63AD),A
	CALL	C.5DA0
	JR	J$4897

J.4882:	LD	A,(D.63A5)
	CALL	C.4A0E
	CALL	C.5DA7
	CALL	C.468B
	CALL	C.6000
	DEFB	5
	DEFW	C.40C3
	CALL	C.42D7			; handle option
J$4897:	CALL	C.6000
	DEFB	7
	DEFW	C.40AE
J$489D:	XOR	A
	RET

;	  Subroutine option 0, F3
;	     Inputs  ________________________
;	     Outputs ________________________

C.489F:	CALL	C.4667			; no error ?
	JR	NZ,J.48AF		; nope,
	CALL	C.4831
	JR	NZ,J.48AF
	LD	(D.63C8),A
	JP	J.452F

J.48AF:	XOR	A
	RET

;	  Subroutine option 0, F4
;	     Inputs  ________________________
;	     Outputs ________________________

C.48B1:	CALL	C.4671
	JR	NZ,J$48D1
	LD	A,0FFH
	LD	(D.63C8),A
	CALL	C.6000
	DEFB	6
	DEFW	C.40E4			; phone book entry table full ?
	JR	NZ,C.48CE		; yep,
	CALL	C.6000
	DEFB	6
	DEFW	C.40E1			; get number of free data blocks
	LD	A,D
	OR	E			; free data blocks ?
	JP	NZ,J.452F		; yep,

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.48CE:	CALL	C.4FF4
J$48D1:	XOR	A
	RET

;	  Subroutine option 0, F9
;	     Inputs  ________________________
;	     Outputs ________________________

C.48D3:	CALL	C.4671
	JR	NZ,J.4931
	LD	A,(I.6900+99)
	INC	A			; phone book entry table full ?
	JR	NZ,J$48E5		; yep,
	LD	A,(D.63AE)
	CP	99
	JR	NZ,J$48EA
J$48E5:	CALL	C.48CE
	JR	J.4931

J$48EA:	LD	A,(D.63AE)
	LD	DE,D.65D0
	CALL	C.5F5C
	CALL	C.6000
	DEFB	5
	DEFW	C.40A2
	LD	A,(D.63AE)
	LD	C,A
	LD	A,(D.65D0)
	AND	A
	JR	NZ,J$4916
	LD	A,99
	SUB	C
	LD	C,A
	LD	B,0
	LD	HL,I.6900+99-1
	LD	DE,I.6900+99
	LDDR
	CALL	C.42D7			; handle option
	XOR	A
	RET

J$4916:	LD	A,0FFH
	LD	(D.63C8),A
	LD	A,C
	INC	A
	LD	(D.63AE),A
	CALL	C.4F89
	LD	A,(D.63AE)
	DEC	A
	LD	(D.63AE),A
	LD	A,(D.6431)
	AND	A			; no error ?
	CALL	Z,C.42D7		; yep, handle option
J.4931:	XOR	A
	RET

;	  Subroutine option 0, F10
;	     Inputs  ________________________
;	     Outputs ________________________

C.4933:	CALL	C.4671
	JR	NZ,J$493E
	LD	(D.646C),A
	JP	J$45BA

J$493E:	XOR	A
	RET

;	  Subroutine option 0, UP
;	     Inputs  ________________________
;	     Outputs ________________________

C.4940:	CALL	C.4667			; no error ?
	JP	NZ,J.49D9		; nope,
	CALL	C.4831
	JP	NZ,J.49D9
	LD	A,(D.63AE)
	AND	A
	JR	Z,J$4975
	DEC	A
	LD	(D.63AE),A
	LD	A,(D.63A5)
	AND	A
	JP	Z,J$496C
	CALL	C.4A0E
	LD	A,(D.63A5)
	DEC	A
	LD	(D.63A5),A
	CALL	C.4A09
	JR	J.49D9

J$496C:	XOR	A
	LD	(D.64A2),A
	CALL	C.4AA5
	JR	J.49D9

J$4975:	LD	A,(D.64A2)
	AND	A
	JR	NZ,J.49D6
	LD	A,0FFH
	LD	(D.64A2),A
	CALL	C.4AA5
	JR	J.49D6

;	  Subroutine option 0, DOWN
;	     Inputs  ________________________
;	     Outputs ________________________

C.4985:	CALL	C.4667			; no error ?
	JR	NZ,J.49D9		; nope,
	CALL	C.4831
	JR	NZ,J.49D9
	CALL	C.4836
	JR	Z,J$499D
	LD	A,(D.63AE)
	LD	HL,I$64A9
	CP	(HL)
	JR	NC,J.49C8
J$499D:	LD	A,(D.63AE)
	CP	99
	JR	NC,J.49C8
	INC	A
	LD	(D.63AE),A
	LD	A,(D.63A5)
	CP	12
	JP	Z,J$49BF
	CALL	C.4A0E
	LD	A,(D.63A5)
	INC	A
	LD	(D.63A5),A
	CALL	C.4A09
	JR	J.49D9

J$49BF:	XOR	A
	LD	(D.64A2),A
	CALL	C.4B1D
	JR	J.49D9

J.49C8:	LD	A,(D.64A2)
	AND	A
	JR	NZ,J.49D6
	LD	A,0FFH
	LD	(D.64A2),A
	CALL	C.4B1D
J.49D6:	CALL	BEEP
J.49D9:	XOR	A
	RET

;	  Subroutine option 0, LEFT
;	     Inputs  ________________________
;	     Outputs ________________________

C.49DB:	CALL	C.4667			; no error ?
	JR	NZ,J.4A07		; nope,
	CALL	C.4831
	JR	Z,J.4A07
	LD	A,(D.63AC)
	CP	10			; current column = 10 ?
	JR	Z,J.4A07		; yep,
	DEC	A
	JR	J$4A01

;	  Subroutine option 0, RIGHT
;	     Inputs  ________________________
;	     Outputs ________________________

C.49EF:	CALL	C.4667			; no error ?
	JR	NZ,J.4A07		; nope,
	CALL	C.4831
	JR	Z,J.4A07
	LD	A,(D.63AC)
	CP	25			; current column = 25 ?
	JR	Z,J.4A07		; yep,
	INC	A
J$4A01:	LD	(D.63AC),A
	CALL	C.5DA0
J.4A07:	XOR	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4A09:	PUSH	AF
	LD	A,1BH			; fore = black, back = light yellow
	JR	J$4A11

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4A0E:	PUSH	AF
	LD	A,1FH			; fore = black, back = white
J$4A11:	LD	(D.64A5),A
	LD	A,(D.63A0)		; selected option
	LD	DE,2000H+7*(32*8)+1*8
	AND	A			; option 0 ?
	JR	Z,J$4A20		; yep,
	LD	DE,2000H+4*(32*8)+1*8
J$4A20:	POP	AF
	LD	L,0
	LD	H,A
	ADD	HL,DE
	PUSH	HL
	LD	BC,14*8
	LD	A,(D.64A5)
	CALL	FILVRM
	POP	HL
	LD	DE,15*8
	ADD	HL,DE
	LD	BC,15*8
	LD	A,(D.64A5)
	JP	FILVRM

;	  Subroutine option 0, other
;	     Inputs  ________________________
;	     Outputs ________________________

C.4A3D:	CALL	C.46C6			; 643A = 00H
	LD	A,(D.63A4)
	LD	C,A
	CALL	C.4831
	JR	NZ,J$4A73
	CALL	C.4667			; no error ?
	JR	Z,J$4A54		; yep,
	CALL	C.465C
	JP	J.4AA3

J$4A54:	LD	A,C
	CP	1BH
	JR	NZ,J$4A68
	CALL	C.4836
	JP	NZ,J.4AA3
	LD	A,(D.63A5)
	CALL	C.4A0E
	JP	J.4882

J$4A68:	CP	0DH	; 13 
	JR	NZ,J.4AA3
	XOR	A
	LD	(D.63CB),A
	JP	J$4574

J$4A73:	LD	A,C
	CP	08H	; 8 
	JR	NZ,J$4A7D
	CALL	C.4BA5
	JR	J.4AA0

J$4A7D:	CP	0DH	; 13 
	JR	NZ,J$4A8A
	CALL	C.6000
	DEFB	5
	DEFW	C.40DB
	JP	J.4AA3

J$4A8A:	CP	20H	; " "
	JR	C,J.4AA3
	CALL	C.5DAE			; display character (with ? support)
	CALL	C.4BA5
	LD	A,(D.63AC)
	CP	26			; current column < 26 ?
	JR	C,J.4AA0		; yep,
	LD	A,25
	LD	(D.63AC),A
J.4AA0:	CALL	C.5DA0
J.4AA3:	XOR	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4AA5:	CALL	C.46C9			; 643A = 0FH
	LD	BC,I$0007
J$4AAB:	CALL	C.5D74
	LD	A,(D.63A5)
	LD	D,A
	LD	A,(D.63AE)
	SUB	D
	ADD	A,B
	LD	D,A
	CALL	C.4836
	JR	Z,J$4AC3
	CALL	C.4680
	JR	Z,J$4ACC
	LD	D,A
J$4AC3:	LD	A,D
	LD	DE,D.65D0
	PUSH	BC
	CALL	C.5FB8
	POP	BC
J$4ACC:	CALL	C.6000
	DEFB	5
	DEFW	C.40A5
	PUSH	BC
	LD	A,(D.65D0)
	AND	A
	JR	NZ,J$4ADD
	LD	A,20H
	JR	J.4AE8

J$4ADD:	LD	A,(D.65FC)
	AND	20H
	LD	A,84H
	JR	Z,J.4AE8
	LD	A,85H
J.4AE8:	LD	HL,I.65CF
	LD	(HL),A
	LD	D,14			; size = 14
	LD	B,1			; column = 1
	CALL	C.461E			; display string at location (with ? support)
	POP	BC
	CALL	C.6000
	DEFB	5
	DEFW	C.40A8
	PUSH	BC
	LD	D,15			; size = 15
	LD	B,16			; column = 16
	LD	HL,I.65E5
	CALL	C.461E			; display string at location (with ? support)
	POP	BC
	LD	A,(D.64A2)
	AND	A
	JR	NZ,J.4B14
	CALL	C.5DD8
	JR	Z,J.4B14
	JP	J.4B92

J.4B14:	INC	C
	INC	B
	LD	A,B
	CP	0DH	; 13 
	JP	C,J$4AAB
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4B1D:	CALL	C.46C9			; 643A = 0FH
	LD	BC,I$0013
J$4B23:	CALL	C.5D74
	LD	A,(D.63AE)
	ADD	A,B
	LD	D,A
	CALL	C.4836
	JR	Z,J$4B36
	CALL	C.4680
	JR	Z,J$4B3F
	LD	D,A
J$4B36:	LD	A,D
	LD	DE,D.65D0
	PUSH	BC
	CALL	C.5FB8
	POP	BC
J$4B3F:	CALL	C.6000
	DEFB	5
	DEFW	C.40A5
	PUSH	BC
	LD	A,(D.65D0)
	AND	A
	JR	NZ,J$4B50
	LD	A,20H	; " "
	JR	J.4B5B

J$4B50:	LD	A,(D.65FC)
	AND	20H	; " "
	LD	A,84H
	JR	Z,J.4B5B
	LD	A,85H
J.4B5B:	LD	HL,I.65CF
	LD	(HL),A
	LD	D,14
	LD	B,1			; column = 1
	CALL	C.461E			; display string at location (with ? support)
	POP	BC
	CALL	C.6000
	DEFB	5
	DEFW	C.40A8
	PUSH	BC
	LD	D,15
	LD	B,16			; column = 16
	LD	HL,I.65E5
	CALL	C.461E			; display string at location (with ? support)
	POP	BC
	LD	A,(D.64A2)
	AND	A
	JR	NZ,J.4B87
	CALL	C.5DD8
	JR	Z,J.4B87
	JP	J.4B92

.4B87:	DEC	C
	DEC	B
	LD	A,B
	NEG
	CP	0DH	; 13 
	JP	C,J$4B23
	RET

J.4B92:	LD	C,1EH
	LD	A,(D.63A5)
	AND	A
	JR	Z,J$4B9B
	INC	C
J$4B9B:	LD	B,40
	LD	HL,KEYBUF
J$4BA0:	LD	(HL),C
	INC	HL
	DJNZ	J$4BA0
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4BA5:	LD	HL,I.6560
	LD	A,(D.63AC)
	SUB	11
	LD	B,A
	LD	D,0
	LD	E,A
	ADD	HL,DE
	LD	A,(D.63A4)
	CP	7FH
	JR	Z,J.4BC0
	CP	08H	; 8 
	JR	Z,J.4BC0
	LD	(HL),A
	JR	J$4BE2

J.4BC0:	INC	HL
	LD	A,10H	; 16 
	SUB	B
	LD	C,A
	LD	B,00H
	LD	D,H
	LD	E,L
	DEC	DE
	LDIR
	LD	A,(D.63AC)
	CP	11
	JR	C,J$4BD7
	DEC	A
	LD	(D.63AC),A
J$4BD7:	LD	A,20H	; " "
	LD	(D$656F),A
	CALL	C.46C9			; 643A = 0FH
	CALL	C$4BE4
J$4BE2:	XOR	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$4BE4:	LD	HL,I.6560
	LD	D,16			; size = 16
	LD	BC,10*256+8		; column = 10, line = 8
	JP	C.461E			; display string at location (with ? support)

J$4BEF:	CALL	C.5D84			; counter #1, clear
	LD	D,0FFH
	CALL	C.6000
	DEFB	0
	DEFW	C.40A8			; initialize dial tone detect
J$4BFA:	CALL	C.5DE6			; get line status
	BIT	3,A
	JR	Z,J.4C3A
	CALL	C.6000
	DEFB	0
	DEFW	C.40ED			; get dial tone dectect flag
	CP	0FEH
	JR	NC,J$4C12
	CP	03H	; 3 
	JP	NC,J.47B8
	JR	J$4C15

J$4C12:	CALL	C.5DB5			; finish dial tone detect
J$4C15:	CALL	C.5DE6			; get line status
	BIT	7,A			; on hook ?
	JR	Z,J.4C2B		; nope,
	CALL	C.4C4A			; wait ? ms
	CALL	C.5DE6			; get line status
	BIT	7,A			; on hook ?
	JR	Z,J.4C2B		; nope,
	CALL	C.5D7B			; connect to phone
	JR	J$4C3F

J.4C2B:	AND	03H	; 3 
	JR	Z,J.4C3A
	CP	03H	; 3 
	JR	Z,J.4C3A
	LD	B,A
	LD	A,(D.64B4)
	CP	B
	JR	NZ,J$4C44
J.4C3A:	CALL	C.5DD8
	JR	Z,J$4BFA
J$4C3F:	CALL	C.47C6
	XOR	A
	RET

J$4C44:	CALL	C.47C6
	JP	J.411C

;	  Subroutine wait ? ms
;	     Inputs  ________________________
;	     Outputs ________________________

C.4C4A:	LD	BC,0
J$4C4D:	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,J$4C4D
	RET

;	  Subroutine option 1, other
;	     Inputs  ________________________
;	     Outputs ________________________

C.4C53:	CALL	C.4840
	JR	NZ,J$4C89
	CALL	C.46B5
	CALL	C.466C
	JP	NZ,J.4D5E
	LD	A,(D.63A4)
	CP	1BH
	JR	Z,J$4C7A
	CALL	C.4845
	JP	Z,J.4D5E
	LD	A,(D.63A4)
	CALL	C.6000
	DEFB	6
	DEFW	C.4093
	JP	J.4D5E

J$4C7A:	LD	A,(D.646D)
	INC	A
	AND	01H	; 1 
	LD	(D.646D),A
	CALL	C.4D68
	JP	J.4D5E

J$4C89:	CALL	C.4667			; no error ?
	JR	Z,J$4C94		; yep,
	CALL	C.46B5
	JP	J.4D5E

J$4C94:	CALL	C.4845
	JR	Z,J.4CAE
	CALL	C.466C
	JR	NZ,J.4CAE
	LD	A,(D.63A4)
	CP	1BH
	JR	Z,C.4CBD
	CALL	C.6000
	DEFB	6
	DEFW	C.4093
	JP	J.4D5E

J.4CAE:	CALL	C.46C6			; 643A = 00H
	CALL	C.466C
	JR	NZ,J.4CCC
	LD	A,(D.63A4)
	CP	1BH
	JR	NZ,J.4CCC

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4CBD:	LD	A,(D.646D)
	INC	A
	AND	01H	; 1 
	LD	(D.646D),A
	CALL	C.4D68
	JP	J.4D5E

J.4CCC:	LD	A,(D.63A4)
	CP	0DH	; 13 
	JR	Z,J$4CFD
	CP	08H	; 8 
	JR	NZ,J$4CDF
	CALL	C.6000
	DEFB	6
	DEFW	C.40C3
	JR	J.4CF8

J$4CDF:	CP	20H	; " "
	JR	C,J.4CF8
	CALL	C.5DAE			; display character (with ? support)
	CALL	C.6000
	DEFB	6
	DEFW	C.40C3
	LD	A,(D.63AC)
	CP	30
	JR	C,J.4CF8
	LD	A,29
	LD	(D.63AC),A
J.4CF8:	CALL	C.5DA0
	JR	J.4D5E

J$4CFD:	XOR	A
	LD	(D.64BA),A
	JR	J$4D23

;	  Subroutine option 1, F3
;	     Inputs  ________________________
;	     Outputs ________________________

C.4D03:	XOR	A
	LD	(D.64BA),A
J$4D07:	CALL	C.4667			; no error ?
	JR	Z,J$4D11		; yep,
	CALL	C.465C
	JR	J.4D5E

J$4D11:	CALL	C.4845
	JR	NZ,J.4D5E
	CALL	C.5D7B			; connect to phone
	CALL	C.5D84			; counter #1, clear
J$4D1C:	CALL	C.5D8B			; counter #1, get number of seconds
	CP	1
	JR	C,J$4D1C
J$4D23:	CALL	C.6000
	DEFB	6
	DEFW	C.40F3
	JR	Z,J.4D39
	CALL	C.5DE6			; get line status
	AND	03H	; 3 
	JR	Z,J.4D39
	LD	A,8
	CALL	C.465D			; update error display
	JR	J.4D5E

J.4D39:	XOR	A			; connect to modem
	CALL	C.5D7D			; MODEM.LINSEL
	CALL	C.4823
	JR	Z,J.4D5B
	CP	03H	; 3 
	JR	NC,J.4D5B
	LD	(D.64B4),A
	LD	(D.6373),A
	CALL	C.6000
	DEFB	6
	DEFW	C.40AE
	CALL	C.466C
	JP	Z,J$4BEF
	JP	J$47FE

J.4D5B:	CALL	C.4D60
J.4D5E:	XOR	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4D60:	CALL	C.5D7B			; connect to phone
	LD	A,9
	JP	C.465D			; update error display

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4D68:	LD	HL,I$4D96
	LD	B,0CH	; 12 
	AND	A
	JR	Z,J.4D81
J$4D70:	PUSH	HL
	PUSH	BC
	LD	A,(HL)
	CALL	C.6000
	DEFB	5
	DEFW	C.40C6
	POP	BC
	POP	HL
	INC	HL
	DJNZ	J$4D70
	JP	C.5DA7

J.4D81:	PUSH	HL
	PUSH	BC
	LD	A,(HL)
	CALL	C.6000
	DEFB	5
	DEFW	C.40C9
	POP	BC
	POP	HL
	INC	HL
	DJNZ	J.4D81
	CALL	C.4840
	RET	Z
	JP	C.5DA0

I$4D96:	LD	BC,I$0302
	INC	B
	DEC	B
	LD	B,07H	; 7 
	EX	AF,AF'
	ADD	HL,BC
	LD	HL,(D$2300)

;	  Subroutine option 1, F2
;	     Inputs  ________________________
;	     Outputs ________________________

C.4DA2:	CALL	C.4667			; no error ?
	JR	Z,J$4DAC		; yep,
	CALL	C.465C
	JR	J.4DBB

J$4DAC:	CALL	C.4845
	JR	NZ,J.4DBB
	LD	A,48H	; "H"
	LD	C,00H
	CALL	C.6000
	DEFB	0
	DEFW	C.417D			; MODEM.DIALCH
J.4DBB:	XOR	A
	RET

;	  Subroutine option 1, F4
;	     Inputs  ________________________
;	     Outputs ________________________

C.4DBD:	CALL	C.4667			; no error ?
	JR	Z,J$4DC7		; yep,
	CALL	C.465C
	JR	J.4DDB

J$4DC7:	CALL	C.4845
	JR	NZ,J.4DDB

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4DCC:	CALL	C.4667			; no error ?
	JR	NZ,J.4DDB		; nope, quit
	CALL	C.5D7B			; connect to phone
	CALL	C.5D84			; counter #1, clear
	XOR	A
	LD	(D$64A4),A
J.4DDB:	XOR	A
	RET

;	  Subroutine option 1, LEFT
;	     Inputs  ________________________
;	     Outputs ________________________

C.4DDD:	CALL	C.4845
	JR	NZ,J.4DF7
	CALL	C.4840
	JR	Z,J.4DF7
	LD	A,(D.63AC)
	DEC	A
	CP	9
	JR	NC,J$4DF1
	LD	A,9
J$4DF1:	LD	(D.63AC),A
	CALL	C.5DA0
J.4DF7:	XOR	A
	RET

;	  Subroutine option 1, RIGHT
;	     Inputs  ________________________
;	     Outputs ________________________

C.4DF9:	CALL	C.4845
	JR	NZ,J.4E13
	CALL	C.4840
	JR	Z,J.4E13
	LD	A,(D.63AC)
	INC	A
	CP	30
	JR	C,J$4E0D
	LD	A,29
J$4E0D:	LD	(D.63AC),A
	CALL	C.5DA0
J.4E13:	XOR	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$4E15:	CALL	C.46C9			; 643A = 0FH
	CALL	C.5D74
	LD	A,(D.63AE)
	LD	D,A
	CALL	C.4836
	JR	Z,J$4E2A
	CALL	C.4680
	JR	Z,J$4E31
	LD	D,A
J$4E2A:	LD	A,D
	LD	DE,D.65D0
	CALL	C.5F5C
J$4E31:	LD	HL,D.65D0
	LD	BC,9*256+5		; column = 9, line = 5
	LD	D,21			; size = 21
	CALL	C.461E			; display string at location (with ? support)
	LD	BC,9*256+7		; column = 9, line = 7
	LD	D,21			; size = 21
	JP	C.461E			; display string at location (with ? support)

;	  Subroutine option 2, other
;	     Inputs  ________________________
;	     Outputs ________________________

C.4E44:	CALL	C.4667			; no error ?
	JR	Z,J$4E7C		; yep,
	LD	A,(D.6431)
	CP	3			; error 3 ?
	JR	Z,J.4E75		; yep,
	LD	B,A
	LD	A,(D.63A4)
	CALL	C.4653			; to upper
	CP	"Y"
	JR	NZ,J$4E63
	LD	A,B
	CP	04H	; 4 
	JP	Z,J$506F
	JR	J$4E72

J$4E63:	CP	"N"
	JR	Z,J.4E75
	CP	"C"
	JP	NZ,J.4F11
	CALL	C.465C
	JP	J.4F11

J$4E72:	CALL	C.4F89
J.4E75:	XOR	A
	LD	(D.6431),A		; no error
	JP	J.45CC			; option = 0

J$4E7C:	CALL	C.46CD			; 643A = 80H
	LD	A,(D.63A4)
	CP	0DH	; 13 
	JP	NZ,J$4E93
	CALL	C$4F2C
	CALL	C.6000
	DEFB	6
	DEFW	C.40D8
	JP	J.4F0E

J$4E93:	CP	1BH
	JR	NZ,J.4EB3
	LD	A,(D.63A7)
	CP	02H	; 2 
	JR	C,J.4EB3
	LD	A,02H	; 2 
	CALL	C.50D0
	XOR	A
	LD	(D.63A7),A
	CALL	C.50BE
	LD	A,5
	LD	(D.63AD),A
	LD	A,09H	; 9 
	JR	J.4F0B

J.4EB3:	LD	A,(D.63A4)
	CP	08H	; 8 
	JR	NZ,J$4EC0
	CALL	C.5DBC
	JP	J.4F0E

J$4EC0:	CP	20H	; " "
	JR	C,J.4F11
	CALL	C.5DAE			; display character (with ? support)
	CALL	C.5DBC
	LD	A,(D.63AC)
	CP	30
	JR	C,J.4F0E
	LD	A,(D.63A7)
	CP	02H	; 2 
	JR	C,J.4F09
	CP	08H	; 8 
	JR	NC,J$4EE9
	INC	A
	LD	(D.63A7),A
	LD	A,(D.63AD)
	INC	A
	LD	(D.63AD),A
	JR	J$4F05

J$4EE9:	LD	A,(D.63CC)
	CP	14H	; 20 
	JR	NC,J$4EF6
	INC	A
	LD	(D.63CC),A
	JR	J$4EFB

J$4EF6:	CALL	BEEP
	JR	J.4F09

J$4EFB:	LD	A,3
	LD	(D.63AC),A
	CALL	C.5328
	JR	J.4F0E

J$4F05:	LD	A,03H	; 3 
	JR	J.4F0B

J.4F09:	LD	A,29
J.4F0B:	LD	(D.63AC),A
J.4F0E:	CALL	C.5DA0
J.4F11:	XOR	A
	RET

;	  Subroutine option 2, F5
;	     Inputs  ________________________
;	     Outputs ________________________

C.4F13:	CALL	C.4667			; no error ?
	JR	NZ,J$4F2A		; nope,
	LD	A,1
	CALL	C.465D			; update error display
	CALL	C.6000
	DEFB	6
	DEFW	C.40F9
	XOR	A
	LD	(D.63CC),A
	LD	(D$6455),A
J$4F2A:	XOR	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$4F2C:	CALL	C.5DAE			; display character (with ? support)
	CALL	C.5DBC
	LD	A,(D.63A7)
	AND	A
	JR	NZ,J$4F41
	LD	BC,I.0907
	CALL	C.50D0
	INC	A
	JR	J$4F76

J$4F41:	CP	08H	; 8 
	JR	C,J$4F5D
	LD	A,(D.63CC)
	CP	14H	; 20 
	JR	NC,J$4F52
	INC	A
	LD	(D.63CC),A
	JR	J$4F55

J$4F52:	CALL	BEEP
J$4F55:	LD	A,3
	LD	(D.63AC),A
	JP	C.5328

J$4F5D:	LD	B,03H	; 3 
	LD	A,(D.63A7)
	CP	01H	; 1 
	JR	NZ,J$4F6D
	CALL	C.50D0
	LD	C,0CH	; 12 
	JR	J$4F75

J$4F6D:	LD	A,(D.63AD)
	INC	A
	LD	C,A
	LD	A,(D.63A7)
J$4F75:	INC	A
J$4F76:	CP	03H	; 3 
	JR	NC,J$4F7D
	CALL	C.50BE
J$4F7D:	LD	(D.63A7),A
	LD	A,B
	LD	(D.63AC),A
	LD	A,C
	LD	(D.63AD),A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4F89:	CALL	C.483B
	JR	Z,J.4FAD
	LD	A,(I.6900+99)
	INC	A			; phone book entry table full ?
	JR	NZ,C.4FF4		; yep,
	LD	A,(D.63AE)
	LD	B,A
	LD	A,99
	SUB	B
	JR	Z,J.4FAD
	LD	B,A
	LD	HL,I.6900+99
	LD	DE,I.6900+99-1
J$4FA4:	LD	C,(HL)
	LD	A,(DE)
	LD	(HL),A
	LD	A,C
	LD	(DE),A
	DEC	HL
	DEC	DE
	DJNZ	J$4FA4
J.4FAD:	CALL	C.6000
	DEFB	6
	DEFW	C.40F6
	LD	A,(D.63AE)
	LD	D,A
	CALL	C.4836
	JR	Z,J$4FC2
	CALL	C.4680
	JR	Z,J.4FDC
	LD	D,A
J$4FC2:	CALL	C.6000
	DEFB	6
	DEFW	C.40E7
	JR	C,J.4FDC
	LD	A,D
	PUSH	DE
	LD	DE,D.65D0
	CALL	C$5E73
	POP	DE
	AND	A
	RET	Z
	LD	A,D
	LD	DE,D.65D0
	CALL	C.5E12			; free phone book entry
J.4FDC:	CALL	C.483B
	JR	Z,C.4FF4
	LD	A,(D.63AE)
	LD	B,0
	LD	C,A
	LD	HL,I.6900
	ADD	HL,BC
	LD	A,99
	SUB	C
	LD	C,A
	LD	D,H
	LD	E,L
	INC	HL
	LDIR

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4FF4:	LD	A,3
	CALL	C.465D			; update error display
	LD	B,3
J$4FFB:	PUSH	BC
	CALL	BEEP
	CALL	C$5006			; wait ? ms
	POP	BC
	DJNZ	J$4FFB
	RET

;	  Subroutine wait ? ms
;	     Inputs  ________________________
;	     Outputs ________________________

C$5006:	LD	BC,9000H
J$5009:	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,J$5009
	RET

?.500F:	LD	HL,I.65FA
	LD	BC,729
J$5015:	LD	A,(HL)
	CP	81H
	JR	NZ,J$501C
	LD	(HL),20H
J$501C:	INC	HL
	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,J$5015
	RET

;	  Subroutine option 2, F2
;	     Inputs  ________________________
;	     Outputs ________________________

C.5023:	CALL	C.4667			; no error ?
	JR	NZ,J$505C		; nope,
	CALL	C.6000
	DEFB	5
	DEFW	C.4099
	CALL	C.5D74
	CALL	C.484A
	LD	A,(D.63A7)
	CP	02H	; 2 
	JR	C,J$5040
	LD	A,02H	; 2 
	LD	(D.63A7),A
J$5040:	CALL	C.50D0
	XOR	A
	LD	(D.63A7),A
	LD	(D.63CC),A
	CALL	C.50BE
	CALL	C.5DA0
	CALL	C.6000
	DEFB	5
	DEFW	C.40DE
	CALL	C.6000
	DEFB	7
	DEFW	C.40AB
J$505C:	XOR	A
	RET

;	  Subroutine option 2, F3
;	     Inputs  ________________________
;	     Outputs ________________________

C.505E:	CALL	C.4667			; no error ?
	JR	NZ,J.506D		; nope,
	CALL	C.483B
	JR	NZ,J.506D
	LD	A,4
	CALL	C.465D			; update error display
J.506D:	XOR	A
	RET

J$506F:	LD	A,(D.63AE)
	LD	D,A
	CALL	C.4836
	JR	Z,J$507E
	CALL	C.4680
	JR	Z,J$5086
	LD	D,A
J$507E:	PUSH	DE
	LD	A,D
	LD	DE,D.65D0
	CALL	C.5E12			; free phone book entry
J$5086:	CALL	C.5D74
	POP	DE
	LD	A,99
	SUB	D
	JR	Z,J$50A3
	LD	B,A
	LD	HL,I.6900
	LD	E,D
	LD	D,0
	ADD	HL,DE
	LD	D,H
	LD	E,L
	INC	DE
J$509A:	LD	C,(HL)
	LD	A,(DE)
	LD	(HL),A
	LD	A,C
	LD	(DE),A
	INC	HL
	INC	DE
	DJNZ	J$509A
J$50A3:	CALL	C.4831
	JR	Z,J$50B4
	LD	A,(D.63AE)
	LD	HL,I.63CD
	LD	E,A
	LD	D,0
	ADD	HL,DE
	LD	(HL),0FFH
J$50B4:	XOR	A
	LD	(D.6431),A		; no error
	LD	(D.643C),A
	JP	C.4516

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.50BE:	PUSH	BC
	PUSH	AF
	PUSH	AF
	XOR	A
	LD	(D.64AA),A
	POP	AF
	LD	HL,D.64A5
	LD	(HL),1BH		; fore = black, back = light yellow
	INC	HL
	LD	(HL),1BH		; fore = black, back = light yellow
	JR	J$50E1

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.50D0:	PUSH	BC
	PUSH	AF
	PUSH	AF
	LD	A,1
	LD	(D.64AA),A
	POP	AF
	LD	HL,D.64A5
	LD	(HL),15H		; fore = black, back = light blue
	INC	HL
	LD	(HL),15H		; fore = black, back = light blue
J$50E1:	LD	DE,2000H+5*(32*8)+1*8
	CP	2
	JR	Z,J$514A
	ADD	A,A
	LD	L,0
	LD	H,A
	ADD	HL,DE
	PUSH	HL
	LD	BC,7*8
	LD	A,(D.63A0)		; selected option
	CP	6			; option 6 ?
	JR	NZ,J$50FB		; nope,
	LD	BC,8*8
J$50FB:	LD	A,(D.64A5)
	PUSH	AF
	PUSH	BC
	PUSH	HL
	CALL	FILVRM
	POP	HL
	POP	BC
	POP	AF
	LD	DE,-256
	ADD	HL,DE
	CALL	FILVRM
	POP	HL
	LD	DE,8*8
	LD	A,(D.63A0)		; selected option
	CP	6			; option 6 ?
	JR	NZ,J$511C		; nope,
	LD	DE,9*8
J$511C:	ADD	HL,DE
	LD	BC,22*8
	LD	A,(D.63A0)		; selected option
	CP	6			; option 6 ?
	JR	NZ,J$512A		; nope,
	LD	BC,21*8
J$512A:	PUSH	HL
	PUSH	BC
	LD	A,(D.64AA)
	AND	A
	JR	NZ,J$5137
	LD	A,(D.64A5)
	JR	J$5139

J$5137:	LD	A,1FH			; fore = black, back = white
J$5139:	PUSH	AF
	CALL	FILVRM
	POP	AF
	POP	BC
	POP	HL
	LD	DE,-256
	ADD	HL,DE
	CALL	FILVRM
	POP	AF
	POP	BC
	RET

J$514A:	LD	HL,2000H+9*(32*8)+2*8
	LD	BC,28*8
	LD	A,(D$64A6)
	PUSH	AF
	PUSH	BC
	PUSH	HL
	CALL	FILVRM
	POP	HL
	POP	BC
	POP	AF
	LD	DE,256
	ADD	HL,DE
	CALL	FILVRM
	POP	AF
	POP	BC
	RET

;	  Subroutine option 2, UP
;	     Inputs  ________________________
;	     Outputs ________________________

C.5166:	CALL	C.4667			; no error ?
	JR	NZ,J$51B5		; nope,
	LD	A,(D.63A7)
	AND	A
	JR	Z,J.51B2
	CP	02H	; 2 
	JR	Z,J$519F
	CP	03H	; 3 
	JR	NC,J$5192
	CALL	C.50D0
	DEC	A
	LD	(D.63A7),A
	CALL	C.50BE
	LD	A,9
	LD	(D.63AC),A
	LD	A,(D.63A7)
	LD	A,5
	LD	(D.63AD),A
	JR	J.51B2

J$5192:	DEC	A
	LD	(D.63A7),A
	LD	A,(D.63AD)
	DEC	A
	LD	(D.63AD),A
	JR	J.51B2

$519F:	LD	A,(D.63CC)
	AND	A
	JR	NZ,J$51AB
	CALL	BEEP
	XOR	A
	JR	J.51B2

J$51AB:	DEC	A
	LD	(D.63CC),A
	CALL	C.5328
J.51B2:	CALL	C.5DA0
J$51B5:	XOR	A
	RET

;	  Subroutine option 2, DOWN
;	     Inputs  ________________________
;	     Outputs ________________________

C.51B7:	CALL	C.4667			; no error ?
	JR	NZ,J$5212		; nope,
	LD	A,(D.63A7)
	CP	8
	JP	NC,J$51FC
	CP	2
	JR	NC,J$51EF
	CALL	C.50D0
	INC	A
	LD	(D.63A7),A
	CALL	C.50BE
	CP	02H	; 2 
	LD	A,9
	JR	NZ,J$51DA
	LD	A,3
J$51DA:	LD	(D.63AC),A
	LD	A,(D.63A7)
	CP	02H	; 2 
	JR	Z,J$51E8
	LD	A,07H	; 7 
	JR	J$51EA

J$51E8:	LD	A,12
J$51EA:	LD	(D.63AD),A
	JR	J.520F

J$51EF:	INC	A
	LD	(D.63A7),A
	LD	A,(D.63AD)
	INC	A
	LD	(D.63AD),A
	JR	J.520F

J$51FC:	LD	A,(D.63CC)
	INC	A
	CP	21
	JR	C,J$5209
	CALL	BEEP
	LD	A,20
J$5209:	LD	(D.63CC),A
	CALL	C.5328
J.520F:	CALL	C.5DA0
J$5212:	XOR	A
	RET

;	  Subroutine option 2, LEFT
;	     Inputs  ________________________
;	     Outputs ________________________

C.5214:	CALL	C.4667			; no error ?
	JP	NZ,J.52BD		; nope,
	LD	A,(D.63A7)
	CP	02H	; 2 
	JR	C,J$525E
	JR	NZ,J$5244
	LD	A,(D.63AC)
	DEC	A
	CP	3
	JP	NC,J.52B7
	LD	A,(D.63CC)
	AND	A
	JR	Z,J$523D
	DEC	A
	LD	(D.63CC),A
	CALL	C.5328
	LD	A,1DH
	JR	J.52B7

J$523D:	CALL	BEEP
	LD	A,03H	; 3 
	JR	J.52B7

J$5244:	LD	A,(D.63AC)
	DEC	A
	CP	3
	JR	NC,J.52B7
	LD	A,(D.63AD)
	DEC	A
	LD	(D.63AD),A
	LD	A,(D.63A7)
	DEC	A
	LD	(D.63A7),A
	LD	A,1DH
	JR	J.52B7

J$525E:	LD	A,(D.63AC)
	DEC	A
	CP	9
	JR	NC,J.52B7
	LD	A,9
	JR	J.52B7

;	  Subroutine option 2, RIGHT
;	     Inputs  ________________________
;	     Outputs ________________________

C.526A:	CALL	C.4667			; no error ?
	JR	NZ,J.52BD		; nope,
	LD	A,(D.63A7)
	CP	02H	; 2 
	JR	C,J$52AD
	LD	A,(D.63AC)
	INC	A
	CP	30
	JR	C,J.52B7
	LD	A,(D.63A7)
	INC	A
	CP	09H	; 9 
	JR	NC,J$528F
	LD	(D.63A7),A
	LD	A,(D.63AD)
	INC	A
	JR	J$52A6

J$528F:	LD	A,(D.63CC)
	CP	14H	; 20 
	JR	NC,J$529F
	INC	A
	LD	(D.63CC),A
	CALL	C.5328
	JR	J$52A4

J$529F:	CALL	BEEP
	JR	J.52BD

J$52A4:	LD	A,18
J$52A6:	LD	(D.63AD),A
	LD	A,03H	; 3 
	JR	J.52B7

J$52AD:	LD	A,(D.63AC)
	INC	A
	CP	30
	JR	C,J.52B7
	LD	A,29
J.52B7:	LD	(D.63AC),A
	CALL	C.5DA0
J.52BD:	XOR	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$52BF:	LD	A,(D.63C9)
	INC	A
	JR	Z,J$52EB
	CALL	C.5D74
	CALL	C.483B
	JR	NZ,J$52E8
	LD	A,(D.63AE)
	LD	D,A
	CALL	C.4836
	JR	Z,J$52DB
	CALL	C.4680
	RET	Z
	LD	D,A
J$52DB:	LD	A,D
	LD	DE,D.65D0
	CALL	C.5F5C
	CALL	C.6000
	DEFB	5
	DEFW	C.40A2
J$52E8:	CALL	C$5354
J$52EB:	CALL	C.5D99
	CALL	C.6000
	DEFB	6
	DEFW	C.40D8
	CALL	C.46D1			; 643A = 8FH
	LD	HL,D.65D0
	LD	C,5			; line = 5
	LD	E,01H	; 1 
J$52FE:	LD	B,9			; column = 9
	LD	D,21			; size = 21
	CALL	C.461E			; display string at location (with ? support)
	LD	A,E
	ADD	A,A
	ADD	A,E
	ADD	A,A
	ADD	A,01H	; 1 
	LD	C,A
	INC	E
	LD	A,E
	CP	03H	; 3 
	JR	C,J$52FE
	LD	C,12			; line = 12
	LD	E,1
J$5316:	LD	B,3			; column = 3
	LD	D,27			; size = 27
	CALL	C.461E			; display string at location (with ? support)
	LD	A,E
	ADD	A,0CH	; 12 
	LD	C,A
	INC	E
	LD	A,E
	CP	08H	; 8 
	JR	C,J$5316
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5328:	CALL	C.46D1			; 643A = 8FH
	LD	A,(D.63CC)
	CALL	C.6000
	DEFB	6
	DEFW	C.40DB
	LD	DE,I.65FA
	ADD	HL,DE
	LD	C,12			; line = 12
	LD	E,01H	; 1 
J$533C:	LD	B,3			; column = 3
	LD	D,27			; size = 27
	CALL	C.461E			; display string at location (with ? support)
	LD	A,E
	ADD	A,0CH	; 12 
	LD	C,A
	INC	E
	LD	A,E
	CP	08H	; 8 
	JR	C,J$533C
	CALL	C.6000
	DEFB	6
	DEFW	C.40D8
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$5354:	LD	A,(D.65D0)
	AND	A
	JR	Z,C.535E
	CALL	C.483B
	RET	Z

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.535E:	LD	DE,I.643D
	LD	HL,I$536A

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5364:	LD	BC,5
	LDIR
	RET

I$536A:	ADD	A,0E6H
	RET	PE
	DEFB	1
	DEFB	1

;	  Subroutine option 3, other
;	     Inputs  ________________________
;	     Outputs ________________________

C.536F:	XOR	A
	RET

;	  Subroutine option 3, F4 (next page)
;	     Inputs  ________________________
;	     Outputs ________________________

C.5371:	LD	B,2-1			; 2 pages
	LD	A,(D.63C9)
	CP	0F0H
	JR	Z,J.5386
	LD	B,3-1			; 3 pages
	JR	J.5386

;	  Subroutine option 4, F4 (next page)
;	     Inputs  ________________________
;	     Outputs ________________________

C.537E:	LD	A,2-1
	LD	B,A			; 2 option pages
	CALL	C.4667			; no error ?
	JR	NZ,J$5395		; nope,
J.5386:	LD	A,B
	LD	HL,D.64B9
	CP	(HL)			; last option page ?
	JR	NZ,J$5391		; nope, next option page
	XOR	A
	LD	(HL),A			; first option page
	JR	J$5392

J$5391:	INC	(HL)
J$5392:	CALL	C.42D7			; handle option
J$5395:	XOR	A
	RET

;	  Subroutine option 3, F5
;	     Inputs  ________________________
;	     Outputs ________________________

C.5397:	CALL	C.5D92
	LD	A,(D.63C9)
	AND	A
	JP	Z,J.4801
	CP	0FFH
	JP	Z,J$4533
	CP	0F0H
	JP	Z,C.4581
	JP	C.4566

;	  Subroutine option 3, UP
;	     Inputs  ________________________
;	     Outputs ________________________

C.53AE:	LD	A,(D.63A8)
	AND	A
	JR	NZ,J$53EF
	CALL	C.5DD1
	LD	A,(D.63C9)
	CP	0F0H
	JR	NZ,J$53CA
	LD	C,6
	LD	A,(D.64B9)
	AND	A			; option page 0 ?
	JR	NZ,J.53D6		; nope,
	LD	A,2
	JR	J.53D6

J$53CA:	LD	BC,3*256+6
	LD	A,(D.64B9)
	AND	A			; option page 0 ?
	JR	NZ,J.53D6		; nope,
	LD	A,B
	LD	C,4
J.53D6:	DEC	A
	LD	(D.64B9),A		; update option page
	LD	A,C
	PUSH	AF
	CALL	C.42D7			; handle option
	XOR	A
	LD	(D.63A8),A
	CALL	C.5DD1
	POP	AF
	LD	(D.63A8),A
	CALL	C.5DCA
	JR	J$53F9

J$53EF:	CALL	C.5DD1
	DEC	A
	LD	(D.63A8),A
	CALL	C.5DCA
J$53F9:	XOR	A
	RET

;	  Subroutine option 3, DOWN
;	     Inputs  ________________________
;	     Outputs ________________________

C.53FB:	LD	A,(D.63C9)
	CP	0F0H
	JR	NZ,J$5417
	LD	A,(D.63A8)
	LD	C,A
	CP	06H	; 6 
	JR	NZ,J.5440
	CALL	C.5DD1
	LD	A,(D.64B9)
	AND	A			; option page 0 ?
	JR	Z,J.5437		; yep,
	LD	A,0FFH
	JR	J.5437

J$5417:	LD	A,(D.63A8)
	LD	C,A
	LD	B,6
	LD	A,(D.64B9)
	CP	2			; option page 2 ?
	JR	NZ,J$5426		; nope,
	LD	B,4
J$5426:	LD	A,C
	CP	B
	JR	NZ,J.5440
	CALL	C.5DD1
	LD	B,0FFH
	LD	A,(D.64B9)
	CP	2			; option page 2 ?
	JR	NZ,J.5437		; nope,
	LD	A,B
J.5437:	INC	A
	LD	(D.64B9),A		; update option page
	CALL	C.42D7			; handle option
	JR	J$544A

J.5440:	CALL	C.5DD1
	INC	A
	LD	(D.63A8),A
	CALL	C.5DCA
J$544A:	XOR	A
	RET

;	  Subroutine option 3, LEFT
;	     Inputs  ________________________
;	     Outputs ________________________

C.544C:	LD	A,(D.63C9)
	LD	H,A
	LD	A,(D.63A8)
	LD	B,0
	LD	C,A
	LD	A,(D.64B9)
	AND	A			; option page 0 ?
	JR	NZ,J$546C		; nope,
	LD	DE,I.4453
	LD	A,H
	CP	0F0H
	JR	NZ,J$5467
	LD	DE,I.4464
J$5467:	CALL	C.54CA			; decrease setting value (with warp around)
	JR	J.54A4

J$546C:	DEC	A
	JR	NZ,J$5492
	LD	A,H
	CP	0F0H
	JR	NZ,J$547C
	LD	HL,I.656C
	LD	A,C
	CP	05H	; 5 
	JR	NC,J.54B7
J$547C:	LD	A,07H	; 7 
	ADD	A,C
	LD	C,A
	LD	DE,I.445A
	LD	A,(D.63C9)
	CP	0F0H
	JR	NZ,J$548D
	LD	DE,I.446B
J$548D:	CALL	C.54CA			; decrease setting value (with warp around)
	JR	J.54A4

J$5492:	LD	HL,I.6453		; timer #1 value
	LD	A,C
	CP	03H	; 3 
	JR	NC,J.54B7
	LD	DE,I.4461
	LD	A,0EH	; 14 
	ADD	A,C
	LD	C,A
	CALL	C.54CA			; decrease setting value (with warp around)
J.54A4:	LD	(HL),A
	EX	DE,HL
	LD	BC,(D.63A8)
	LD	B,0
	ADD	HL,BC
	LD	B,(HL)
	ADD	A,B
	CALL	C.6000
	DEFB	7
	DEFW	C.4093
	JR	J$54C5

J.54B7:	JR	Z,J$54BA
	INC	HL
J$54BA:	LD	A,(HL)
	LD	B,A
	AND	A
	JR	NZ,J$54C1
	LD	B,0B5H
J$54C1:	DEC	B
	JP	J$556F

J$54C5:	CALL	C.5D92
	XOR	A
	RET

;	  Subroutine decrease setting value (with warp around)
;	     Inputs  ________________________
;	     Outputs ________________________

C.54CA:	LD	IX,I.5595
	LD	HL,D.6442
	LD	A,(D.63C9)
	CP	0F0H
	JR	NZ,J$54DF
	LD	IX,I.55A6
	LD	HL,I.6560
J$54DF:	ADD	HL,BC
	ADD	IX,BC
	LD	A,(HL)
	AND	A			; value 0 ?
	JR	Z,J$54E8		; yep, value = max
	DEC	A
	RET

J$54E8:	LD	A,(IX+0)
	RET

;	  Subroutine option 3, RIGHT
;	     Inputs  ________________________
;	     Outputs ________________________

C.54EC:	LD	A,(D.63A8)
	LD	B,0
	LD	C,A
	LD	A,(D.64B9)
	AND	A			; option page 0 ?
	JR	NZ,J$550D		; nope,
	LD	DE,I.4453
	LD	A,(D.63C9)
	CP	0F0H
	JR	NZ,J$5505
	LD	DE,I.4464
J$5505:	CALL	C.5578			; check setting value
	JR	NZ,J.554F		; max not reached, increase
	XOR	A
	JR	J.5550

J$550D:	DEC	A
	JR	NZ,J$5538
	LD	DE,I.445A
	LD	A,(D.63C9)
	CP	0F0H
	JR	NZ,J$5522
	LD	HL,I.656C
	LD	A,C
	CP	5
	JR	NC,J.5563		; increase timer value
J$5522:	LD	A,7
	ADD	A,C
	LD	C,A
	LD	A,(D.63C9)
	CP	0F0H
	JR	NZ,J$5530
	LD	DE,I.446B
J$5530:	CALL	C.5578			; check setting value
	JR	NZ,J.554F		; max not reached, increase
	XOR	A
	JR	J.5550

J$5538:	LD	HL,I.6453		; timer #1 value
	LD	A,C
	CP	3
	JR	NC,J.5563		; increase timer value
	LD	A,14
	ADD	A,C
	LD	C,A
	LD	DE,I.4461
	CALL	C.5578			; check setting value
	JR	NZ,J.554F		; max not reached, increase
	XOR	A
	JR	J.5550

J.554F:	INC	A
J.5550:	LD	(HL),A
	EX	DE,HL
	LD	BC,(D.63A8)
	LD	B,0
	ADD	HL,BC
	LD	B,(HL)
	ADD	A,B
	CALL	C.6000
	DEFB	7
	DEFW	C.4093
	JR	J$5573

J.5563:	JR	Z,J$5566
	INC	HL
J$5566:	LD	A,(HL)
	LD	B,A
	CP	180
	JR	NZ,J$556E
	LD	B,-1
J$556E:	INC	B
J$556F:	LD	(HL),B
	CALL	C.5DC3			; display numeric setting
J$5573:	CALL	C.5D92
	XOR	A
	RET

;	  Subroutine check setting value
;	     Inputs  ________________________
;	     Outputs ________________________

C.5578:	LD	HL,D.6442
	LD	IX,I.5595
	LD	A,(D.63C9)
	CP	0F0H
	JR	NZ,J$558D
	LD	HL,I.6560
	LD	IX,I.55A6
J$558D:	ADD	IX,BC
	ADD	HL,BC
	LD	A,(HL)
	CP	(IX+0)
	RET

; max value table

I.5595:	DEFB	1
	DEFB	1			; protocol speed
	DEFB	1			; data bits
	DEFB	1			; SI/SO
	DEFB	2			; stop bits
	DEFB	2			; parity
	DEFB	1			; XON/XOFF
	DEFB	3			; code page
	DEFB	4			; character mode
	DEFB	3			; screen mode
	DEFB	2			; protocol mode
	DEFB	1			; auto LF on receive
	DEFB	1			; auto LF on send
	DEFB	1			; auto CR on receive
	DEFB	1
	DEFB	1			; duplex mode
	DEFB	1			; DEL mode

; max value table

I.55A6:	DEFB	1			; protocol speed
	DEFB	1			; data bits
	DEFB	1			; SI/SO
	DEFB	2			; stop bits
	DEFB	2			; parity
	DEFB	1			; XON/XOFF
	DEFB	3			; code page
	DEFB	4			; character mode
	DEFB	3			; screen mode
	DEFB	1			; auto LF on receive
	DEFB	1			; auto LF on send
	DEFB	1			; auto CR on receive

;	  Subroutine option 4, F1
;	     Inputs  ________________________
;	     Outputs ________________________

C.55B2:	CALL	C.4667			; no error ?
	JR	NZ,J.5600		; nope,
	LD	A,(D.64B9)
	AND	A			; option page 0 ?
	JR	Z,J.5600		; yep,
	LD	A,(D.648B)
	AND	A
	JR	NZ,J$55CF
	LD	A,7
	CALL	C.465D			; update error display
	LD	A,01H	; 1 
	LD	(D.648B),A
	JR	J.5600

J$55CF:	XOR	A
	LD	(D.648B),A
	CALL	C.56AB
	LD	HL,I.6588
	LD	BC,I.6900
	LD	DE,I.7C25
	CALL	C.6000
	DEFB	0
	DEFW	C.40C6			; load phone book data from file
	JP	C,J.5ACA
	LD	(D.6523),HL
	LD	B,H
	LD	C,L
	LD	HL,I.7C25
	SBC	HL,BC
	JR	Z,J$55FD
	INC	BC
J$55F5:	XOR	A
	LD	(BC),A
	INC	BC
	DEC	HL
	LD	A,H
	OR	L
	JR	NZ,J$55F5
J$55FD:	CALL	BEEP
J.5600:	XOR	A
	RET

;	  Subroutine option 4, F2
;	     Inputs  ________________________
;	     Outputs ________________________

C.5602:	CALL	C.4667			; no error ?
	JR	NZ,J.563C		; nope,
	LD	A,(D.64B9)
	AND	A			; option page 0 ?
	JR	Z,J.563C		; yep,
	LD	A,(D.648C)
	AND	A
	JR	NZ,J$561F
	LD	A,6
	CALL	C.465D			; update error display
	LD	A,01H	; 1 
	LD	(D.648C),A
	JR	J.563C

J$561F:	XOR	A
	LD	(D.648C),A
J$5623:	CALL	C.56AB
	LD	HL,I.6588
	LD	BC,I.6900
	LD	DE,(D.6523)
	CALL	C.6000
	DEFB	0
	DEFW	C.40C3			; save phone book data to file
	JP	C,J.5ACA
	CALL	BEEP
J.563C:	XOR	A
	RET

;	  Subroutine option 4, F3 (initialize)
;	     Inputs  ________________________
;	     Outputs ________________________

C.563E:	CALL	C.4667			; no error ?
	JR	NZ,J.5662		; nope,
	LD	A,(D.648A)
	AND	A
	JR	NZ,J$5655
	LD	A,5
	CALL	C.465D			; update error display
	LD	A,1
	LD	(D.648A),A
	JR	J.5662

J$5655:	CALL	C.6000
	DEFB	6
	DEFW	C.40DE			; initialize SRAM
	XOR	A
	LD	(D.648A),A
	CALL	C.42D7			; handle option
J.5662:	XOR	A
	RET

;	  Subroutine option 4, F5
;	     Inputs  ________________________
;	     Outputs ________________________

C.5664:	CALL	C.4667			; no error ?
	CALL	NZ,C.465C		; nope,
	CALL	C.5672
	JP	C.4516

?.5670:	XOR	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5672:	LD	HL,I$6550
	LD	A,(HL)
	CP	2
	JR	Z,J$5682
	LD	B,1
	AND	A
	JR	Z,J$5681
	LD	B,0
J$5681:	LD	A,B
J$5682:	LD	(D$7EFF),A
	INC	HL
	LD	A,(HL)
	CP	02H	; 2 
	JR	Z,J.5692
	LD	B,1
	AND	A
	JR	Z,J.5692
	LD	B,0
J.5692:	LD	A,B
	CALL	C.5939
	LD	HL,I$6553
	LD	DE,I$7EF9
	LD	BC,3
	LDIR
	LD	A,(D$6556)
	CALL	C.6000
	DEFB	0
	DEFW	C.4132
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.56AB:	LD	C,A
	LD	HL,I$6597
	LD	B,0FH	; 15 
	JR	J.56B9

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$56B3:	LD	C,A
	LD	HL,I$65CA
	LD	B,0FH	; 15 
J.56B9:	LD	A,(HL)
	CP	21H	; "!"
	JR	NC,J$56C4
	LD	(HL),00H
	DEC	HL
	DJNZ	J.56B9
	SCF
J$56C4:	LD	A,C
	RET

;	  Subroutine option 4, UP
;	     Inputs  ________________________
;	     Outputs ________________________

C.56C6:	CALL	C.4667			; no error ?
	JR	NZ,J.5743		; nope,
	LD	A,(D.63A9)
	LD	B,A
	LD	A,(D.64B9)
	AND	A			; option page 0 ?
	JR	NZ,J$5704		; nope,
	LD	A,B
	AND	A
	JR	NZ,J$56F8
	CALL	C.5DD1
	LD	A,1
	LD	(D.64B9),A		; option page = 1
	CALL	C.42D7			; handle option
	XOR	A
	CALL	C.5DD1
	LD	A,05H	; 5 
	LD	(D.63A9),A
	CALL	C.5DCA
	CALL	C.4855
	CALL	C.5DA0
	JR	J.5743

J$56F8:	CALL	C.5DD1
	DEC	A
	LD	(D.63A9),A
	CALL	C.5DCA
	JR	J.5743

J$5704:	LD	A,B
	AND	A
	JR	NZ,J$5720
	XOR	A
	LD	(D.64B9),A		; option page = 0
	CALL	C.42D7			; handle option
	XOR	A
	LD	(D.63A9),A
	CALL	C.5DD1
	LD	A,05H	; 5 
	LD	(D.63A9),A
	CALL	C.5DCA
	JR	J.5743

J$5720:	CALL	C.5DD1
	DEC	A
	LD	(D.63A9),A
	CALL	C.5DCA
	CP	03H	; 3 
	JR	NC,J$5733
	CALL	C.5DA7
	JR	J.5743

J$5733:	LD	A,15
	LD	(D.63AC),A
	LD	A,(D.63AD)
	SUB	2
	LD	(D.63AD),A
	CALL	C.5DA0
J.5743:	XOR	A
	RET

;	  Subroutine option 4, DOWN
;	     Inputs  ________________________
;	     Outputs ________________________

C.5745:	CALL	C.4667			; no error ?
	JR	NZ,J.57A7		; nope,
	LD	A,(D.63A9)
	LD	B,A
	LD	A,(D.64B9)
	AND	A			; option page 0 ?
	JR	NZ,J$5772		; nope,
	LD	A,B
	CP	05H	; 5 
	JR	NZ,J$5766
	CALL	C.5DD1
	LD	A,1
	LD	(D.64B9),A		; option page = 1
	CALL	C.42D7			; handle option
	JR	J.57A7

J$5766:	CALL	C.5DD1
	INC	A
	LD	(D.63A9),A
	CALL	C.5DCA
	JR	J.57A7

J$5772:	LD	A,B
	CP	05H	; 5 
	JR	NZ,J$5783
	CALL	C.5DD1
	XOR	A
	LD	(D.64B9),A		; option page = 0
	CALL	C.42D7			; handle option
	JR	J.57A7

J$5783:	CALL	C.5DD1
	INC	A
	LD	(D.63A9),A
	CALL	C.5DCA
	CP	03H	; 3 
	JR	C,J.57A7
	JR	NZ,J$5797
	LD	A,0BH	; 11 
	JR	J$579C

J$5797:	LD	A,(D.63AD)
	ADD	A,2
J$579C:	LD	(D.63AD),A
	LD	A,15
	LD	(D.63AC),A
	CALL	C.5DA0
J.57A7:	XOR	A
	RET

;	  Subroutine option 4, LEFT
;	     Inputs  ________________________
;	     Outputs ________________________

C.57A9:	CALL	C.4667			; no error ?
	JR	NZ,J.57EC		; nope,
	LD	A,(D.63A9)
	LD	C,A
	LD	A,(D.64B9)
	AND	A			; option page 0 ?
	JR	Z,J.57D2		; yep,
	LD	A,07H	; 7 
	ADD	A,C
	LD	B,A
	LD	A,C
	LD	C,B
	CP	03H	; 3 
	JR	C,J.57D2
	LD	A,(D.63AC)
	CP	15
	JR	Z,J.57EC
	DEC	A
	LD	(D.63AC),A
	CALL	C.5DA0
	JR	J.57EC

J.57D2:	LD	B,0
	LD	HL,D.6551
	ADD	HL,BC
	LD	A,(HL)
	AND	A
	JR	NZ,J$57E4
	PUSH	HL
	LD	HL,I.583B
	ADD	HL,BC
	LD	A,(HL)
	POP	HL
	INC	A
J$57E4:	DEC	A
	LD	(HL),A
	CALL	C.5845
	CALL	C.5672
J.57EC:	JR	J.5839

;	  Subroutine option 4, RIGHT
;	     Inputs  ________________________
;	     Outputs ________________________

C.57EE:	CALL	C.4667			; no error ?
	JR	NZ,J.5839		; nope,
	LD	A,(D.63A9)
	LD	C,A
	LD	A,(D.64B9)
	AND	A			; option page 0 ?
	JR	Z,J.581E		; yep,
	LD	A,07H	; 7 
	ADD	A,C
	LD	B,A
	LD	A,C
	LD	C,B
	CP	03H	; 3 
	JR	C,J.581E
	CP	05H	; 5 
	LD	B,1EH
	JR	Z,J$580F
	LD	B,16H
J$580F:	LD	A,(D.63AC)
	CP	B
	JR	Z,J.5839
	INC	A
	LD	(D.63AC),A
	CALL	C.5DA0
	JR	J.5839

J.581E:	LD	B,00H
	LD	HL,D.6551
	ADD	HL,BC
	LD	A,(HL)
	PUSH	HL
	LD	HL,I.583B
	ADD	HL,BC
	LD	B,(HL)
	POP	HL
	CP	B
	JR	C,J$5831
	LD	A,0FFH
J$5831:	INC	A
	LD	(HL),A
	CALL	C.5845
	CALL	C.5672
J.5839:	XOR	A
	RET

I.583B:	LD	(BC),A
	INC	BC
	LD	BC,I.0101
	LD	BC,I$0E01
	LD	C,0EH	; 14 

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5845:	LD	B,A
	LD	A,(D.63A9)
	LD	C,A
	LD	A,(D.64B9)
	AND	A			; option page 0 ?
	JR	Z,J$5854		; yep,
	LD	A,07H	; 7 
	ADD	A,C
	LD	C,A
J$5854:	LD	D,00H
	LD	E,C
	LD	HL,I.44A9
	ADD	HL,DE
	LD	A,(HL)
	ADD	A,B
	CALL	C.6000
	DEFB	7
	DEFW	C.4096
	RET

;	  Subroutine option 4, other
;	     Inputs  ________________________
;	     Outputs ________________________

C.5864:	CALL	C.46C6			; 643A = 00H
	CALL	C.4667			; no error ?
	JP	Z,J$58C4		; yep,
	LD	A,(D.6431)
	CP	8			; error >= 8 ?
	JR	NC,J.58BF		; yep,
	LD	A,(D.63A4)
	CALL	C.4653			; to upper
	CP	"N"
	JR	Z,J$58B0
	CP	"Y"
	JP	NZ,J.5913
	LD	A,(D.6431)
	CP	6			; error 6 ?
	JR	NZ,J$5890		; nope,
	CALL	C.465C
	JP	C.5602

J$5890:	CP	2			; error 2 ?
	JR	NZ,J$589C		; nope,
	CALL	C.465C
	LD	A,01H	; 1 
	JP	J$5623

J$589C:	CP	7			; error 7 ?
	JR	NZ,J$58A6		; nope,
	CALL	C.465C
	JP	C.55B2

J$58A6:	CP	5			; error 5 ?
	JR	NZ,J.58BF		; nope,
	CALL	C.465C
	JP	C.563E

J$58B0:	LD	A,01H	; 1 
	LD	(D.64A2),A
	LD	A,(D.6431)
	CP	8			; error >= 8 ?
	JR	NC,J.58BF		; yep,
	CALL	C.5939
J.58BF:	CALL	C.465C
	JR	J.5913

J$58C4:	LD	A,(D.64B9)
	AND	A			; option page 0 ?
	JP	Z,J.5913		; yep,
	LD	A,(D.63A9)
	CP	03H	; 3 
	JP	C,J.5913
	LD	A,(D.63A4)
	CP	0DH	; 13 
	JR	Z,J.5913
	CP	08H	; 8 
	JR	NZ,J$58ED
	LD	A,(D.63AC)
	CP	15
	JR	Z,J.5913
	CALL	C.6000
	DEFB	6
	DEFW	C.40C0
	JR	J.5910

J$58ED:	CP	20H	; " "
	JR	C,J.5913
	CALL	C.5DAE			; display character (with ? support)
	CALL	C.6000
	DEFB	6
	DEFW	C.40C0
	LD	B,17H
	LD	A,(D.63A9)
	CP	05H	; 5 
	JR	C,J$5905
	LD	B,1FH
J$5905:	LD	A,(D.63AC)
	CP	B
	JR	C,J.5910
	DEC	B
	LD	A,B
	LD	(D.63AC),A
J.5910:	CALL	C.5DA0
J.5913:	XOR	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$5915:	CALL	C.46C9			; 643A = 0FH
	LD	HL,I$6578
	LD	BC,15*256+11		; column = 15, line = 11
	LD	D,8			; size = 8
	CALL	C.461E			; display string at location (with ? support)
	LD	HL,I$6580
	LD	BC,15*256+13		; column = 15, line = 13
	LD	D,8			; size = 8
	CALL	C.461E			; display string at location (with ? support)
	LD	HL,I.6588
	LD	BC,15*256+15		; column = 15, line = 15
	LD	D,16			; size = 16
	JP	C.461E			; display string at location (with ? support)

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5939:	XOR	A
	LD	(D.648A),A
	LD	(D.648C),A
	LD	(D.648B),A
	RET

;	  Subroutine option 5/6, F5
;	     Inputs  ________________________
;	     Outputs ________________________

C.5944:	CALL	C.4667			; no error ?
	CALL	NZ,C.465C		; nope,
	JP	C.4516

I$594D:	DEC	DE
	LD	E,E
	LD	A,35H	; "5"
	LD	L,B
	NOP

I$5953:	DEC	DE
	LD	E,E
	LD	A,35H	; "5"
	LD	L,H
	NOP

I$5959:	DEC	DE
	LD	E,E
	LD	A,31H	; "1"
	LD	L,B
	NOP

I$595F:	LD	B,L
	LD	L,(HL)
	LD	H,H
	JR	NZ,J$59D3
	LD	H,(HL)
	JR	NZ,J$59CD
	LD	L,C
	LD	L,H
	LD	H,L
	LD	L,20H	; " "
I$596C:	LD	C,B
	LD	L,C
	LD	(HL),H
	JR	NZ,J$59D2
	LD	L,(HL)
	LD	A,C
	JR	NZ,J$59E0
	LD	H,L
	LD	A,C
	NOP
	DEC	L
	DEC	L
	JR	NZ,J.59C9
	LD	C,A
	LD	D,D
	LD	B,L
	JR	NZ,J$59AE
	DEC	L
	JR	NZ,J$59AC
	JR	NZ,J.59C9
	LD	D,D
	CPL
	LD	D,E
	LD	D,B
	CPL
	LD	D,C
	JR	NZ,J$59B7
	NOP
I$598F:	LD	B,L
	LD	A,B
	LD	L,C
	LD	(HL),H
	JR	NZ,J$59E4
	LD	C,E
	JR	NZ,J$59D7
	JR	NZ,J$59F3
	CPL
	LD	C,(HL)
	NOP

J$599D:	CALL	C.4667			; no error ?
	JP	NZ,J.5B27		; nope,
	CALL	C$56B3
	CALL	C.6000
	DEFB	1
	DEFW	C.40E4
J$59AC:	LD	A,0FFH
J$59AE:	LD	(D.6372),A
	CALL	C$59CA
	PUSH	AF
	XOR	A
	LD	(D.7EE9),A		; printer output disabled
	LD	(D.6372),A
	LD	(LPTPOS),A
	CALL	C.6000
	DEFB	1
	DEFW	C.40E7
	POP	AF
	RET	Z
	JP	C.40F2

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$59CA:	LD	A,(CNSDFG)
J$59CD:	LD	(D.64AC),A
	LD	HL,I.65BB
J$59D3:	CALL	C.6000
	DEFB	3
	DEFW	C.40C9
	JR	NC,J$59E8
	LD	A,(D.6372)
	OR	A
	JP	NZ,J.5ACA
	CALL	C.5AD9
	JP	J.5B04

J$59E8:	LD	A,(D.6372)
	OR	A
	JR	NZ,J$5A00
	LD	HL,I$596C
	CALL	C.5B47
	CALL	C.5B38
	CALL	C.5DDF
	CALL	KILBUF			; clear keyboard buffer
	JP	J.5B04

J$5A00:	CALL	C.5A7A
	CALL	C.6000
	DEFB	6
	DEFW	C.4096
	LD	A,(D.655D)
	LD	(D.7EE9),A		; update printer output flag
J.5A0F:	LD	HL,INTFLG
	LD	A,(HL)
	AND	A			; STOP or CTRL-STOP pressed ?
	JR	Z,J.5A4A		; nope,
	LD	(HL),0			; reset STOP status
	CP	3			; CTRL-STOP ?
	JR	Z,J.5A2F		; yep,
	CALL	C.5B38
J$5A1F:	EI
	LD	A,(HL)
	AND	A			; STOP or CTRL-STOP pressed ?
	JR	Z,J$5A1F		; nope, wait
	LD	(HL),0			; reset STOP status
	CP	3			; CTRL-STOP ?
	JR	Z,J.5A2F		; yep,
	CALL	C.5B41
	JR	J.5A4A

J.5A2F:	LD	HL,I$598F
	CALL	C.5B47
	CALL	C.5B38
J$5A38:	CALL	C.5AE2
	CP	"Y"
	JP	Z,J.5AF7
	CP	"N"
	JR	NZ,J$5A38
	CALL	C.5B41
	CALL	C.5B53
J.5A4A:	CALL	C.6000
	DEFB	0
	DEFW	C.40E1			; read byte from file
	JP	C,J$5AD4
	CP	1AH			; EOF ?
	JP	Z,J$5AE8		; yep,
	PUSH	AF			; store byte
	CALL	C.6000
	DEFB	6
	DEFW	C.4099
	JR	C,J$5A76
	POP	BC			; restore byte
J$5A62:	LD	A,(D.655D)
	AND	A
	JR	Z,J.5A0F		; loop
	LD	A,B
	LD	HL,0
	LD	(D$7EE7),HL             ; reset printer not ready counter
	CALL	C.5B31			; print and send byte
	JR	NC,J.5A0F		; no error, loop
	JR	J$5AA0

J$5A76:	POP	BC
	JP	J.5AF7

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5A7A:	CALL	C.6000
	DEFB	1
	DEFW	C.4099
	CALL	C.6000
	DEFB	6
	DEFW	C.40BA
	LD	B,A
	AND	80H
	LD	(D$6371),A
	LD	A,B
	CALL	C.6000
	DEFB	0
	DEFW	C.40D5			; set comterm mode
	XOR	A
	LD	(INTFLG),A
	CALL	C.5B41
	LD	HL,I$5959
	JP	C.5B4A

J$5AA0:	LD	L,30H
	CALL	C.6000
	DEFB	3
	DEFW	C.40C3
	CALL	C.5B38
J$5AAB:	CALL	C.5AE2
	CP	"R"			; retry ?
	JR	NZ,J$5ABA		; nope,
	CALL	C.5B41
	CALL	C.5B53
	JR	J$5A62

J$5ABA:	CP	"C"			; continue ?
	JR	NZ,J$5AAB		; nope,
	CALL	C.5B41
	CALL	C.5B53
	XOR	A
	LD	(D.655D),A
	JR	C.5B4A

J.5ACA:	LD	A,E
	CALL	C.6000
	DEFB	6
	DEFW	C.4090			; translate error, update error display
	JP	J.5B27

J$5AD4:	CALL	C.5AD9
	JR	J.5AF7

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5AD9:	CALL	C.6000
	DEFB	3
	DEFW	C.40C0
	CALL	C.5B38

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5AE2:	CALL	C.5DDF
	JP	C.4653			; to upper

J$5AE8:	LD	HL,I$595F
	CALL	C.5B47
	CALL	C.5B38
	CALL	KILBUF			; clear keyboard buffer
	CALL	C.5DDF
J.5AF7:	LD	A,(D.655D)
	AND	A
	CALL	NZ,C$5B29		; print and send CR/LF
	CALL	C.6000
	DEFB	0
	DEFW	C.40E4			; close file
	CALL	C.6000
	DEFB	2
	DEFW	C.4096			; revert to normal graphic screen
	LD	A,(D.64AC)
	LD	(CNSDFG),A
	CALL	C.6000
	DEFB	6
	DEFW	C.40B1
	LD	A,5			; option = 5
	LD	(D.63A0),A		; update selected option
	LD	HL,I.41FA
	LD	(D.63A1),HL
	CALL	C.42AD
	XOR	A
	DEC	A
	RET

J.5B27:	XOR	A
	RET

;	  Subroutine print and send CR/LF
;	     Inputs  ________________________
;	     Outputs ________________________

C$5B29:	LD	A,0DH
	CALL	C.5B31			; print and send byte
	RET	C
	LD	A,0AH

;	  Subroutine print and send byte
;	     Inputs  ________________________
;	     Outputs ________________________

C.5B31:	CALL	C.6000
	DEFB	1
	DEFW	C.40A5			; print and send byte
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5B38:	PUSH	HL
	LD	HL,I$5953
J$5B3C:	CALL	C.5B4A
	POP	HL
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5B41:	PUSH	HL
	LD	HL,I$594D
	JR	J$5B3C

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5B47:	CALL	C.5B53

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5B4A:	LD	A,(HL)
	OR	A
	RET	Z
	CALL	C.5B64
	INC	HL
	JR	C.5B4A

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5B53:	LD	A,18H
	CALL	C.5B64
	LD	A,(CSRX)
	OR	A
	RET	Z
	LD	A,0DH	; 13 
	CALL	C.5B64
	LD	A,0AH	; 10 

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5B64:	PUSH	HL
	CALL	C.6000
	DEFB	2
	DEFW	C.4093
	POP	HL
	RET

;	  Subroutine option 5, other
;	     Inputs  ________________________
;	     Outputs ________________________

C.5B6D:	CALL	C.46C6			; 643A = 00H
	CALL	C.4667			; no error ?
	JR	Z,J$5B7B		; yep,
	CALL	C.465C
	JP	J.5BC2

J$5B7B:	LD	A,(D.63A4)
	LD	B,A
	CP	0DH	; 13 
	JR	NZ,J$5B91
	LD	HL,I.64B5
	LD	DE,FORCLR
	LD	BC,3
	LDIR
	JP	J$599D

J$5B91:	LD	A,(D.63AA)
	CP	05H	; 5 
	JR	NZ,J.5BC2
	LD	A,B
	CP	08H	; 8 
	JR	NZ,J$5BA5
	CALL	C.6000
	DEFB	6
	DEFW	C.40C6
	JR	J.5BBF

J$5BA5:	CP	20H	; " "
	JR	C,J.5BC2
	CALL	C.5DAE			; display character (with ? support)
	CALL	C.6000
	DEFB	6
	DEFW	C.40C6
	LD	BC,I.1F1E
	LD	A,(D.63AC)
	CP	B
	JR	C,J.5BBF
	LD	A,C
	LD	(D.63AC),A
J.5BBF:	CALL	C.5DA0
J.5BC2:	XOR	A
	RET

J$5BC4:	CALL	C.46C9			; 643A = 0FH
	LD	HL,I.65BB
	LD	BC,15*256+15		; column = 15, line = 15
	LD	D,16			; size = 16
	JP	C.461E			; display string at location (with ? support)

;	  Subroutine option 5, UP
;	     Inputs  ________________________
;	     Outputs ________________________

C.5BD2:	CALL	C.4667			; no error ?
	JR	NZ,J.5BEF		; nope,
	LD	A,(D.63AA)
	LD	B,A
	AND	A
	JR	Z,J.5BEF
	CALL	C.5DD1
	DEC	A
	LD	(D.63AA),A
	CALL	C.5DCA
	CP	04H	; 4 
	JR	NZ,J.5BEF
	CALL	C.5DA7
J.5BEF:	XOR	A
	RET

;	  Subroutine option 5, DOWN
;	     Inputs  ________________________
;	     Outputs ________________________

C.5BF1:	CALL	C.4667			; no error ?
	JR	NZ,J.5C12		; nope,
	LD	A,(D.63AA)
	LD	B,A
	CP	05H	; 5 
	JR	NC,J.5C12
	CALL	C.5DD1
	INC	A
	LD	(D.63AA),A
	CALL	C.5DCA
	CP	05H	; 5 
	JR	NZ,J.5C12
	CALL	C.4855
	CALL	C.5DA0
J.5C12:	XOR	A
	RET

;	  Subroutine option 5, LEFT
;	     Inputs  ________________________
;	     Outputs ________________________

C.5C14:	CALL	C.4667			; no error ?
	JR	NZ,J.5C4A		; nope,
	LD	A,(D.63AA)
	CP	05H	; 5 
	JR	NC,J$5C3C
	LD	B,00H
	LD	C,A
	LD	HL,I.655B
	ADD	HL,BC
	LD	A,(HL)
	AND	A
	JR	NZ,J$5C35
	LD	IX,I.5C9D
	ADD	IX,BC
	LD	A,(IX+0)
	INC	A
J$5C35:	DEC	A
	LD	(HL),A
	CALL	C.5C84
	JR	J.5C4A

J$5C3C:	LD	A,(D.63AC)
	CP	15
	JR	Z,J.5C4A
	DEC	A
	LD	(D.63AC),A
	CALL	C.5DA0
J.5C4A:	JR	J.5C82

;	  Subroutine option 5, RIGHT
;	     Inputs  ________________________
;	     Outputs ________________________

C.5C4C:	CALL	C.4667			; no error ?
	JR	NZ,J.5C82		; nope,
	LD	A,(D.63AA)
	CP	05H	; 5 
	JR	NC,J$5C74
	LD	B,00H
	LD	C,A
	LD	HL,I.655B
	ADD	HL,BC
	LD	A,(HL)
	LD	IX,I.5C9D
	ADD	IX,BC
	CP	(IX+0)
	JR	NZ,J$5C6D
	LD	A,0FFH
J$5C6D:	INC	A
	LD	(HL),A
	CALL	C.5C84
	JR	J.5C82

J$5C74:	LD	A,(D.63AC)
	CP	30
	JR	Z,J.5C82
	INC	A
	LD	(D.63AC),A
	CALL	C.5DA0
J.5C82:	XOR	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5C84:	LD	B,A
	LD	A,(D.63AA)
	LD	D,00H
	LD	E,A
	LD	HL,I.5C98
	ADD	HL,DE
	LD	A,(HL)
	ADD	A,B
	CALL	C.6000
	DEFB	7
	DEFW	C.4099
	RET

I.5C98:	NOP
	DEC	B
	RLCA
	ADD	HL,BC
	DEC	C
I.5C9D:	INC	B
	LD	BC,I$0301
	LD	BC,I$AB3A

;	  Subroutine option 6, UP
;	     Inputs  ________________________
;	     Outputs ________________________

C.5CA2	EQU	$-2
	LD	H,E
	AND	A
	JR	Z,J$5CC2
	CALL	C.50D0
	DEC	A
	LD	(D.63AB),A
	CALL	C.50BE
	LD	A,10
	LD	(D.63AC),A
	LD	A,(D.63AD)
	SUB	2
	LD	(D.63AD),A
	CALL	C.5DA0
J$5CC2:	XOR	A
	RET

;	  Subroutine option 6, DOWN
;	     Inputs  ________________________
;	     Outputs ________________________

C.5CC4:	LD	A,(D.63AB)
	CP	01H	; 1 
	JR	NC,J$5CE5
	CALL	C.50D0
	INC	A
	LD	(D.63AB),A
	CALL	C.50BE
	LD	A,10
	LD	(D.63AC),A
	LD	A,(D.63AD)
	ADD	A,2
	LD	(D.63AD),A
	CALL	C.5DA0
J$5CE5:	XOR	A
	RET

;	  Subroutine option 6, LEFT
;	     Inputs  ________________________
;	     Outputs ________________________

C.5CE7:	LD	A,(D.63AC)
	CP	10
	JR	Z,J$5CF5
	DEC	A
	LD	(D.63AC),A
	CALL	C.5DA0
J$5CF5:	XOR	A
	RET

;	  Subroutine option 6, RIGHT
;	     Inputs  ________________________
;	     Outputs ________________________

C.5CF7:	LD	A,(D.63AB)
	LD	B,30
	AND	A
	JR	Z,J$5D01
	LD	B,19
J$5D01:	LD	A,(D.63AC)
	CP	B
	JR	Z,J$5D0E
	INC	A
	LD	(D.63AC),A
	CALL	C.5DA0
J$5D0E:	XOR	A
	RET

;	  Subroutine option 6, other
;	     Inputs  ________________________
;	     Outputs ________________________

C.5D10:	CALL	C.46C6			; 643A = 00H
	LD	A,(D.63A4)
	CP	0DH	; 13 
	JR	Z,J$5D26
	CP	08H	; 8 
	JR	NZ,J$5D30
	CALL	C.6000
	DEFB	6
	DEFW	C.40C9
	JR	J.5D53

J$5D26:	LD	A,(D.63AB)
	AND	A
	JP	Z,C.5CC4
	JP	C.5CA2

J$5D30:	CP	20H	; " "
	JR	C,J$5D56
	CALL	C.5DAE			; display character (with ? support)
	CALL	C.6000
	DEFB	6
	DEFW	C.40C9
	LD	BC,31*256+30
	LD	A,(D.63AB)
	AND	A
	JR	Z,J$5D49
	LD	BC,20*256+19
J$5D49:	LD	A,(D.63AC)
	CP	B
	JR	C,J.5D53
	LD	A,C
	LD	(D.63AC),A
J.5D53:	CALL	C.5DA0

; no function

J$5D56:	XOR	A
	RET

J$5D58:	CALL	C.46C9			; 643A = 0FH
	LD	HL,I.652F
	LD	BC,10*256+5		; column = 10, line = 5
	LD	D,21			; size = 21
	CALL	C.461E			; display string at location (with ? support)
	LD	HL,I.6545
	LD	BC,10*256+7		; column = 10, line = 7
	LD	D,10			; size = 10
	JP	C.461E			; display string at location (with ? support)

?.5D71:	JP	C.4581

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5D74:	CALL	C.6000
	DEFB	5
	DEFW	C.40E1
	RET

;	  Subroutine connect to phone
;	     Inputs  ________________________
;	     Outputs ________________________

C.5D7B:	LD	A,1

;	  Subroutine MODEM.LINSEL
;	     Inputs  ________________________
;	     Outputs ________________________

C.5D7D:	CALL	C.6000
	DEFB	0
	DEFW	C.4177			; MODEM.LINSEL
	RET

;	  Subroutine counter #1, clear
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.5D84:	CALL	C.6000
	DEFB	0
	DEFW	C.40AE			; counter #1, clear
	RET

;	  Subroutine counter #1, get number of seconds
;	     Inputs  ________________________
;	     Outputs ________________________

C.5D8B:	CALL	C.6000
	DEFB	0
	DEFW	C.40B1			; counter #1, get number of seconds
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5D92:	CALL	C.6000
	DEFB	6
	DEFW	C.40A8
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5D99:	CALL	C.6000
	DEFB	6
	DEFW	C.40AB
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5DA0:	CALL	C.6000
	DEFB	5
	DEFW	C.40BA
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5DA7:	CALL	C.6000
	DEFB	5
	DEFW	C.40BD
	RET

;	  Subroutine display character (with ? support)
;	     Inputs  ________________________
;	     Outputs ________________________

C.5DAE:	CALL	C.6000
	DEFB	6
	DEFW	C.40CF			; display character (with ? support)
	RET

;	  Subroutine finish dial tone detect
;	     Inputs  ________________________
;	     Outputs ________________________

C.5DB5:	CALL	C.6000
	DEFB	0
	DEFW	C.40AB			; finish dial tone detect
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5DBC:	CALL	C.6000
	DEFB	6
	DEFW	C.40D2
	RET

;	  Subroutine display numeric setting
;	     Inputs  ________________________
;	     Outputs ________________________

C.5DC3:	CALL	C.6000
	DEFB	6
	DEFW	C.40CC			; display numeric setting
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5DCA:	CALL	C.6000
	DEFB	6
	DEFW	C.40FC
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5DD1:	CALL	C.6000
	DEFB	6
	DEFW	C.40FF
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5DD8:	CALL	C.6000
	DEFB	6
	DEFW	C.4105
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5DDF:	CALL	C.6000
	DEFB	6
	DEFW	C.4108
	RET

;	  Subroutine get line status
;	     Inputs  ________________________
;	     Outputs ________________________

C.5DE6:	CALL	C.6000
	DEFB	0
	DEFW	C.40C0			; get line status
	RET

;	  Subroutine find free phone data block
;	     Inputs  ________________________
;	     Outputs ________________________

C$5DED:	LD	E,0
J$5DEF:	LD	A,E
	CP	100
	JP	NC,J$5E0F
	LD	L,E
	LD	H,0
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL			; *16
	LD	C,L
	LD	B,H
	ADD	HL,HL			; *32
	ADD	HL,BC			; *48
	LD	BC,I.6966
	ADD	HL,BC
	LD	A,(HL)
	OR	A			; phone data block free ?
	JP	NZ,J$5E0B		; nope, next
	LD	A,E
	RET

J$5E0B:	INC	E
	JP	J$5DEF

J$5E0F:	LD	A,0FFH
	RET

;	  Subroutine free phone book entry
;	     Inputs  phone book entry number
;	     Outputs ________________________

C.5E12:	LD	L,A
	LD	H,0
	LD	BC,I.6900
	ADD	HL,BC
	LD	E,(HL)
	LD	L,A
	LD	A,E			; first phone book data block
	INC	A			; phone book entry free ?
	RET	Z			; yep, quit
	LD	H,0
	LD	BC,I.6900
	ADD	HL,BC
	LD	(HL),0FFH		; free phone book entry

J$5E26:	LD	L,E
	LD	H,0			; phone book data block
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL			; *16
	LD	C,L
	LD	B,H
	ADD	HL,HL			; *32
	ADD	HL,BC			; *48
	LD	BC,I.6966+47
	ADD	HL,BC
	LD	A,(HL)			; next phone book data block
	CP	0FFH			; last phone book data block ?
	JP	Z,J$5E61		; yep,
	LD	L,E
	LD	H,0
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL			; *16
	LD	C,L
	LD	B,H
	ADD	HL,HL			; *32
	ADD	HL,BC			; *48
	LD	BC,I.6966
	ADD	HL,BC
	LD	(HL),0			; free phone book data block
	LD	L,E
	LD	H,0
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL			; *16
	LD	C,L
	LD	B,H
	ADD	HL,HL			; *32
	ADD	HL,BC			; *48
	LD	BC,I.6966+47
	ADD	HL,BC
	LD	(HL),0FFH		; end of phone book data block chain
	LD	E,A			; phone book data block
	JP	J$5E26			; next

J$5E61:	LD	L,E
	LD	H,0
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL			; *16
	LD	C,L
	LD	B,H
	ADD	HL,HL			; *32
	ADD	HL,BC			; *48
	LD	BC,I.6966
	ADD	HL,BC
	LD	(HL),0			; free phone book data block
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$5E73:	LD	(D.7EF0),A
	EX	DE,HL
	LD	(D.7EF1),HL
	PUSH	AF
	LD	A,0FFH
	LD	(D.7EF5),A
	POP	AF
	CALL	C.5E12			; free phone book entry
	LD	A,1
	LD	(D.7EF3),A		; current phone book data block = 1

J$5E89:	CALL	C$5DED			; find free phone data block
	LD	E,A
	LD	HL,D.7EF4
	LD	(HL),E
	LD	A,E
	INC	A			; no free phone data block ?
	JP	NZ,J$5EB3		; nope,
	LD	A,(D.7EF5)
	CP	0FFH
	JP	Z,J$5EAF
	LD	L,A
	LD	H,0
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL			; *16
	LD	C,L
	LD	B,H
	ADD	HL,HL			; *32
	ADD	HL,BC			; *48
	LD	BC,I.6966+47
	ADD	HL,BC
	LD	(HL),0FFH
J$5EAF:	LD	A,(D.7EF3)
	RET

J$5EB3:	LD	A,(D.7EF3)
	DEC	A			; first phone book data block ?
	JP	NZ,J$5EC7		; nope, expand chain
	LD	HL,(D.7EF0)
	LD	H,0
	LD	BC,I.6900
	ADD	HL,BC
	LD	(HL),E			; first phone book data block
	JP	J$5ED9

J$5EC7:	LD	HL,(D.7EF5)
	LD	H,0
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL			; *16
	LD	C,L
	LD	B,H
	ADD	HL,HL			; *32
	ADD	HL,BC			; *48
	LD	BC,I.6966+47
	ADD	HL,BC
	LD	(HL),E			; update next phone book data block
J$5ED9:	LD	L,E
	LD	E,0
J$5EDC:	LD	A,E
	CP	46+1
	JP	NC,J$5F4E
	LD	HL,(D.7EF1)
	LD	A,(HL)
	INC	HL
	LD	(D.7EF1),HL
	PUSH	HL
	LD	HL,(D.7EF4)
	LD	H,0
	PUSH	AF
	LD	A,L
	LD	(D.7EF4),A
	POP	AF
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL			; *16
	LD	C,L
	LD	B,H
	ADD	HL,HL			; *32
	ADD	HL,BC			; *48
	LD	C,E
	LD	B,0
	ADD	HL,BC
	LD	BC,I.6966
	ADD	HL,BC
	LD	(HL),A			; update
	POP	HL
	LD	A,(HL)
	LD	HL,(D.7EF4)
	OR	A
	JP	NZ,J$5F4A
	LD	H,0
	PUSH	HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL			; *16
	LD	C,L
	LD	B,H
	ADD	HL,HL			; *32
	ADD	HL,BC			; *48
	LD	A,E
	INC	A
	LD	C,A
	LD	B,0
	ADD	HL,BC
	LD	BC,I.6966
	ADD	HL,BC
	LD	(HL),0
	POP	HL
	LD	H,0
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL			; *16
	LD	C,L
	LD	B,H
	ADD	HL,HL			; *32
	ADD	HL,BC			; *48
	LD	BC,I.6966+47
	ADD	HL,BC
	EX	DE,HL
	LD	A,0FFH
	LD	(DE),A			; end of phone book data block chain
	LD	HL,(D.6523)
	LD	A,L
	SUB	E
	LD	A,H
	SBC	A,D
	JP	NC,J$5F48
	EX	DE,HL
	LD	(D.6523),HL
J$5F48:	XOR	A
	RET

J$5F4A:	INC	E
	JP	J$5EDC

J$5F4E:	LD	A,L
	LD	(D.7EF5),A
	LD	A,(D.7EF3)
	INC	A
	LD	(D.7EF3),A		; update to next phone data block
	JP	J$5E89

;	  Subroutine __________________________
;	     Inputs  phone book entry number
;	     Outputs ________________________

C.5F5C:	LD	L,A
	LD	H,0
	LD	BC,I.6900
	ADD	HL,BC
	LD	L,(HL)
	LD	A,L
	INC	A			; phone book entry free ?
	JP	NZ,J.5F6D		; nope,
	XOR	A
	LD	(DE),A
	XOR	A
	RET

J.5F6D:	XOR	A
	LD	(D.7EF6),A
J$5F71:	CP	46+1
	JP	NC,J$5F9F
	LD	H,0
	PUSH	HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL			; *16
	LD	C,L
	LD	B,H
	ADD	HL,HL			; *32
	ADD	HL,BC			; *48
	LD	C,A
	LD	B,0
	ADD	HL,BC
	LD	BC,I.6966
	ADD	HL,BC
	LD	A,(HL)
	LD	(DE),A
	LD	A,(DE)
	POP	HL
	OR	A
	JP	NZ,J$5F94
	LD	A,0FFH
	RET

J$5F94:	INC	DE
	LD	A,(D.7EF6)
	INC	A
	LD	(D.7EF6),A
	JP	J$5F71

J$5F9F:	LD	H,0
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	C,L
	LD	B,H
	ADD	HL,HL
	ADD	HL,BC
	LD	BC,I.6966+47
	ADD	HL,BC
	LD	L,(HL)
	LD	A,L
	INC	A
	JP	NZ,J.5F6D
	XOR	A
	LD	(DE),A
	LD	A,0FFH
	RET

;	  Subroutine __________________________
;	     Inputs  phone book entry number
;	     Outputs ________________________

C.5FB8:	LD	L,A
	LD	H,0
	LD	BC,I.6900
	ADD	HL,BC
	LD	L,(HL)
	LD	A,L
	LD	(D.7EF8),A
	LD	A,L
	INC	A			; phone book entry free ?
	JP	NZ,J$5FCF		; nope,
	XOR	A
	LD	(DE),A
	LD	HL,0
	RET

J$5FCF:	XOR	A
	LD	(D.7EF7),A
J$5FD3:	CP	46+1
	RET	NC
	LD	HL,(D.7EF8)
	LD	H,0
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	C,L
	LD	B,H
	ADD	HL,HL
	ADD	HL,BC
	LD	C,A
	LD	B,0
	ADD	HL,BC
	LD	BC,I.6966
	ADD	HL,BC
	LD	A,(HL)
	LD	(DE),A
	LD	A,(DE)
	OR	A
	RET	Z
	INC	DE
	LD	A,(D.7EF7)
	INC	A
	LD	(D.7EF7),A
	JP	J$5FD3

	DEFS	6000H-$,0FFH

	END
