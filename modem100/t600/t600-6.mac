; T600-6.MAC
;
; MSX-MODEM Sony T600
;
; Source re-created by Z80DIS 2.2
; Z80DIS was written by Kenneth Gielow, Palo Alto, CA
;
; Code Copyrighted by ASCII and maybe others
; Source comments by Arjen Zeilemaker
;
; Sourcecode supplied for STUDY ONLY
; Recreation NOT permitted without authorisation of the copyrightholders
;

        .Z80
        ASEG

	ORG	04040H

DISSCR	EQU	0041H
ENASCR	EQU	0044H
WRTVDP	EQU	0047H
FILVRM	EQU	0056H
CHGCLR	EQU	0062H
INIGRP	EQU	0072H
CHGET	EQU	009FH
BEEP	EQU	00C0H
KILBUF	EQU	0156H
EXTROM	EQU	015FH
CHGMDP	EQU	01B5H

FORCLR	EQU	0F3E9H
FNKSTR	EQU	0F87FH
EXBRSA	EQU	0FAF8H
MODE	EQU	0FAFCH


C.6000	EQU	6000H			; inter segment call (EI)
D$6300	EQU	6300H	; ---L-
D.6304	EQU	6304H			; last key
D$6305	EQU	6305H			; current phone book entry (display)
D.6307	EQU	6307H	; ---L-
D.6308	EQU	6308H			; item
D.6309	EQU	6309H	; ---L-
D.630A	EQU	630AH	; --SL-
D$630B	EQU	630BH			; current phone book entry
D.630F	EQU	630FH			; current column
D.6310	EQU	6310H			; current line
D$6318	EQU	6318H			; VDP data write port
D.6329	EQU	6329H			; current column (? support)
D.632A	EQU	632AH			; current line (? support)
D$632C	EQU	632CH	; ---L-
D$632D	EQU	632DH	; --S--
I.632F	EQU	632FH	; ----I
D.633C	EQU	633CH	; --SL-
D.633D	EQU	633DH	; --SL-
D.633F	EQU	633FH	; ---L-
D.6340	EQU	6340H			; TELCOM startup mode
D.6341	EQU	6341H			; speaker mode
D.6342	EQU	6342H			; dial mode
D.63A7	EQU	63A7H			; last telcom error
I.63A8	EQU	63A8H			; character pattern buffer
D.63B0	EQU	63B0H	; --SLI
D$63B2	EQU	63B2H	; --S--
I.63B3	EQU	63B3H	; ----I
D.63B4	EQU	63B4H	; --SL-
D.63B5	EQU	63B5H	; --SL-
D.63B6	EQU	63B6H	; --SL-
D.63B7	EQU	63B7H	; --SL-
D$63B9	EQU	63B9H	; --S--

I.63BA	EQU	63BAH			; COMINI parameter block
I.63C7	EQU	63C7H	; ----I
D$63CB	EQU	63CBH	; ---L-
I.63CD	EQU	63CDH	; ----I
I$63E7	EQU	63E7H	; ----I
I.63EB	EQU	63EBH	; ----I
D$6400	EQU	6400H	; --S--
D$6405	EQU	6405H			; end of phone book data
D.640A	EQU	640AH	; ---LI
D.640B	EQU	640BH	; --SL-
D$640C	EQU	640CH			; output to printer
D$6410	EQU	6410H	; ---L-
D.6412	EQU	6412H	; --SL-
D.6413	EQU	6413H	; --SL-
D.6414	EQU	6414H	; --SLI
D.6415	EQU	6415H	; --SL-
D.6416	EQU	6416H	; --S-I
D.6417	EQU	6417H	; --S-I
D.6419	EQU	6419H			; value per item table
D$6429	EQU	6429H	; --S--
D.642D	EQU	642DH	; --SL-
I$6460	EQU	6460H	; ----I
I.6478	EQU	6478H	; ----I
D.6480	EQU	6480H	; ---LI
I.6488	EQU	6488H	; ----I
I.6498	EQU	6498H	; ----I
I$64B5	EQU	64B5H	; ----I
I$64B6	EQU	64B6H	; ----I
I.64BB	EQU	64BBH	; ----I
I$64D0	EQU	64D0H	; ----I
I.64E5	EQU	64E5H	; ----I
D$64F9	EQU	64F9H	; --S--
I.64FA	EQU	64FAH	; ----I
I.64FF	EQU	64FFH	; ----I
I$67D2	EQU	67D2H	; ----I
I.67F2	EQU	67F2H	; ----I
I$67F3	EQU	67F3H	; ----I
I$67F4	EQU	67F4H	; ----I
I$6800	EQU	6800H			; phone book entry table
I$7EFA	EQU	7EFAH			; SRAM sanity pattern

?.4040:	JP	J$5357			; update error display
?.4043:	JP	J$5346			; translate error, update error display
?.4046:	JP	J$5136			; dial character
?.4049:	JP	J$5162
?.404C:	JP	J$5157
?.404F:	JP	J$4FFF
?.4052:	JP	J$5019
?.4055:	JP	J$4E22			; telcom function key definition
?.4058:	JP	J$4E4F			; restore function key definition (two bytes)
?.405B:	JP	J$4E6C			; store function key definition (two bytes)
?.405E:	JP	J$4D9E			; display telcom welcome message
?.4061:	JP	J$4DF8
?.4064:	JP	C.4E89			; display item value
?.4067:	JP	J$4F5F			; display mode value
?.406A:	JP	C.4F9E
?.406D:	JP	J$4A6F
?.4070:	JP	J$4BB6
?.4073:	JP	J$48AE
?.4076:	JP	J$4737
?.4079:	JP	J$46FB			; initialize modem speaker and graphic screen
?.407C:	JP	J$46D8			; change speaker state (speaker mode)
?.407F:	JP	J$468A			; get comterm mode
?.4082:	JP	J$45F6			; generate RS232.INIT parameter block
?.4085:	JP	J$45B9
?.4088:	JP	J$455D
?.408B:	JP	J$4461
?.408E:	JP	J$44F4
?.4091:	JP	J$4410
?.4094:	JP	C.43B6			; display timer value
?.4097:	JP	C.42DB			; display character (with ? support)
?.409A:	JP	J$40A9
?.409D:	JP	C.4F40			; check if JIS1
?.40A0:	JP	J$41D7
?.40A3:	JP	C.4238			; multiply by 27
?.40A6:	JP	J$4168			; initialize SRAM

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

J$40A9:	LD	A,(D.6307)
	CP	02H
	JP	C,J$410E
	SUB	02H
	LD	L,A
	LD	A,(D.633F)
	ADD	A,L
	CALL	C.4238			; multiply by 27
	LD	DE,I.64FA
	ADD	HL,DE
	PUSH	HL
	POP	IY
	LD	A,(D.630F)		; current column
	SUB	4
	LD	B,A
	LD	D,0
	LD	E,A
	ADD	HL,DE
	LD	A,(D.6304)		; last key
	CP	7FH			; DEL ?
	JR	Z,J.40DB		; yep,
	CP	08H			; BS ?
	JR	Z,J.40DB		; yep,
	LD	(HL),A
	JP	J.4166

J.40DB:	INC	HL
	LD	A,1BH
	SUB	B
	LD	C,A
	LD	B,0
	LD	D,H
	LD	E,L
	DEC	DE
	LDIR
	LD	A,(D.630F)		; current column
	CP	4
	JR	C,J$40F2
	DEC	A
	LD	(D.630F),A		; update current column
J$40F2:	LD	A,20H
	LD	(IY+26),A
	CALL	C.4557
	LD	B,3			; column = 3
	LD	A,(D.6307)
	LD	C,9
	ADD	A,C
	LD	C,A			; line
	LD	D,27			; size of string = 27
	PUSH	IY
	POP	HL
	CALL	C.453B			; display string (with ? support)
	JP	J.4166

J$410E:	LD	HL,I$64D0
	AND	A
	JR	Z,J$4118
	LD	DE,21
	ADD	HL,DE
J$4118:	PUSH	HL
	POP	IY
	LD	A,(D.630F)		; current column
	SUB	10
	LD	B,A
	LD	D,00H
	LD	E,A
	ADD	HL,DE
	LD	A,(D.6304)		; last key
	CP	7FH			; DEL ?
	JR	Z,J.4133		; yep,
	CP	08H			; BS ?
	JR	Z,J.4133		; yep,
	LD	(HL),A
	JR	J.4166

J.4133:	INC	HL
	LD	A,15H
	SUB	B
	LD	C,A
	LD	B,00H
	LD	D,H
	LD	E,L
	DEC	DE
	LDIR
	LD	A,(D.630F)		; current column
	CP	10
	JR	C,J$414A
	DEC	A
	LD	(D.630F),A		; update current column
J$414A:	LD	A,20H
	LD	(IY+20),A
	CALL	C.4557
	LD	B,9			; column = 9
	LD	A,(D.6307)
	LD	C,5			; line = 5
	AND	A
	JR	Z,J$415E
	LD	C,7			; line = 7
J$415E:	LD	D,21			; size of string = 21
	PUSH	IY
	POP	HL
	CALL	C.453B			; display string (with ? support)
J.4166:	XOR	A
	RET

;	  Subroutine initialize SRAM
;	     Inputs  ________________________
;	     Outputs ________________________

J$4168:	LD	HL,I$7EFA
	LD	(HL),55H
	INC	HL
	LD	(HL),0AAH		; SRAM sanity pattern
	XOR	A
	LD	(D$6305),A		; current phone book entry (display) = 0
	LD	(D$630B),A		; current phone book entry = 0
	LD	(D$63B2),A
	LD	(D$632D),A
	LD	HL,D.6340
	INC	A
	LD	(HL),A			; TELCOM startup mode = disable
	INC	A
	INC	HL
	LD	(HL),A			; speaker mode = 2
	INC	HL
	LD	(HL),A			; mode = 2
	CALL	C.6000
	DEFB	0
	DEFW	C.40D6			; MODEM.SPKCNT
	LD	A,5
	LD	(D$63B9),A
	XOR	A
	LD	HL,I$6460
	LD	DE,I$6460+1
	LD	(HL),A
	LD	BC,100+11-1
	LDIR
	LD	HL,I$6800+102-1
	LD	(D$6405),HL		; update end of phone book data
	INC	HL
	LD	D,H
	LD	E,L
	INC	DE
	LD	(HL),A
	LD	BC,48*100+10-1
	LDIR
	LD	HL,I.64BB
	LD	DE,I.64BB+1
	LD	(HL),A
	LD	BC,17-1
	LDIR
	DEC	A
	LD	HL,I$6800
	LD	DE,I$6800+1
	LD	(HL),A
	LD	BC,102-1
	LDIR				; clear phone book entries
	XOR	A
	LD	(D.6340),A		; TELCOM startup mode = enable
	LD	A,2
	LD	(D.6341),A		; speaker mode = 2
	LD	A,4
	LD	(D.6342),A		; mode = 4
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

J$41D7:	PUSH	HL
	PUSH	DE
	PUSH	BC
	PUSH	AF
	LD	HL,I.64FA
	LD	IX,I.63CD
	LD	E,0
	LD	D,82H
	LD	C,27
J$41E8:	LD	B,27
J$41EA:	LD	A,(HL)
	CP	0DH	; 13 
	JR	Z,J$41FC
	INC	HL
	DJNZ	J$41EA
	LD	(IX+0),D
J$41F5:	INC	IX
	DEC	C
	JR	NZ,J$41E8
	JR	J$420E

J$41FC:	LD	(IX+0),D
	INC	E
	LD	A,E
	AND	01H	; 1 
	ADD	A,82H
	LD	D,A
	PUSH	DE
	LD	D,0
	LD	E,B
	ADD	HL,DE
	POP	DE
	JR	J$41F5

J$420E:	LD	HL,I$67D2
	LD	IX,I$63E7
	LD	C,1BH
J$4217:	LD	B,1BH
J$4219:	LD	A,(HL)
	CP	0DH	; 13 
	JR	Z,J$422A
	DEC	HL
	DJNZ	J$4219
	LD	(IX+0),20H	; " "
	DEC	IX
	DEC	C
	JR	NZ,J$4217
J$422A:	LD	A,(D.63A7)
	AND	A			; telcom error ?
	JR	NZ,J$4233		; yep, skip
	CALL	C$424C
J$4233:	POP	AF
	POP	BC
	POP	DE
	POP	HL
	RET

;	  Subroutine multiply by 27
;	     Inputs  ________________________
;	     Outputs ________________________

C.4238:	LD	H,0
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL			; *4
	PUSH	HL
	POP	BC
	ADD	HL,HL			; *8
	PUSH	HL
	POP	DE
	ADD	HL,HL			; *16
	ADD	HL,BC			; *20
	ADD	HL,DE			; *28
	LD	D,0
	LD	E,A
	AND	A
	SBC	HL,DE			; *27
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$424C:	LD	A,0FH
	LD	(D.63B0),A
	LD	A,2
	LD	(D.6329),A		; current column (? support) = 2
	LD	A,11
	LD	(D.632A),A		; current line (? support) = 11
	LD	HL,I.63CD
	LD	A,(D.633F)
	LD	D,0
	LD	E,A
	ADD	HL,DE
	LD	D,9
J$4267:	LD	A,(HL)
	AND	A			; end of string ?
	RET	Z			; yep, quit
	CALL	C.42DB			; display character (with ? support)
	INC	HL
	LD	A,2
	LD	(D.6329),A		; current column (? support) = 2
	LD	A,(D.632A)
	INC	A
	LD	(D.632A),A		; update current line (? support)
	DEC	D
	JR	NZ,J$4267
	RET

;	  Subroutine display character
;	     Inputs  A = character
;	     Outputs ________________________

C.427E:	PUSH	HL
	CP	"["
	LD	C,0
	JR	Z,J.429F
	CP	"]"
	LD	C,1
	JR	Z,J.429F
	CP	86H			; double byte JIS ?
	JR	C,J.42AC		; nope, use system character set
	CP	0A0H
	JR	C,J$42A2		; get telcom character pattern and continue
	CP	0A6H
	JR	C,J.42AC		; nope, use system character set
	CP	0FEH
	JR	NC,J.42AC		; nope, use system character set
	SUB	89H
	JR	J.42A4			; get telcom character pattern and continue

J.429F:	LD	A,C
	JR	J.42A4			; get telcom character pattern and continue

J$42A2:	SUB	84H
J.42A4:	CALL	C.6000
	DEFB	7
	DEFW	C.4040			; get telcom character pattern
	JR	J$42C0			; continue

J.42AC:	CALL	C.4D07			; multiply by 8
	LD	DE,I.1BBF		; should be LD DE,(CGTABL)
	ADD	HL,DE
	LD	DE,I.63A8		; character pattern buffer
	LD	B,8
J$42B8:	LD	A,(HL)
	SRL	A
	LD	(DE),A
	INC	HL
	INC	DE
	DJNZ	J$42B8
J$42C0:	LD	HL,I.63A8		; character pattern buffer
	LD	A,(D.6310)
	LD	D,A			; current line
	LD	A,(D.630F)
	INC	A
	LD	(D.630F),A		; update current column
	DEC	A
	ADD	A,A
	ADD	A,A
	ADD	A,A
	LD	E,A
	LD	BC,8
	CALL	C.4D1C			; write data to VRAM
	POP	HL
	RET

;	  Subroutine display character (with ? support)
;	     Inputs  ________________________
;	     Outputs ________________________

C.42DB:	PUSH	HL
	PUSH	DE
	PUSH	BC
	LD	HL,D.63B0
	BIT	7,(HL)			; b7 set ?
	JR	Z,J$42E9		; nope,
	CP	0DH			; CR ?
	JR	Z,J$4332		; yep, replace by 0 character
J$42E9:	CP	82H
	JR	C,J.42F5
	CP	86H
	JR	NC,J.42F5
	SUB	81H
	JR	J$4333			; get telcom character pattern and continue

J.42F5:	CP	0DH			; CR ?
	JR	Z,J$4372		; yep, quit
	CP	"["
	LD	C,0
	JR	Z,J.4319
	CP	"]"
	LD	C,1
	JR	Z,J.4319
	CP	86H			; double byte JIS ?
	JR	C,J.4326		; nope, use system character set
	CP	0A0H			; double byte JIS ?
	JR	C,J$431C		; yep,
	CP	0A6H			; double byte JIS ?
	JR	C,J.4326		; nope, use system character set
	CP	0FEH			; double byte JIS ?
	JR	NC,J.4326		; nope, use system character set
	SUB	89H
	JR	J.431E

J.4319:	LD	A,C
	JR	J.431E

J$431C:	SUB	84H
J.431E:	CALL	C.6000
	DEFB	7
	DEFW	C.4040			; get telcom character pattern
	JR	J.4345			; continue

J.4326:	LD	H,0
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	DE,I.1BBF		; should be LD DE,(CGTABL)
	ADD	HL,DE
	JR	J$4338

J$4332:	XOR	A
J$4333:	CALL	C$4376			; get telcom character pattern
	JR	J.4345			; continue

J$4338:	LD	DE,I.63A8		; character pattern buffer
	LD	B,8
J$433D:	LD	A,(HL)
	SRL	A
	LD	(DE),A
	INC	HL
	INC	DE
	DJNZ	J$433D
J.4345:	LD	HL,I.63A8		; character pattern buffer
	LD	A,(D.63B0)
	AND	0FH
	JR	NZ,J$435C
	LD	A,(D.6310)
	LD	D,A			; current line
	LD	A,(D.630F)
	INC	A
	LD	(D.630F),A		; update current column
	JR	J$4367

J$435C:	LD	A,(D.632A)
	LD	D,A			; current line (? support)
	LD	A,(D.6329)
	INC	A
	LD	(D.6329),A		; update current column (? support)
J$4367:	DEC	A
	ADD	A,A
	ADD	A,A
	ADD	A,A
	LD	E,A
	LD	BC,8
	CALL	C.4D1C			; write data to VRAM
J$4372:	POP	BC
	POP	DE
	POP	HL
	RET

;	  Subroutine get telcom character pattern
;	     Inputs  ________________________
;	     Outputs ________________________

C$4376:	PUSH	HL
	LD	HL,I$438E
	ADD	A,A
	ADD	A,A
	ADD	A,A
	LD	D,0
	LD	E,A
	ADD	HL,DE
	LD	DE,I.63A8		; character pattern buffer
	LD	B,8
J$4386:	LD	A,(HL)
	LD	(DE),A
	INC	DE
	INC	HL
	DJNZ	J$4386
	POP	HL
	RET


I$438E:	NOP
	LD	(BC),A
	LD	(DE),A
	LD	(D$307E),A
	DJNZ	J$4396
J$4396:	JR	NC,J$43E0
	LD	B,B
	JR	NC,J$43A3
	LD	C,B
	JR	NC,J$439E
J$439E:	LD	(HL),B
	LD	C,B
	LD	C,B
	LD	(HL),B
	LD	D,B
J$43A3:	LD	C,B
	LD	C,B
	DEFB	0,0
	LD	A,(HL)
	IN	A,(0BDH)
	LD	H,(HL)
	RST	20H
	RST	20H
	RST	38H
	NOP
	LD	(DE),A
	INC	H
	LD	C,B
	INC	H
	LD	(DE),A
	INC	H
	LD	C,B

;	  Subroutine display timer value
;	     Inputs  ________________________
;	     Outputs ________________________

C.43B6:	LD	A,(HL)
	LD	B,10
	LD	C,0
	LD	DE,0*256+0
J$43BE:	SUB	B
	JR	C,J$43CE
	INC	D
	PUSH	AF
	LD	A,D
	CP	10
	JR	C,J$43CB
	INC	E
	LD	D,0
J$43CB:	POP	AF
	JR	J$43BE

J$43CE:	ADD	A,B
	LD	C,A
	LD	A,"0"
	ADD	A,C
	LD	C,A
	LD	A,"0"
	ADD	A,D
	LD	D,A
	LD	A,"0"
	ADD	A,E
	LD	E,A
	LD	HL,I.63C7
	LD	(HL),E
J$43E0:	INC	HL
	LD	(HL),D
	INC	HL
	LD	(HL),C
	CALL	C$454C
	LD	A,(D.6308)
	CP	13			; item = 13 ?
	JR	NZ,J$43F2		; nope,
	LD	A,17			; line = 17
	JR	J$43F4

J$43F2:	LD	A,18			; line = 18
J$43F4:	LD	(D.6310),A		; update current line
	LD	A,15
	LD	(D.630F),A		; current column = 15
	LD	HL,I.63C7
	LD	B,3
J$4401:	LD	A,(HL)
	SUB	"0"
	PUSH	BC
	CALL	C.6000
	DEFB	7
	DEFW	C.404C			; display character
	POP	BC
	INC	HL
	DJNZ	J$4401
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

J$4410:	LD	A,(D.630A)
	CP	03H
	RET	C
	LD	HL,I.64BB
	LD	IY,I.64BB
	LD	A,(D.630F)		; current column
	SUB	14
	LD	D,0
	LD	E,A
	ADD	HL,DE
	LD	A,(D.6304)		; last key
	CP	7FH			; DEL ?
	JR	Z,J.4434		; yep,
	CP	08H			; BS ?
	JR	Z,J.4434		; yep,
	LD	(HL),A
	JR	J$445F

J.4434:	LD	C,10H	; 16 
	INC	HL
	LD	A,C
	SUB	E
	LD	C,A
	LD	B,00H
	LD	D,H
	LD	E,L
	DEC	DE
	LDIR
	LD	A,(D.630F)		; current column
	CP	14
	JR	C,J$444C
	DEC	A
	LD	(D.630F),A		; update current column
J$444C:	LD	(IY+15),20H
	CALL	C.454F
	LD	B,13			; column = 13
	LD	C,11			; line = 11
	LD	D,16			; size of string = 16
	PUSH	IY
	POP	HL
	CALL	C.453B			; display string (with ? support)
J$445F:	XOR	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

J$4461:	LD	A,(D.6309)
	CP	03H	; 3 
	RET	C
	LD	HL,I.6478
	LD	IY,I.6478
	JR	Z,J.4482
	LD	HL,D.6480
	LD	IY,D.6480
	CP	04H	; 4 
	JR	Z,J.4482
	LD	HL,I.6488
	LD	IY,I.6488
J.4482:	LD	A,(D.630F)		; current column
	SUB	14
	LD	D,00H
	LD	E,A
	ADD	HL,DE
	LD	A,(D.6304)		; last key
	CP	7FH			; DEL ?
	JR	Z,J.4499		; yep,
	CP	08H			; BS ?
	JR	Z,J.4499		; yep,
	LD	(HL),A
	JR	J$44F2

J.4499:	LD	A,(D.6309)
	CP	05H	; 5 
	LD	C,10H	; 16 
	JR	Z,J$44A4
	LD	C,08H	; 8 
J$44A4:	INC	HL
	LD	A,C
	SUB	E
	LD	C,A
	LD	B,00H
	LD	D,H
	LD	E,L
	DEC	DE
	LDIR
	LD	A,(D.630F)		; current column
	CP	14
	JR	C,J$44BA
	DEC	A
	LD	(D.630F),A		; update current column
J$44BA:	LD	A,(D.6309)
	CP	05H	; 5 
	JR	C,J$44C7
	LD	(IY+15),20H	; " "
	JR	J$44CB

J$44C7:	LD	(IY+7),20H	; " "
J$44CB:	CALL	C.454F
	LD	B,13			; column = 13
	LD	A,(D.6309)
	LD	C,11			; line = 11
	CP	03H
	JR	Z,J.44E1
	LD	C,13			; line = 13
	CP	04H
	JR	Z,J.44E1
	LD	C,15			; line = 15
J.44E1:	LD	A,(D.6309)
	CP	05H
	LD	D,16			; size of string = 16
	JR	Z,J$44EC
	LD	D,8			; size of string = 8
J$44EC:	PUSH	IY
	POP	HL
	CALL	C.453B			; display string (with ? support)
J$44F2:	XOR	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

J$44F4:	LD	HL,I.64E5
	LD	A,(D.630F)		; current column
	SUB	10
	LD	E,A
	LD	D,00H
	ADD	HL,DE
	LD	A,(D.6304)		; last key
	CP	7FH			; DEL ?
	JR	Z,J.450E		; yep,
	CP	08H			; BS ?
	JR	Z,J.450E		; yep,
	LD	(HL),A
	JR	J$4539

J.450E:	INC	HL
	LD	A,15H
	SUB	B
	LD	C,A
	LD	B,00H
	LD	D,H
	LD	E,L
	DEC	DE
	LDIR
	LD	A,(D.630F)		; current column
	CP	10
	JR	C,J$4525
	DEC	A
	LD	(D.630F),A		; update current column
J$4525:	LD	A,20H
	LD	(D$64F9),A
	CALL	C.454F
	LD	B,9			; column = 9
	LD	C,4			; line = 4
	LD	D,21			; size of string = 21
	LD	HL,I.64E5
	CALL	C.453B			; display string (with ? support)
J$4539:	XOR	A
	RET

;	  Subroutine display string (with ? support)
;	     Inputs  D = size of string, B = column, C = line
;	     Outputs ________________________

C.453B:	LD	A,B
	LD	(D.6329),A		; update current column (? support)
	LD	A,C
	LD	(D.632A),A		; update current line (? support)
J$4543:	LD	A,(HL)			; character
	CALL	C.42DB			; display character (with ? support)
	INC	HL
	DEC	D
	JR	NZ,J$4543
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$454C:	XOR	A
	JR	J.4559

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.454F:	LD	A,0FH	; 15 
	JR	J.4559

?.4553:	LD	A,80H
	JR	J.4559

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4557:	LD	A,8FH
J.4559:	LD	(D.63B0),A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

J$455D:	LD	HL,I.64FF
	LD	BC,I$02F5
J.4563:	DEC	BC
	LD	A,B
	OR	C
	JR	Z,J.4586
	LD	A,(HL)
	AND	A
	JR	Z,J.4586
	CP	0DH	; 13 
	JR	Z,J$4573
	INC	HL
	JR	J.4563

J$4573:	PUSH	HL
	PUSH	BC
	LD	HL,I.67F2
	LD	DE,I$67F3
	LDDR
	POP	BC
	POP	HL
	DEC	BC
	INC	HL
	LD	(HL),0FFH
	INC	HL
	JR	J.4563

J.4586:	LD	HL,I.67F2
	LD	DE,I$67F4
	LD	BC,I$02F4
	LDDR
	LD	HL,I.64FF
	LD	D,H
	LD	E,L
	INC	DE
	INC	DE
J$4598:	LD	BC,0
J$459B:	INC	BC
	LD	A,(DE)
	AND	A
	JR	Z,J$45B0
	CP	0DH	; 13 
	JR	Z,J$45A7
	INC	DE
	JR	J$459B

J$45A7:	LD	(HL),C
	INC	HL
	LD	(HL),B
	LD	H,D
	LD	L,E
	INC	DE
	INC	DE
	JR	J$4598

J$45B0:	LD	(HL),00H
	INC	HL
	LD	(HL),00H
	LD	HL,I.64FF
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

J$45B9:	LD	A,(EXBRSA)
	AND	A			; MSX1 ?
	JR	NZ,J$45C7		; nope,
	LD	A,(D.640A)
	SLA	A
	SET	7,A
	RET

J$45C7:	LD	A,(D.640A)
	CP	03H
	JR	NC,J$45D6
	LD	A,(D.640A)
	SLA	A
	SET	7,A
	RET

J$45D6:	LD	A,(MODE)
	AND	04H			; 128 KB VRAM ?
	JR	Z,J$45E1		; nope,
	LD	B,18H
	JR	J$45E3

J$45E1:	LD	B,10H
J$45E3:	LD	A,(D.640B)
	LD	C,A
	LD	A,(D.640A)
	CP	03H
	CCF
	SBC	A,0
	SLA	A
	OR	C
	OR	B
	SET	7,A
	RET

;	  Subroutine generate RS232.INIT parameter block
;	     Inputs  ________________________
;	     Outputs ________________________

J$45F6:	LD	HL,I.63BA
	LD	A,(D.6419+2)
	LD	B,"7"
	AND	A			; 7 data bits ?
	JR	Z,J$4603		; yep,
	LD	B,"8"
J$4603:	LD	(HL),B
	LD	A,(D.6419+5)		; parity
	LD	B,"E"
	AND	A
	JR	Z,J.4614
	LD	B,"O"
	CP	01H	; 1 
	JR	Z,J.4614
	LD	B,"N"
J.4614:	INC	HL
	LD	(HL),B
	LD	A,(D.6419+4)		; stop bits
	LD	B,"1"
	AND	A
	JR	Z,J.4626
	LD	B,"2"
	CP	01H	; 1 
	JR	Z,J.4626
	LD	B,"3"
J.4626:	INC	HL
	LD	(HL),B
	LD	A,(D.6419+6)		; XON/XOFF
	LD	B,"X"
	AND	A
	JR	Z,J$4632
	LD	B,"N"
J$4632:	INC	HL
	LD	(HL),B
	INC	HL
	LD	(HL),"O"		; orginate
	LD	A,(D.6419+11)		; auto LF on receive
	LD	B,"A"
	AND	A
	JR	Z,J$4641
	LD	B,"N"
J$4641:	INC	HL
	LD	(HL),B
	LD	A,(D.6419+10)		; auto LF on send
	LD	B,"A"
	AND	A
	JR	Z,J$464D
	LD	B,"N"
J$464D:	INC	HL
	LD	(HL),B
	LD	A,(D.6419+3)		; SI/SO
	LD	B,"S"
	AND	A
	JR	Z,J$4659
	LD	B,"N"
J$4659:	INC	HL
	LD	(HL),B
	LD	A,(D.6419+1)		; modem speed
	LD	DE,300
	AND	A			; 300 bps ?
	JR	Z,J$4667		; yep,
	LD	DE,1200
J$4667:	INC	HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
	INC	HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
	XOR	A			; time out = forever
	INC	HL
	LD	(HL),A
	CALL	C.6000
	DEFB	0
	DEFW	C.4064			; get my slotid
	LD	B,A
	CALL	C.4887			; get dial mode
	LD	A,(D.6419+1)		; modem speed
	AND	A			; 300 bps ?
	LD	A,2
	JR	Z,J$4686		; yep, return modem type 2
	LD	A,3			; return modem type 3
J$4686:	LD	HL,I.63BA
	RET

;	  Subroutine get comterm mode
;	     Inputs  ________________________
;	     Outputs ________________________

J$468A:	LD	A,(EXBRSA)
	AND	A			; MSX1 ?
	JR	NZ,J$4698		; nope,
	LD	A,(D.6419+7)		; character mode
	SLA	A
	SET	7,A
	RET

J$4698:	LD	A,(D.6419+7)		; character mode
	CP	3
	JR	NC,J$46A6
	LD	A,(D.6419+7)		; character mode
	SLA	A
	JR	J$46CB

J$46A6:	LD	A,(MODE)
	AND	04H			; 128 KB VRAM ?
	JR	Z,J$46B1		; nope,
	LD	B,18H
	JR	J$46B3

J$46B1:	LD	B,10H
J$46B3:	LD	A,(D.6419+8)
	AND	A
	JR	Z,J$46BC
	XOR	A
	JR	J$46BE

J$46BC:	LD	A,1
J$46BE:	LD	C,A
	LD	A,(D.6419+7)		; character mode
	CP	3
	CCF
	SBC	A,0
	SLA	A
	OR	C
	OR	B
J$46CB:	PUSH	AF
	LD	A,(D.6419+9)
	RRCA
	RRCA
	RRCA
	LD	B,A
	POP	AF
	OR	B
	SET	7,A
	RET

;	  Subroutine change speaker state (speaker mode)
;	     Inputs  ________________________
;	     Outputs ________________________

J$46D8:	LD	A,(D.6341)		; speaker mode
	AND	A			; mode 0 ?
	JR	Z,J.46F4		; yep, speaker off
	CP	1			; mode 1 ?
	JR	Z,J.46F4		; yep, speaker on
	LD	C,A
	LD	A,(D.6341)
	AND	03H			; ignore b7-b2
	JR	Z,J.46F4		; mode xxxxxx00, speaker off
	CP	1			; mode xxxxxx01 ?
	JR	Z,J.46F4		; yep, speaker on
	LD	A,C
	CP	2			; mode 2 ?
	JR	Z,J.46F4		; yep, speaker on
	XOR	A			; speaker off
J.46F4:	CALL	C.6000
	DEFB	0
	DEFW	C.40D6			; MODEM.SPKCNT
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

J$46FB:	PUSH	AF
	LD	A,(D.6341)
	CP	2			; speaker mode 0 or 1 ?
	JR	C,J$470B		; yep, skip speaker
	LD	A,1			; speaker on
	CALL	C.6000
	DEFB	0
	DEFW	C.40D6			; MODEM.SPKCNT
J$470B:	LD	A,(EXBRSA)
	AND	A			; MSX1 ?
	JR	Z,J$471F		; yep,
	LD	IX,CHGMDP
	CALL	EXTROM			; ?? A does not contain a valid screen mode ??
	LD	C,9
	LD	B,00H			; 192 lines, vdp, non interlace, 60 Hz, dot clock output
	CALL	WRTVDP
J$471F:	CALL	INIGRP			; graphic screen mode
	LD	HL,FORCLR
	LD	(HL),15 
	INC	HL
	LD	(HL),4 
	INC	HL
	LD	(HL),14 
	CALL	CHGCLR			; change screen colors
	LD	A,1
	LD	(D$6400),A
	POP	AF
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

J$4737:	LD	A,(D$63CB)
	AND	A
	JP	NZ,J$4856
	CALL	C$4858
	LD	B,15H
	LD	IY,I.6498
	LD	HL,I.64E5
	CALL	C.4887			; get dial mode
J$474D:	LD	A,(HL)
	CALL	C.512D			; to upper
	CP	"H"
	JR	Z,J.4788
	CP	"T"
	JR	Z,J.4788
	CP	"<"
	JR	Z,J.4788
	CP	":"
	JR	Z,J.4788
	LD	A,C
	AND	A			; tone dial ?
	JR	NZ,J$4781		; nope,
	LD	A,(HL)
	CP	"*"
	JR	Z,J.4788
	CP	"#"
	JR	Z,J.4788
	CALL	C.512D			; to upper
	CP	"A"
	JR	Z,J.4788
	CP	"B"
	JR	Z,J.4788
	CP	"C"
	JR	Z,J.4788
	CP	"D"
	JR	Z,J.4788
J$4781:	LD	A,(HL)
	SUB	"0"
	CP	9+1
	JR	NC,J$4792
J.4788:	LD	A,(HL)
	LD	(IY+0),A
	XOR	A
	LD	(IY+1),A
	INC	IY
J$4792:	INC	HL
	DJNZ	J$474D
	LD	HL,I.6478
	LD	DE,I.6478
	LD	C,00H
	LD	B,08H	; 8 
J$479F:	LD	A,(HL)
	SUB	"0"
	CP	9+1
	JR	NC,J$47AA
	LD	A,(HL)
	LD	(DE),A
	INC	DE
	INC	C
J$47AA:	INC	HL
	DJNZ	J$479F
	LD	B,C
	LD	A,08H	; 8 
	SUB	B
	JR	Z,J$47B9
	LD	B,A
	XOR	A
J$47B5:	LD	(DE),A
	INC	DE
	DJNZ	J$47B5
J$47B9:	LD	B,C
	LD	DE,I.6498
	LD	HL,I.6478
J$47C0:	LD	A,(DE)
	CP	(HL)
	JR	NZ,J$47DA
	INC	DE
	INC	HL
	DEC	C
	JR	NZ,J$47C0
	LD	A,15H
	SUB	B
	LD	B,A
	LD	HL,I.6498
J$47D0:	LD	A,(DE)
	LD	(HL),A
	INC	HL
	INC	DE
	DJNZ	J$47D0
	XOR	A
	LD	(HL),A
	INC	DE
	LD	(HL),A
J$47DA:	LD	A,(D.6480)
	SUB	30H	; "0"
	CP	0AH	; 10 
	JP	NC,J.4831
	LD	HL,D.6480
	LD	DE,D.6480
	LD	C,00H
	LD	B,08H	; 8 
J$47EE:	LD	A,(HL)
	CP	3AH	; ":"
	JR	Z,J$47F9
	SUB	30H	; "0"
	CP	0AH	; 10 
	JR	NC,J$47FD
J$47F9:	LD	A,(HL)
	LD	(DE),A
	INC	DE
	INC	C
J$47FD:	INC	HL
	DJNZ	J$47EE
	LD	B,C
	LD	A,08H	; 8 
	SUB	B
	JR	Z,J$480C
	LD	B,A
	XOR	A
J$4808:	LD	(DE),A
	INC	DE
	DJNZ	J$4808
J$480C:	LD	A,C
	AND	A
	JR	Z,J.4831
	LD	D,C
	PUSH	DE
J$4812:	LD	B,1EH
	LD	HL,I$64B6
	LD	DE,I$64B5
J$481A:	LD	A,(DE)
	LD	(HL),A
	DEC	DE
	DEC	HL
	DJNZ	J$481A
	DEC	C
	JR	NZ,J$4812
	POP	DE
	LD	B,D
	LD	HL,I.6498
	LD	DE,D.6480
J$482B:	LD	A,(DE)
	LD	(HL),A
	INC	HL
	INC	DE
	DJNZ	J$482B
J.4831:	CALL	C.4887			; get dial mode
	PUSH	BC			; store dial mode
	CALL	C.6000
	DEFB	0
	DEFW	C.4064			; get my slotid
	POP	BC			; restore dial mode
	LD	B,A
	LD	HL,I.6498
	CALL	C.6000
	DEFB	0
	DEFW	C.40DC			; MODEM.DIALST
	CALL	KILBUF
	LD	HL,I.6498
	LD	D,H
	LD	E,L
	INC	DE
	LD	(HL),0
	LD	BC,30-1
	LDIR
J$4856:	XOR	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$4858:	CALL	C.6000
	DEFB	0
	DEFW	C.4070			; get line status
	AND	08H			; connect to modem ?
	RET	NZ			; yep, quit
	LD	A,1			; line = phone
	CALL	C.6000
	DEFB	0
	DEFW	C.40D9			; MODEM.LINSEL
	CALL	C.4887			; get dial mode
	LD	A,"<"
	CALL	C.6000
	DEFB	0
	DEFW	C.40DF			; MODEM.DIALCH
	XOR	A			; line = modem
	CALL	C.6000
	DEFB	0
	DEFW	C.40D9			; MODEM.LINSEL
	CALL	C.6000
	DEFB	0
	DEFW	C.4070			; get line status
	AND	03H			; b1-b0
	LD	(D$6429),A
	RET

;	  Subroutine get dial mode
;	     Inputs  ________________________
;	     Outputs ________________________

C.4887:	LD	A,(D.6342)
	AND	A			; mode 0 ?
	JR	Z,J.48AB		; yep, return 0
	CP	1			; mode 1 ?
	LD	C,2
	JR	Z,J.48AC		; yep, return 2
	CP	2			; mode 2 ?
	LD	C,3
	JR	Z,J.48AC		; yep, return 3
	CP	3			; mode 3 ?
	LD	C,4
	JR	Z,J.48AC		; yep, return 4
	CALL	C.6000
	DEFB	0
	DEFW	C.4070			; get line status
	AND	04H			; b2
	JR	Z,J.48AB
	LD	A,2
J.48AB:	LD	C,A
J.48AC:	XOR	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

J$48AE:	LD	A,(D$6300)
	CP	3
	JP	NZ,J$49AE
	LD	A,(D.6308)
	PUSH	AF			; store item
	LD	A,(D.6419+0)
	AND	A			; item 0 zero value ?
	JR	NZ,J$48C6		; nope,
	CALL	C.49E5
	JP	J.4952

J$48C6:	LD	A,(D.6308)
	AND	A			; item = 0 ?
	JR	NZ,J$48D1		; nope,
	LD	A,1
	CALL	C.49E5
J$48D1:	LD	A,(D$632C)
	AND	A
	JR	NZ,J$48DC
	LD	A,9
	CALL	C.49E5
J$48DC:	LD	A,(D.6419+7)		; character mode
	CP	3
	JR	NC,J$4900
	LD	A,1
	LD	(D.6419+8),A
	LD	A,(D.6419+7)		; character mode
	CP	2
	JR	NZ,J$48F6
	LD	A,8
	CALL	C.49E5
	JR	J.4905

J$48F6:	LD	A,2
	LD	(D.6419+9),A
	CALL	C.49E5
	JR	J.4905

J$4900:	LD	A,3
	CALL	C.49E5
J.4905:	LD	A,(D.6419+2)
	AND	A			; 7 data bits ?
	JR	Z,J$4917		; yep,
	LD	A,1			; no SI/SO
	LD	(D.6419+3),A
	LD	A,4
	CALL	C.49E5
	JR	J$491C

J$4917:	LD	A,5
	CALL	C.49E5
J$491C:	LD	A,(EXBRSA)
	AND	A			; MSX1 ?
	JR	NZ,J$492E		; nope,
	LD	A,1
	LD	(D.6419+8),A
	LD	A,6
	CALL	C.49E5
	JR	J.4952

J$492E:	LD	A,(D.6419+7)		; character mode
	CP	3
	JR	NC,J$494D
	LD	A,1
	LD	(D.6419+8),A
	LD	A,2
	CALL	C.49E5
	LD	A,(D.6419+7)		; character mode
	CP	2
	JR	NZ,J.4952
	LD	A,8
	CALL	C.49E5
	JR	J.4952

J$494D:	LD	A,7
	CALL	C.49E5
J.4952:	LD	A,(D.6308)
	AND	A			; item = 0 ?
	JR	NZ,J$4980		; nope,
	XOR	A			; item = 0
	LD	B,10H
J$495B:	LD	(D.6308),A		; update item
	PUSH	BC
	PUSH	AF
	CALL	C.4E89
	POP	AF
	POP	BC
	INC	A
	DJNZ	J$495B
	LD	A,13
	LD	(D.6308),A		; item = 13
	LD	HL,D.6419+13
	CALL	C.43B6			; display timer value
	LD	A,14
	LD	(D.6308),A		; item = 14
	LD	HL,D.6419+14
	CALL	C.43B6			; display timer value
	JR	J$49A8

J$4980:	LD	A,0
	LD	(D.6308),A		; item = 0
	CALL	C.4E89
	LD	A,1
	LD	(D.6308),A		; item = 1
	CALL	C.4E89
	LD	A,3
	LD	(D.6308),A		; item = 3
	CALL	C.4E89
	LD	A,8
	LD	(D.6308),A		; item = 8
	CALL	C.4E89
	LD	A,9
	LD	(D.6308),A		; item = 9
	CALL	C.4E89
J$49A8:	POP	AF
	LD	(D.6308),A		; update item
	XOR	A
	RET

J$49AE:	LD	A,(EXBRSA)
	AND	A			; MSX1 ?
	JR	NZ,J$49BF		; nope,
J$49B4:	XOR	A
	LD	(D.640B),A
	LD	A,10
	CALL	C.49E5
	JR	J$49CB

J$49BF:	LD	A,(D.640A)
	CP	03H
	JR	C,J$49B4
	LD	A,11
	CALL	C.49E5
J$49CB:	LD	A,(D.630A)
	PUSH	AF
	XOR	A
	LD	B,03H	; 3 
J$49D2:	LD	(D.630A),A
	PUSH	BC
	PUSH	AF
	CALL	C.4F9E
	POP	AF
	POP	BC
	INC	A
	DJNZ	J$49D2
	POP	AF
	LD	(D.630A),A
	XOR	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.49E5:	PUSH	AF
	ADD	A,A
	LD	HL,I$4A19
	LD	D,0
	LD	E,A
	ADD	HL,DE
	LD	E,(HL)
	INC	HL
	LD	D,(HL)			; VRAM address
	POP	AF
	PUSH	DE			; store VRAM address
	ADD	A,A
	LD	HL,I$4A31
	LD	D,0
	LD	E,A
	ADD	HL,DE
	POP	DE			; restore VRAM address
	LD	A,(HL)
	LD	B,A
	INC	HL
	LD	A,(HL)
	AND	A
	JR	NZ,J.4A0E
J$4A03:	CALL	C$4A49
	LD	HL,256
	ADD	HL,DE
	EX	DE,HL			; update VRAM address
	DJNZ	J$4A03
	RET

J.4A0E:	CALL	C$4A5C
	LD	HL,256
	ADD	HL,DE
	EX	DE,HL
	DJNZ	J.4A0E
	RET

I$4A19:	DEFW	5*(32*8) + 13*8
	DEFW	5*(32*8) + 13*8
	DEFW	12*(32*8) + 13*8
	DEFW	12*(32*8) + 13*8
	DEFW	7*(32*8) + 13*8
	DEFW	7*(32*8) + 13*8
	DEFW	12*(32*8) + 13*8
	DEFW	12*(32*8) + 13*8
	DEFW	13*(32*8) + 13*8
	DEFW	4*(32*8) + 13*8
	DEFW	7*(32*8) + 13*8
	DEFW	7*(32*8) + 13*8

I$4A31:	DEFB	15,0
	DEFB	15,1
	DEFB	2,0
	DEFB	2,1
	DEFB	1,0
	DEFB	1,1
	DEFB	1,0
	DEFB	1,1
	DEFB	1,1
	DEFB	2,0
	DEFB	1,0
	DEFB	1,1

;	  Subroutine __________________________
;	     Inputs  DE = VRAM address
;	     Outputs ________________________

C$4A49:	PUSH	BC
	PUSH	DE
	LD	B,18
J$4A4D:	LD	A,35H
	CALL	C.4D51
	LD	A,35H
	CALL	C.4D63
	DJNZ	J$4A4D
	POP	DE
	POP	BC
	RET

;	  Subroutine __________________________
;	     Inputs  DE = VRAM address
;	     Outputs ________________________

C$4A5C:	PUSH	BC
	PUSH	DE
	LD	B,18
J$4A60:	LD	A,36H
	CALL	C.4D51
	LD	A,36H
	CALL	C.4D63
	DJNZ	J$4A60
	POP	DE
	POP	BC
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

J$4A6F:	LD	HL,I.63B3
	XOR	A
	LD	B,5
J$4A75:	LD	(HL),A
	INC	HL
	DJNZ	J$4A75
	CALL	C$4B0D
	LD	HL,I$4AFD
	LD	IX,I.632F
	LD	IY,I.63B3
	XOR	A
	LD	(IY+0),A
	LD	(IY+1),A
	LD	(IY+2),A
	LD	B,06H	; 6 
	LD	D,03H	; 3 
J.4A95:	LD	A,(IX+0)
	AND	03H
	LD	C,(HL)
J$4A9B:	DEC	C
	JR	Z,J$4AA2
	SLA	A
	JR	J$4A9B

J$4AA2:	OR	(IY+0)
	LD	(IY+0),A
	INC	IX
	INC	HL
	DJNZ	J.4A95
	DEC	D
	JR	Z,J$4ABD
	LD	A,D
	LD	B,6
	CP	1
	JR	Z,J$4AB9
	LD	B,4
J$4AB9:	INC	IY
	JR	J.4A95

J$4ABD:	LD	A,(D.633C)
	LD	(D.63B6),A
	LD	A,(D.633D)
	LD	(D.63B7),A
	LD	A,(D.6419+1)		; modem speed
	RRA
	RRA
	RRA				; b0->b5
	LD	B,A
	LD	A,(D.63B4)
	OR	B
	LD	(D.63B4),A		; update with modem speed
	LD	A,(D.6419+15)
	RRA
	RRA
	RRA				; b0->b5
	LD	B,A
	LD	A,(D.63B5)
	OR	B
	LD	(D.63B5),A
	LD	A,(D.642D)
	AND	A
	JR	Z,J$4AF3
	LD	A,(D.63B5)
	SET	7,A			; set b7
	LD	(D.63B5),A
J$4AF3:	LD	HL,I.63B3
	LD	B,5
J$4AF8:	INC	(HL)
	INC	HL
	DJNZ	J$4AF8
	RET

I$4AFD:	LD	BC,I.0402
	LD	B,07H	; 7 
	EX	AF,AF'
	LD	BC,I.0402
	LD	B,01H	; 1 
	INC	BC
	INC	B
	ADD	HL,BC
	ADD	HL,BC
	LD	B,0DDH
C$4B0D	EQU	$-1
	LD	HL,D.6419		; value per item table
	LD	IY,I.632F
	LD	A,(IX+0)
	LD	(IY+15),A
	LD	A,(IX+2)
	LD	(IY+0),A
	LD	A,(IX+3)
	LD	(IY+6),A
	LD	A,(IX+4)
	LD	(IY+2),A
	LD	A,(IX+5)
	LD	(IY+1),A
	LD	A,(IX+6)
	LD	(IY+3),A
	LD	A,(IX+8)
	LD	(IY+9),A
	LD	A,(IX+9)
	LD	(IY+7),A
	LD	A,(IX+10)
	LD	(IY+5),A
	LD	A,(IX+11)
	LD	(IY+4),A
	LD	A,(IX+12)
	LD	(IY+12),A
	LD	A,(IX+13)
	LD	(IY+13),A
	LD	A,(IX+14)
	LD	(IY+14),A
	LD	A,01H	; 1 
	LD	(IY+11),A
	LD	A,(EXBRSA)
	AND	A			; MSX1 ?
	JR	NZ,J$4B73		; nope,
	LD	(IY+10),A
	JR	J$4B93

J$4B73:	LD	A,(IX+7)
	CP	03H	; 3 
	JR	NC,J$4B7D
	XOR	A
	JR	J.4B90

J$4B7D:	CP	04H	; 4 
	LD	A,02H	; 2 
	JR	Z,J.4B90
	LD	A,(MODE)
	AND	04H			; 128 KB VRAM ?
	JR	Z,J$4B8E		; nope,
	LD	A,03H	; 3 
	JR	J.4B90

J$4B8E:	LD	A,02H	; 2 
J.4B90:	LD	(IY+10),A
J$4B93:	XOR	A
	LD	(D.642D),A
	LD	A,(IX+7)
	CP	02H	; 2 
	JR	C,J.4BB1
	CP	04H	; 4 
	JR	NC,J$4BAF
	CP	03H	; 3 
	JR	NZ,J$4BAB
	LD	A,1
	LD	(D.642D),A
J$4BAB:	LD	A,02H	; 2 
	JR	J.4BB1

J$4BAF:	LD	A,03H	; 3 
J.4BB1:	LD	(IY+8),A
	XOR	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

J$4BB6:	LD	HL,I.632F
	LD	D,H
	LD	E,L
	INC	DE
	LD	(HL),0
	LD	BC,16-1
	LDIR
	LD	HL,I.63B3
	LD	B,5
J$4BC8:	DEC	(HL)
	INC	HL
	DJNZ	J$4BC8
	LD	DE,I.632F
	LD	HL,I.63B3
	LD	B,1			; 1 bit
	CALL	C.4C41			; convert bits to values
	LD	B,2			; 2x2 bits
	CALL	C.4C50			; convert 2 bits to values
	LD	B,3			; 3 bits
	CALL	C.4C41			; convert bits to values
	INC	HL
	LD	B,1			; 1 bit
	CALL	C.4C41			; convert bits to values
	LD	B,2			; 2x2 bits
	CALL	C.4C50			; convert 2 bits to values
	LD	B,1			; 1 bit
	CALL	C.4C41			; convert bits to values
	RRC	(HL)
	RRC	(HL)
	INC	HL
	LD	B,1			; 1x2 bit
	CALL	C.4C50			; convert 2 bits to values
	LD	B,1			; 1 bit
	CALL	C.4C41			; convert bits to values
	LD	B,1			; 1x2 bit 
	CALL	C.4C50			; convert 2 bits to values
	INC	DE
	INC	DE
	LD	B,1			; 1 bit
	CALL	C.4C41			; convert bits to values
	RRC	(HL)
	RRC	(HL)
	LD	A,(D.63B6)
	LD	(D.633C),A
	LD	A,(D.63B7)
	LD	(D.633D),A
	CALL	C$4C6F
	LD	A,(D.63B4)
	AND	40H			; 300 bps ?
	JR	Z,J$4C28		; yep, 300 bps
	LD	A,1			; 1200 bps
J$4C28:	LD	(D.6419+1),A
	LD	A,(D.63B5)
	AND	40H			; b6
	JR	Z,J$4C34
	LD	A,1
J$4C34:	LD	(D.6419+15),A
	LD	HL,I.63B3
	LD	B,5
J$4C3C:	INC	(HL)
	INC	HL
	DJNZ	J$4C3C
	RET

;	  Subroutine convert bits to values
;	     Inputs  ________________________
;	     Outputs ________________________

C.4C41:	RRC	(HL)
	JR	C,J$4C48
	XOR	A
	JR	J$4C4A

J$4C48:	LD	A,1
J$4C4A:	LD	(DE),A
	INC	DE
	DEC	B
	JR	NZ,C.4C41
	RET

;	  Subroutine convert 2 bits to values
;	     Inputs  ________________________
;	     Outputs ________________________

C.4C50:	RRC	(HL)
	JR	C,J$4C5B
	RRC	(HL)
	JR	C,J$4C67
	XOR	A
	JR	J.4C69

J$4C5B:	RRC	(HL)
	JR	C,J$4C63
	LD	A,1
	JR	J.4C69

J$4C63:	LD	A,3
	JR	J.4C69

J$4C67:	LD	A,2
J.4C69:	LD	(DE),A
	INC	DE
	DEC	B
	JR	NZ,C.4C50
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$4C6F:	LD	IX,I.632F
	LD	IY,D.6419		; value per item table
	LD	A,(IX+0)
	LD	(IY+2),A		; data bits
	LD	A,(IX+1)
	LD	(IY+5),A		; parity
	LD	A,(IX+2)
	LD	(IY+4),A		; stop bits
	LD	A,(IX+3)
	LD	(IY+6),A		; XON/XOFF
	LD	A,(IX+4)
	LD	(IY+11),A		; auto LF on receive
	LD	A,(IX+5)
	LD	(IY+10),A		; auto LF on send
	LD	A,(IX+6)
	LD	(IY+3),A		; SI/SO
	LD	A,(IX+7)
	LD	(IY+9),A
	LD	A,(IX+9)
	LD	(IY+8),A
	LD	A,(IX+12)
	LD	(IY+12),A
	LD	A,(IX+13)
	LD	(IY+13),A		; timer1
	LD	A,(IX+14)
	LD	(IY+14),A		; timer2
	LD	A,(IX+15)
	LD	(IY+0),A
	CALL	C$4CEE
	LD	A,(IX+8)
	CP	2
	JR	C,J.4CEA
	CP	03H
	JR	Z,J$4CE8
	LD	A,(D.63B5)
	BIT	7,A			; b7
	JR	Z,J.4CE4
	LD	A,(EXBRSA)
	AND	A			; MSX1 ?
	JR	Z,J.4CE4		; yep,
	LD	A,3
	JR	J.4CEA

J.4CE4:	LD	A,2
	JR	J.4CEA

J$4CE8:	LD	A,4
J.4CEA:	LD	(IY+7),A		; character mode
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$4CEE:	LD	A,(IX+8)
	CP	2
	RET	C
	CALL	C.4F40			; check if JIS1
	JR	NZ,J$4D02		; nope,
	LD	A,(EXBRSA)
	AND	A			; MSX1 ?
	RET	NZ			; nope, quit
	LD	A,2
	JR	J$4D03

J$4D02:	XOR	A
J$4D03:	LD	(IX+8),A
	RET

;	  Subroutine multiply by 8
;	     Inputs  ________________________
;	     Outputs ________________________

C.4D07:	LD	H,0
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	RET

;	  Subroutine setup VDP for VRAM write
;	     Inputs  ________________________
;	     Outputs ________________________

C$4D0E:	LD	A,(D$6318)
	INC	A
	LD	C,A
	LD	A,L
	OUT	(C),A
	LD	A,H
	OR	40H
	OUT	(C),A
	RET

;	  Subroutine write data to VRAM
;	     Inputs  DE = VRAM address, HL = source address, BC = size
;	     Outputs ________________________

C.4D1C:	PUSH	DE
	DI
	PUSH	BC
	EX	DE,HL
	CALL	C$4D0E			; setup VDP for VRAM write
	DEC	C
	POP	HL
J$4D25:	LD	A,(DE)
	OUT	(C),A
	INC	DE
	DEC	HL
	LD	A,H
	OR	L
	JR	NZ,J$4D25
	EI
	POP	DE
	RET

J.4D31:	LD	B,C
J$4D32:	LD	A,(HL)
	CP	0FFH			; end marker ?
	RET	Z			; yep, quit
	CALL	C.4D51
	LD	A,(HL)
	CALL	C.4D63
	INC	HL
	DEC	B
	JR	NZ,J$4D32
	LD	A,32
	SUB	C
	ADD	A,A
	ADD	A,A
	ADD	A,A
	PUSH	HL
	LD	L,A
	LD	H,0
	ADD	HL,DE
	EX	DE,HL			; update VRAM address
	POP	HL
	JP	J.4D31			; continue

;	  Subroutine __________________________
;	     Inputs  DE = VRAM address
;	     Outputs ________________________

C.4D51:	PUSH	HL
	PUSH	BC
	CALL	C.4D07			; multiply by 8
	LD	BC,I$587A
	ADD	HL,BC
	LD	BC,8
	CALL	C.4D1C			; write data to VRAM
	POP	BC
	POP	HL
	RET

;	  Subroutine __________________________
;	     Inputs  DE = VRAM address
;	     Outputs ________________________

C.4D63:	PUSH	HL
	PUSH	BC
	CALL	C.4D07			; multiply by 8
	LD	BC,I$5BFA
	ADD	HL,BC
	LD	BC,8
	PUSH	DE
	PUSH	HL
	LD	HL,2000H
	ADD	HL,DE
	EX	DE,HL
	POP	HL
	CALL	C.4D1C			; write data to VRAM
	POP	DE
	LD	HL,8
	ADD	HL,DE
	EX	DE,HL
	POP	BC
	POP	HL
	RET

;	  Subroutine display string
;	     Inputs  ________________________
;	     Outputs ________________________

C.4D83:	LD	A,(HL)
	CP	0FFH			; end of table ?
	RET	Z			; yep, quit
	LD	(D.630F),A		; update current column
	INC	HL
	LD	A,(HL)
	LD	(D.6310),A		; update current line
	INC	HL
J$4D90:	LD	A,(HL)
	CP	0FFH			; end of table ?
	JR	Z,J$4D9B		; yep,
	CALL	C.427E			; display character
	INC	HL
	JR	J$4D90

J$4D9B:	INC	HL
	JR	C.4D83			; continue

;	  Subroutine display telcom welcome message
;	     Inputs  ________________________
;	     Outputs ________________________

J$4D9E:	CALL	DISSCR
	LD	DE,0			; VRAM address
	LD	BC,768
J$4DA7:	LD	A,30H
	CALL	C.4D51
	LD	A,30H
	CALL	C.4D63
	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,J$4DA7
	LD	HL,I$4DBF
	CALL	C.4D83			; display string
	JP	ENASCR

I$4DBF:	DEFB	11,5
	DEFB	"MSX-TELCOM"
	DEFB	0FFH
	DEFB	6,8
	DEFB	"(C)  COPYRIGHT 1987"
	DEFB	0FFH
	DEFB	8,11
	DEFB	"ASCII & SONY CORP."
	DEFB	0FFH
	DEFB	0FFH

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

J$4DF8:	LD	DE,10*(32*8) + 5*8	; VRAM address
	LD	B,2
J$4DFD:	LD	C,21
J$4DFF:	LD	A,33H
	CALL	C.4D51
	LD	A,33H
	CALL	C.4D63
	DEC	C
	JR	NZ,J$4DFF
	LD	HL,88
J$4E0F:	ADD	HL,DE
	EX	DE,HL
J$4E11:	DEC	B
	JR	NZ,J$4DFD
	LD	HL,I$4E1A
	JP	C.4D83			; display string

I$4E1A:	DEFB	6,10
	DEFB	99H,0FDH,9BH,98H
	DEFB	0FFH
	DEFB	0FFH

;	  Subroutine telcom function key definition
;	     Inputs  ________________________
;	     Outputs ________________________

J$4E22:	PUSH	AF
	LD	HL,FNKSTR
	LD	DE,16-1
	LD	B,3			; F1-F3
	LD	A,0FH
J$4E2D:	LD	(HL),A
	INC	HL
	LD	(HL),0
	ADD	HL,DE
	INC	A
	DJNZ	J$4E2D
J$4E35:	LD	B,5			; F4-F8
	LD	A,13H
J$4E39:	LD	(HL),A
	INC	HL
	LD	(HL),0
	ADD	HL,DE
	INC	A
	DJNZ	J$4E39
	LD	B,2			; F9-F10
	LD	A,19H
J$4E45:	LD	(HL),A
	INC	HL
	LD	(HL),0
	ADD	HL,DE
	INC	A
	DJNZ	J$4E45
	POP	AF
	RET

;	  Subroutine restore function key definition (two bytes)
;	     Inputs  ________________________
;	     Outputs ________________________

J$4E4F:	LD	HL,FNKSTR
	LD	IX,I.63EB
	LD	DE,16-1
	LD	B,10
J$4E5B:	LD	A,(IX+0)
	LD	(HL),A
	INC	HL
	INC	IX
	LD	A,(IX+0)
	LD	(HL),A
	INC	IX
	ADD	HL,DE
	DJNZ	J$4E5B
	RET

;	  Subroutine store function key definition (two bytes)
;	     Inputs  ________________________
;	     Outputs ________________________

J$4E6C:	LD	HL,FNKSTR
	LD	IX,I.63EB
	LD	DE,16-1
	LD	B,10
J$4E78:	LD	A,(HL)
	LD	(IX+0),A
	INC	HL
	INC	IX
	LD	A,(HL)
	LD	(IX+0),A
	INC	IX
	ADD	HL,DE
	DJNZ	J$4E78
	RET

;	  Subroutine display item value
;	     Inputs  ________________________
;	     Outputs ________________________

C.4E89:	LD	HL,D.6419		; value per item table
	LD	A,(D.6308)
	CP	13			; item = 13 ?
	RET	Z			; yep, quit
	CP	14			; item = 14 ?
	RET	Z			; yep, quit
	LD	D,0
	LD	E,A
	ADD	HL,DE
	LD	B,(HL)			; item value
	CALL	C.4F40			; check if JIS1
	JR	Z,J$4EA4		; yep,
	LD	HL,I$4EE0		; ANK
	JR	J.4EB2

J$4EA4:	LD	A,(EXBRSA)
	AND	A			; MSX1 ?
	JR	Z,J$4EAF		; yep,
	LD	HL,I$4F20		; MSX2 JIS
	JR	J.4EB2

J$4EAF:	LD	HL,I$4F00		; MSX1 JIS
J.4EB2:	LD	A,(D.6308)		; item
	ADD	A,A
	LD	E,A
	ADD	HL,DE
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	EX	DE,HL
	LD	A,B
	ADD	A,A
	ADD	A,A			; 4
	LD	B,A
	ADD	A,A
	ADD	A,B			; *12
	LD	D,0
	LD	E,A
	ADD	HL,DE
	LD	A,15
	LD	(D.630F),A		; current column = 15
	LD	A,(D.6308)		; item
	ADD	A,4
	LD	(D.6310),A		; update current line
J$4ED3:	LD	A,(HL)
	CP	0FFH
	RET	Z
	CALL	C.6000
	DEFB	7
	DEFW	C.404C			; display character
	INC	HL
	JR	J$4ED3			; continue

; ANK

I$4EE0:	DEFW	I.55D0			; item 0
	DEFW	I.55E8			; item 1
	DEFW	I.5600			; item 2
	DEFW	I.5618			; item 3
	DEFW	I.5630			; item 4
	DEFW	I.5654			; item 5
	DEFW	I.5618			; item 6
	DEFW	I.575C			; item 7
	DEFW	I.5744			; item 8
	DEFW	I.5678			; item 9
	DEFW	I.5774			; item 10
	DEFW	I.56E4			; item 11
	DEFW	I.56FC			; item 12
	DEFW	I.578C			; item 13
	DEFW	I.578C			; item 14
	DEFW	I.5744			; item 15

; MSX1 JIS1

I$4F00:	DEFW	I.55D0
	DEFW	I.55E8
	DEFW	I.5600
	DEFW	I.5618
	DEFW	I.5630
	DEFW	I.5654
	DEFW	I.5618
	DEFW	I.5720
	DEFW	I.5744
	DEFW	I.5678
	DEFW	I.5774
	DEFW	I.56E4
	DEFW	I.56FC
	DEFW	I.578C
	DEFW	I.578C
	DEFW	I.5744

; MSX2 JIS1

I$4F20:	DEFW	I.55D0
	DEFW	I.55E8
	DEFW	I.5600
	DEFW	I.5618
	DEFW	I.5630
	DEFW	I.5654
	DEFW	I.5618
	DEFW	I.56A8
	DEFW	I.5744
	DEFW	I.5678
	DEFW	I.5774
	DEFW	I.56E4
	DEFW	I.56FC
	DEFW	I.578C
	DEFW	I.578C
	DEFW	I.5744

;	  Subroutine check if JIS1
;	     Inputs  ________________________
;	     Outputs ________________________

C.4F40:	PUSH	BC
	LD	HL,I$4F57
J$4F44:	XOR	A
	OUT	(0D8H),A
	LD	A,2
	OUT	(0D9H),A
	LD	B,8
J$4F4D:	IN	A,(0D9H)
I.4F4F:	CP	(HL)
	JR	NZ,J$4F55
	INC	HL
	DJNZ	J$4F4D
J$4F55:	POP	BC
	RET

I$4F57:	DEFB	00H
	DEFB	40H
	DEFB	20H
	DEFB	10H
	DEFB	08H
	DEFB	04H
	DEFB	02H
	DEFB	01H

;	  Subroutine display mode value
;	     Inputs  ________________________
;	     Outputs ________________________

J$4F5F:	LD	HL,D.6340
	LD	A,(D.6309)
	LD	D,0
	LD	E,A
	ADD	HL,DE
	LD	B,(HL)			; get mode value
	LD	HL,I$4F98
	LD	A,(D.6309)
	ADD	A,A
	LD	E,A
	ADD	HL,DE
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	EX	DE,HL			; get pointer to value strings
	LD	A,B
	ADD	A,A
	ADD	A,A
	ADD	A,A
	ADD	A,B			; *9
	LD	D,0
	LD	E,A
	ADD	HL,DE			; pointer to value string
	LD	A,16
	LD	(D.630F),A		; current column = 16
	LD	A,(D.6309)
	ADD	A,A
	ADD	A,5
	LD	(D.6310),A		; update current line
J$4F8E:	LD	A,(HL)
	CP	0FFH			; end of table ?
	RET	Z			; yep, quit
	CALL	C.427E			; display character
	INC	HL
	JR	J$4F8E

I$4F98:	DEFW	I.578E			; item 0,
	DEFW	I.57A0			; item 2, speaker mode
	DEFW	I.57BB			; item 3, dial mode

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4F9E:	LD	HL,D.640A
	LD	A,(D.630A)
	LD	D,0
	LD	E,A
	ADD	HL,DE
	LD	B,(HL)
	CALL	C.4F40			; check if JIS1
	JR	Z,J$4FB3		; yep,
	LD	HL,I.4FED		; non JIS1
	JR	J.4FC1

J$4FB3:	LD	A,(EXBRSA)
	AND	A			; MSX1 ?
	JR	Z,J$4FBE		; yep,
	LD	HL,I.4FF9		; MSX2 JIS1
	JR	J.4FC1

J$4FBE:	LD	HL,I.4FF3		; MSX1 JIS1
J.4FC1:	LD	A,(D.630A)
	ADD	A,A
	LD	E,A
	ADD	HL,DE
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	EX	DE,HL
	LD	A,B
	ADD	A,A
	ADD	A,A
	LD	B,A
	ADD	A,A
	ADD	A,B
	LD	D,00H
	LD	E,A
	ADD	HL,DE
	LD	A,14
	LD	(D.630F),A		; current column = 14
	LD	A,(D.630A)
	ADD	A,A
	ADD	A,5
	LD	(D.6310),A		; update current line
J$4FE3:	LD	A,(HL)
	CP	0FFH			; end of table ?
	RET	Z			; yep, quit
	CALL	C.427E			; display character
	INC	HL
	JR	J$4FE3

; non JIS1

I.4FED:	DEFW	I.5861
	DEFW	I.5825
	DEFW	I.5825

; MSX1 JIS1

I.4FF3:	DEFW	I.583D
	DEFW	I.5825
	DEFW	I.5825

; MSX2 JIS1

I.4FF9:	DEFW	I.57E9
	DEFW	I.5825
	DEFW	I.5825

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

J$4FFF:	CALL	C.6000
	DEFB	0
	DEFW	C.4097
	LD	A,H
	LD	(D.6412),A
	LD	A,L
	SUB	02H
	LD	(D.6413),A
	LD	HL,0
	LD	(D.6414),HL
	LD	(D.6416),HL
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

J$5019:	LD	B,A
	LD	A,(D$640C)
	OR	A			; output to printer ?
	LD	A,B
	JP	NZ,J.50AC		; yep,
	LD	HL,D.6414
	CP	0CH
	JR	Z,J$504B
	CP	7FH
	JR	Z,J$5053
	CP	08H
	JR	Z,J$5059
	CP	0DH
	JR	Z,J.5060
	CP	0AH
	JR	Z,J$5064
	CP	09H
	JR	Z,J$5069
	CP	20H
	JR	C,J.5081
	INC	(HL)
	XOR	A
	LD	(D.6416),A
	LD	(D.6417),A
	JR	J.5081

J$504B:	LD	A,(D.6413)
	LD	(D.6415),A
	JR	J.5060

J$5053:	LD	A,(D$6410)
	OR	A
	JR	Z,J.5081
J$5059:	LD	A,(HL)
	OR	A
	JR	Z,J.5081
	DEC	(HL)
	JR	J.5081

J.5060:	LD	(HL),0
	JR	J.5081

J$5064:	INC	HL
	INC	(HL)
	DEC	HL
	JR	J.5081

J$5069:	XOR	A
	LD	(D.6416),A
	LD	(D.6417),A
	LD	A,(HL)
	AND	07H
	LD	C,A
	LD	A,08H
	SUB	C
	ADD	A,(HL)
	LD	C,A
	LD	A,(D.6412)
	CP	C
	LD	(HL),C
	JR	NC,J.5081
	LD	(HL),A
J.5081:	LD	C,(HL)
	LD	A,(D.6412)
	CP	C
	LD	A,(D.6415)
	JR	NC,J$5091
	LD	(HL),1
	INC	A
	LD	(D.6415),A
J$5091:	LD	C,A
	LD	A,(D.6413)
	SUB	C
	OR	A
	PUSH	BC
	CALL	Z,C$50BB
	POP	BC
	RET	C
	LD	A,B
	CP	0DH
	LD	HL,D.6416
	JR	Z,J.50B4
	CP	0AH
	LD	HL,D.6417
	JR	Z,J.50B4
J.50AC:	CALL	C.6000
	DEFB	0
	DEFW	C.4088			; echo to screen
	OR	A
	RET

J.50B4:	INC	(HL)
	DEC	(HL)
	JR	Z,J.50AC
	LD	(HL),0
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$50BB:	LD	HL,I$50F5
	CALL	C.511C			; echo string to screen
	CALL	C.50CD
	PUSH	AF
	LD	HL,I$5116
	CALL	C.511C			; echo string to screen
	POP	AF
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.50CD:	CALL	KILBUF
	CALL	C$512A			; get key (to upper)
	CP	0DH
	JR	Z,J$50E1
	CP	"Q"
	SCF
	RET	Z
	SUB	" "
	JR	Z,J$50E5
	JR	C.50CD

J$50E1:	LD	A,(D.6413)
	DEC	A
J$50E5:	LD	(D.6415),A
	LD	A,(D.6414)
	OR	A
	RET	NZ
	CPL
	LD	(D.6416),A
	LD	(D.6417),A
	RET

I$50F5:	DEC	C
	LD	A,(BC)
	DEC	DE
	LD	E,E
	SCF
	LD	L,L
	DEC	L
	DEC	L
	JR	NZ,J.514C
	LD	L,A
	LD	(HL),D
	LD	H,L
	JR	NZ,J$5131
	DEC	L
	JR	NZ,J$512F
	JR	NZ,J.514C
	LD	D,D
	CPL
	LD	D,E
	LD	D,B
	CPL
	LD	D,C
	JR	NZ,J$513A
	DEC	DE
	LD	E,E
	JR	NC,J$5182
	NOP
I$5116:	DEC	C
	DEC	DE
	LD	E,E
	JR	NC,J$5166
	NOP

;	  Subroutine echo string to screen
;	     Inputs  ________________________
;	     Outputs ________________________

C.511C:	LD	A,(HL)
	OR	A
	RET	Z
	PUSH	HL
	CALL	C.6000
	DEFB	0
	DEFW	C.4088			; echo to screen
	POP	HL
	INC	HL
	JR	C.511C

;	  Subroutine get key (to upper)
;	     Inputs  ________________________
;	     Outputs ________________________

C$512A:	CALL	CHGET

;	  Subroutine to upper
;	     Inputs  ________________________
;	     Outputs ________________________

C.512D:	CP	"a"
J$512F:	RET	C
	CP	"z"+1
	RET	NC
	SUB	20H
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

J$5136:	LD	C,A			; store key
	CP	"*"
	JR	Z,J.5144
	CP	"#"
	JR	Z,J.5144
	SUB	"0"
	CP	9+1
	RET	NC
J.5144:	PUSH	BC
	CALL	C$523B
	POP	BC
	PUSH	AF
	LD	A,C			; restore key
	LD	C,0
	CALL	C.6000
	DEFB	0
	DEFW	C.40DF			; MODEM.DIALCH
	POP	AF
	JP	J$5241

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

J$5157:	LD	HL,I$5185
	LD	DE,7*(32*8) + 11*8	; VRAM address
	LD	C,12
	JP	J.4D31

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

J$5162:	LD	DE,7*(32*8) + 11*8	; VRAM address
	LD	B,15
J$5167:	PUSH	DE
	PUSH	BC
	CALL	C$5176
	POP	BC
	POP	DE
	LD	HL,256
	ADD	HL,DE
	EX	DE,HL			; update VRAM address
	DJNZ	J$5167
	RET

;	  Subroutine __________________________
;	     Inputs  DE = VRAM address
;	     Outputs ________________________

C$5176:	LD	B,12
J$5178:	LD	A,30H
	CALL	C.4D51
	LD	A,30H
	CALL	C.4D63
J$5182:	DJNZ	J$5178
	RET

I$5185:	LD	B,B
	LD	B,C
	LD	B,C
	LD	B,C
	LD	B,C
	LD	B,C
	LD	B,C
	LD	B,C
	LD	B,C
	LD	B,C
	LD	B,C
	LD	B,D
	LD	B,E
	JR	C,J$51CD
	ADD	HL,SP
	ADD	HL,SP
	ADD	HL,SP
	ADD	HL,SP
	ADD	HL,SP
	ADD	HL,SP
	ADD	HL,SP
	LD	A,(D$4344)
	DEC	SP
	NOP
	LD	BC,I$0434
	DEC	B
	INC	(HL)
	EX	AF,AF'
	ADD	HL,BC
	INC	A
	LD	B,H
	LD	B,E
	DEC	SP
	LD	(BC),A
	INC	BC
	INC	(HL)
	LD	B,07H	; 7 
	INC	(HL)
	LD	A,(BC)
	DEC	BC
	INC	A
	LD	B,H
	LD	B,E
	DEC	SP
	INC	(HL)
	INC	(HL)
	INC	(HL)
	INC	(HL)
	INC	(HL)
	INC	(HL)
	INC	(HL)
	INC	(HL)
	INC	A
	LD	B,H
	LD	B,E
	DEC	SP
	INC	C
	DEC	C
	INC	(HL)
	DJNZ	J$51D9
	INC	(HL)
	INC	D
	DEC	D
	INC	A
	LD	B,H
J$51CD:	LD	B,E
	DEC	SP
	LD	C,0FH	; 15 
	INC	(HL)
	LD	(DE),A
	INC	DE
	INC	(HL)
	LD	D,17H
	INC	A
	LD	B,H
J$51D9:	LD	B,E
	DEC	SP
	INC	(HL)
	INC	(HL)
	INC	(HL)
	INC	(HL)
	INC	(HL)
	INC	(HL)
	INC	(HL)
	INC	(HL)
	INC	A
	LD	B,H
	LD	B,E
	DEC	SP
	JR	J$5202

?.51E9:	INC	(HL)
	INC	E
	DEC	E
	INC	(HL)
	JR	NZ,J$5210
	INC	A
	LD	B,H
	LD	B,E
	DEC	SP
	LD	A,(DE)
	DEC	DE
	INC	(HL)
	LD	E,1FH
	INC	(HL)
	LD	(D$3C23),HL
	LD	B,H
	LD	B,E
	DEC	SP
	INC	(HL)
	INC	(HL)
	INC	(HL)
J$5202:	INC	(HL)
	INC	(HL)
	INC	(HL)
	INC	(HL)
	INC	(HL)
	INC	A
	LD	B,H
	LD	B,E
	DEC	SP
	JR	Z,J$5236
	INC	(HL)
	INC	H
	DEC	H
J$5210:	INC	(HL)
	INC	L
	DEC	L
	INC	A
	LD	B,H
	LD	B,E
	DEC	SP
	LD	HL,(D$342B)
	LD	H,27H	; "'"
	INC	(HL)
	LD	L,2FH	; "/"
	INC	A
	LD	B,H
	LD	B,E
	DEC	A
	LD	A,3EH	; ">"
	LD	A,3EH	; ">"
	LD	A,3EH	; ">"
	LD	A,3EH	; ">"
	CCF
	LD	B,H
	LD	B,L
	LD	B,(HL)
	LD	B,(HL)
	LD	B,(HL)
	LD	B,(HL)
	LD	B,(HL)
	LD	B,(HL)
	LD	B,(HL)
	LD	B,(HL)
J$5236:	LD	B,(HL)
	LD	B,(HL)
	LD	B,A
	RST	38H
	RST	38H

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$523B:	LD	IX,I$52EF
	JR	J$5245

J$5241:	LD	IX,I$530F
J$5245:	PUSH	AF
	CP	2AH	; "*"
	JR	NZ,J$524E
	LD	A,09H	; 9 
	JR	J.525D

J$524E:	CP	23H	; "#"
	JR	NZ,J.5256
	LD	A,0BH	; 11 
	JR	J.525D

J.5256:	DEC	A
	CP	0FFH
	JR	NZ,J.525D
	LD	A,0AH	; 10 
J.525D:	LD	HL,I$528F
	ADD	A,A
	ADD	A,A
	ADD	A,A
	LD	D,00H
	LD	E,A
	ADD	HL,DE
	LD	B,04H	; 4 
J$5268	EQU	$-1
J$5269:	PUSH	BC
	PUSH	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	EX	DE,HL
	LD	B,08H	; 8 
J$5271:	PUSH	BC
	PUSH	HL
	PUSH	IX
	LD	A,(IX+0)
	LD	BC,1
	CALL	FILVRM
	POP	IX
	POP	HL
	POP	BC
	INC	HL
	INC	IX
	DJNZ	J$5271
	POP	HL
	POP	BC
	INC	HL
	INC	HL
	DJNZ	J$5269
	POP	AF
	RET

I$528F:	LD	L,B
	ADD	HL,HL
	LD	(HL),B
	ADD	HL,HL
	LD	L,B
	LD	HL,(D$2A70)
	ADD	A,B
	ADD	HL,HL
	ADC	A,B
	ADD	HL,HL
	ADD	A,B
	LD	HL,(D$2A88)
	SBC	A,B
	ADD	HL,HL
	AND	B
	ADD	HL,HL
	SBC	A,B
	LD	HL,(D$2AA0)
	LD	L,B
	INC	L
	LD	(HL),B
	INC	L
	LD	L,B
	DEC	L
	LD	(HL),B
	DEC	L
	ADD	A,B
	INC	L
	ADC	A,B
	INC	L
	ADD	A,B
	DEC	L
	ADC	A,B
	DEC	L
	SBC	A,B
	INC	L
	AND	B
	INC	L
	SBC	A,B
	DEC	L
	AND	B
	DEC	L
	LD	L,B
	CPL
	LD	(HL),B
	CPL
	LD	L,B
	JR	NC,J$5336
	JR	NC,J$5348
	CPL
	ADC	A,B
	CPL
	ADD	A,B
	JR	NC,J.5256
	JR	NC,J$5268
	CPL
	AND	B
	CPL
	SBC	A,B
	JR	NC,J$5276
	JR	NC,J$5340
	LD	(D$3270),A
	LD	L,B
	INC	SP
	LD	(HL),B
	INC	SP
	ADD	A,B
	LD	(D$3288),A
	ADD	A,B
	INC	SP
	ADC	A,B
	INC	SP
	SBC	A,B
	LD	(D$32A0),A
	SBC	A,B
	INC	SP
	AND	B
	INC	SP
I$52EF:	RST	00H
	RST	00H
	RST	00H
	RST	00H
	RST	00H
	RST	00H
	RST	00H
	RST	00H
	POP	BC
	POP	BC
	RLA
	RLA
	RLA
	RLA
	RLA
	RLA
	RST	00H
	RST	00H
	RST	00H
	RST	00H
	RST	00H
	RST	00H
	INC	E
	INC	E
	RLA
	RLA
	RLA
	RLA
	RLA
	RLA
	RLA
	RLA
I$530F:	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	POP	BC
	POP	BC
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	INC	E
	INC	E
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA

I.532F:	DEFB	0
	DEFB	41H
	DEFB	0
	DEFB	0
	DEFB	0
	DEFB	0
	DEFB	0
	DEFB	0
	DEFB	0
	DEFB	07H
	DEFB	13H
	DEFB	35H
	DEFB	38H
	DEFB	3DH
	DEFB	3EH
	DEFB	41H
	DEFB	42H
	DEFB	43H
	DEFB	44H
	DEFB	45H
	DEFB	46H
	DEFB	0
	DEFB	36H

;	  Subroutine translate error, update error display
;	     Inputs  ________________________
;	     Outputs ________________________

J$5346:	LD	HL,I.532F
	LD	BC,23
	CPIR
	LD	A,24
	JR	NZ,J$5354
	DEC	A
	SUB	C
J$5354:	LD	(D.63A7),A		; update last telcom error

;	  Subroutine update error display
;	     Inputs  ________________________
;	     Outputs ________________________

J$5357:	LD	A,(D.630F)
	LD	B,A			; store current column
	LD	A,(D.6310)
	LD	C,A			; store current line
	PUSH	BC			; store
	LD	A,(D.63A7)
	AND	A			; telcom error ?
	JR	NZ,J$536B		; yep,
	CALL	C$53CE			; clear error display
	JR	J.5394			; quit

J$536B:	PUSH	AF			; store telcom error
	CALL	BEEP
	POP	AF			; restore telcom error
	LD	HL,I$539E
	LD	D,0
	DEC	A
	ADD	A,A
	LD	E,A
	ADD	HL,DE
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	EX	DE,HL
	CALL	C$53E0
	LD	A,1
	LD	(D.630F),A		; current column = 1
	INC	A
	LD	(D.6310),A		; current line = 2
J$5389:	LD	A,(HL)
	CP	0FFH			; end of string ?
	JR	Z,J.5394		; yep, quit
	CALL	C.427E			; display character
	INC	HL
	JR	J$5389			; continue

J.5394:	POP	BC			; restore
	LD	A,B
	LD	(D.630F),A		; restore current column
	LD	A,C
	LD	(D.6310),A		; restore current line
	RET

I$539E:	DEFW	I.53F2			; telcom error 1
	DEFW	I.540A			; telcom error 2
	DEFW	I.5424			; telcom error 3
	DEFW	I.5443			; telcom error 4
	DEFW	I.545D			; telcom error 5
	DEFW	I.5478			; telcom error 6
	DEFW	I.5495			; telcom error 7
	DEFW	I.54B2			; telcom error 8
	DEFW	I.54C2			; telcom error 9
	DEFW	I.54D3			; telcom error 10
	DEFW	I.54DF			; telcom error 11
	DEFW	I.54F0			; telcom error 12
	DEFW	I.54FC			; telcom error 13
	DEFW	I.550E			; telcom error 14
	DEFW	I.5522			; telcom error 15
	DEFW	I.5536			; telcom error 16
	DEFW	I.554A			; telcom error 17
	DEFW	I.555A			; telcom error 18
	DEFW	I.5569			; telcom error 19
	DEFW	I.557F			; telcom error 20
	DEFW	I.558F			; telcom error 21
	DEFW	I.55A2			; telcom error 22
	DEFW	I.55B1			; telcom error 23
	DEFW	I.55C5			; telcom error 24

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$53CE:	LD	B,30
	LD	DE,2*(32*8) + 1*8	; VRAM address
J$53D3:	LD	A,30H
	CALL	C.4D51
	LD	A,30H
	CALL	C.4D63
	DJNZ	J$53D3
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$53E0:	LD	B,30
	LD	DE,2*(32*8) + 1*8	; VRAM address
J$53E5:	LD	A,33H
	CALL	C.4D51
	LD	A,33H
	CALL	C.4D63
	DJNZ	J$53E5
	RET

I.53F2:	CALL	NZ,C$DBB3
	CP	B
	CP	H
	JP	J.D6D3

?.53FA:	IN	A,(0BCH)
	OR	D
	JP	J.BDDE

?.5400:	OR	(HL)
	CCF
	JR	Z,J$545D
	CPL
	LD	C,(HL)
	CPL
	LD	B,E
	ADD	HL,HL
	RST	38H

I.540A:	OR	L
	OR	B
	JP	Z,J.B0DE
	RST	10H
	OR	D
	CALL	NZ,C$C3BC
	OUT	(0D6H),A
	IN	A,(0BCH)
	OR	D
	JP	J.BDDE

?.541C:	OR	(HL)
	CCF
	JR	Z,J$5479
	CPL
	LD	C,(HL)
	ADD	HL,HL
	RST	38H

I.5424:	JP	NC,J.D8D3
	OR	B
	OR	(HL)
	SBC	A,0B2H
	XOR	A
	JP	Z,J.B2DF
	JP	J$C4DE

?.5432:	OR	E
	IN	A,(0B8H)
	CP	L
	EXX
	CP	D
	CALL	NZ,C.DEB6
	JP	J$B7DE

?.543E:	RST	08H
	CP	(HL)
	DEFB	0DDH
	DEFB	21H
	DEFB	0FFH

I.5443:	DEFB	0BAH
	DEFB	0C9H

?.5445:	JP	J.B0DE

?.5448:	RET	NZ
	AND	(HL)
	CP	C
	CP	H
	JP	J.D6D3

?.544F:	IN	A,(0BCH)
	OR	D
	JP	J.BDDE

?.5455:	OR	(HL)
	CCF
	JR	Z,J$54B2
	CPL
	LD	C,(HL)
	ADD	HL,HL
	RST	38H

I.545D:	CP	(HL)
	SBC	A,0DDH
	JP	J.B0DE

?.5463:	RET	NZ
	AND	(HL)
	CP	C
	CP	H
	JP	J.D6D3

?.546A:	IN	A,(0BCH)
	OR	D
	JP	J.BDDE

?.5470:	OR	(HL)
	CCF
	JR	Z,J$54CD
	CPL
	LD	C,(HL)
	ADD	HL,HL
	RST	38H

I.5478:	CP	D
J$5479:	RET

?.547A:	CALL	Z,C.B2A7
	EXX
	AND	(HL)
	CP	(HL)
	OR	B
	CALL	Z,C.BCDE
	JP	J.D6D3

?.5487:	IN	A,(0BCH)
	OR	D
	JP	J.BDDE

?.548D:	OR	(HL)
	CCF
	JR	Z,J$54EA
	CPL
	LD	C,(HL)
	ADD	HL,HL
	RST	38H

I.5495:	CP	D
	RET

?.5497:	CALL	Z,C.B2A7
	EXX
	AND	(HL)
	IN	A,(0B0H)
	CALL	NZ,C.BCDE
	JP	J.D6D3

?.54A4:	IN	A,(0BCH)
	OR	D
	JP	J.BDDE

?.54AA:	OR	(HL)
	CCF
	JR	Z,J$5507
	CPL
	LD	C,(HL)
	ADD	HL,HL
	RST	38H

I.54B2:	JP	J$DDDE

?.54B5:	CALL	C,C.DEB6
	CP	H
	SUB	0B3H
	POP	BC
	XOR	L
	OR	E
	JP	J.BDDE

?.54C1:	RST	38H

I.54C2:	OR	(HL)
	OR	D
	CP	(HL)
	OR	(IX-34)
	JP	NZ,J$B6C5
	SBC	A,0AFH
J$54CD:	JP	J.CFB2

?.54D0:	CP	(HL)
	DEFB	0DDH		; << Illegal Op Code Byte >>

	RST	38H

I.54D3:	JP	NC,J.D8D3
	OR	B
	OR	(HL)
	SBC	A,0C0H
	RET	C
	RST	08H
	CP	(HL)
	DEFB	0DDH		; << Illegal Op Code Byte >>

	RST	38H

I.54DF:	JP	J$CADE

?.54E2:	SBC	A,0B2H
	CP	L
	OR	(HL)
	SBC	A,0B2H
	CP	H
	SBC	A,0AEH
J$54EA	EQU	$-1
	OR	E
	JP	J.BDDE

?.54EF:	RST	38H

I.54F0:	CALL	Z,C.B2A7
	EXX
	OR	(HL)
	SBC	A,0B1H
	RET	C
	RST	08H
	CP	(HL)
	DEFB	0DDH		; << Illegal Op Code Byte >>

	RST	38H

I.54FC:	CALL	Z,C.B2A7
	EXX
	JP	NC,J$B6B2
	SBC	A,0CFH
	POP	BC
	OR	(HL)
J$5507:	SBC	A,0AFH
	JP	J.CFB2

?.550C:	CP	L
	RST	38H

I.550E:	CALL	Z,C.B2A7
	EXX
	OUT	(0B0H),A
	CALL	NZ,C$B6DE
	SBC	A,0CFH
	POP	BC
	OR	(HL)
	SBC	A,0AFH
	JP	J.CFB2

?.5520:	CP	L
	RST	38H

I.5522:	CALL	NZ,C$D7DE
	OR	D
	CALL	Z,C$D2DE
	OR	D
	OR	(HL)
	SBC	A,0CFH
	POP	BC
	OR	(HL)
	SBC	A,0AFH
	JP	J.CFB2

?.5534:	CP	L
	RST	38H

I.5536:	CP	D
	RET

?.5538:	CALL	Z,C.B2A7
	EXX
	JP	Z,J.C3BD
	SBC	A,0C6H
	CP	A
	DEFB	0DDH		; << Illegal Op Code Byte >>

	CP	E
	SBC	A,0B2H
	CP	H
	RST	08H
	CP	L
	RST	38H

I.554A:	JP	J.A8DE

?.554D:	CP	L
	CP	B
	OR	(HL)
	SBC	A,0B2H
	XOR	A
	JP	Z,J.B2DF
	JP	J.BDDE

?.5559:	RST	38H

I.555A:	CALL	Z,C.B2A7
	EXX
	OR	(HL)
	SBC	A,0B2H
	XOR	A
	JP	Z,J.B2DF
	JP	J.BDDE

?.5568:	RST	38H

I.5569:	JP	J.A8DE

?.556C:	CP	L
	CP	B
	OR	(HL)
	SBC	A,0D7H
	OR	D
	CALL	NZ,C$DFCC
	IN	A,(0C3H)
	CP	B
	CALL	NZ,C$DABB
	JP	J$BDCF

?.557E:	RST	38H

I.557F:	JP	J.A8DE

?.5582:	CP	L
	CP	B
	OR	(HL)
	SBC	A,0B2H
	CP	H
	SBC	A,0AEH
	OR	E
	JP	J.BDDE

?.558E:	RST	38H

I.558F:	JP	J.A8DE

?.5592:	CP	L
	CP	B
	OR	(HL)
	SBC	A,0BEH
	JP	NZ,J$DEBF
	CP	B
	CP	E
	JP	C,J$CFC3
	CP	(HL)
	DEFB	0DDH		; << Illegal Op Code Byte >>

	RST	38H

I.55A2:	OR	C
	OR	D
	JP	C.DEB6

?.55A7:	JP	Z,J$BCC5
	POP	BC
	XOR	L
	OR	E
	JP	J.BDDE

?.55B0:	RST	38H

I.55B1:	CP	A
	RET

?.55B3:	CALL	Z,C.B2A7
	EXX
	JP	Z,J.C3BD
	SBC	A,0C6H
	JP	NZ,J$DCB6
	JP	C,J$B2C3
	RST	08H
	CP	L
	RST	38H

I.55C5:	OR	H
	RST	10H
	OR	B
	OR	(HL)
	SBC	A,0B5H
	OR	A
	RST	08H
	CP	H
	RET	NZ
	RST	38H


I.55D0:	LD	E,B
	DEC	BC
	LD	E,H
	LD	E,E
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	RST	38H

I.55DC:	SCF
	INC	C
	LD	B,C
	DEC	SP
	LD	B,(HL)
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	RST	38H

I.55E8:	INC	BC
	DEFB	0,0
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	RST	38H

	LD	BC,I.0002
	NOP
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	RST	38H

I.5600:	RLCA
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	RST	38H

I.560C:	EX	AF,AF'
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	RST	38H

I.5618:	LD	D,B
	LD	C,A
	LD	E,D
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	RST	38H

I.5624:	LD	E,C
	LD	C,A
	LD	D,C
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	RST	38H

I.5630:	LD	BC,I.4F4F
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	RST	38H

I.563C:	LD	BC,I$050D
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	RST	38H

I.5648:	LD	(BC),A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	RST	38H

I.5654:	LD	D,L
	DEC	BC
	LD	D,D
	LD	D,A
	LD	D,D
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	RST	38H

I.5660:	LD	D,H
	LD	D,A
	LD	D,D
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	RST	38H

I.566C:	LD	E,C
	LD	C,A
	LD	D,(HL)
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	RST	38H

I.5678:	LD	(DE),A
	INC	DE
	ADD	HL,HL
	INC	C
	INC	L
	ADD	HL,DE
	RRA
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	RST	38H

I.5684:	INC	L
	ADD	HL,DE
	RRA
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	RST	38H

I.5690:	JR	J$56AC

?.5692:	ADD	HL,DE
	RLA
	DEC	DE
	INC	C
	INC	L
	ADD	HL,DE
	RRA
	LD	C,A
	LD	C,A
	RST	38H

I.569C:	INC	E
	DEC	E
	LD	E,4FH	; "O"
	LD	D,E
	LD	E,H
	LD	D,(HL)
	DEC	BC
	LD	C,A
	LD	C,A
	LD	C,A
	RST	38H

I.56A8:	INC	H
	INC	E
	LD	H,4FH	; "O"
J$56AC:	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	RST	38H

I.56B4:	DAA
	JR	J$56CB

?.56B7:	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	RST	38H

I.56C0:	LD	D,E
	LD	E,H
	LD	D,(HL)
	DEC	BC
	LD	C,A
	DJNZ	J$56C8
	LD	B,11H	; 17 
J$56C8	EQU	$-1
	LD	C,A
	LD	C,A
J$56CB:	RST	38H

I.56CC:	LD	D,E
	LD	E,H
	LD	D,(HL)
	DEC	BC
	LD	C,A
	DJNZ	J$56D6
	LD	(BC),A
	LD	DE,I.4F4F
	RST	38H

I.56D8:	LD	D,E
	LD	E,H
	LD	D,(HL)
	DEC	BC
	LD	C,A
	DJNZ	J$56E3
	NOP
	LD	DE,I.4F4F
J$56E3:	RST	38H

I.56E4:	LD	E,21H	; "!"
	RRCA
	LD	(D.4F23),HL
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	RST	38H

I.56F0:	LD	E,21H	; "!"
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	RST	38H

I.56FC:	JR	NZ,J$571B
	INC	D
	JR	NZ,J$5750
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	RST	38H

I.5708:	LD	C,B
	LD	C,A
	INC	(HL)
	DEC	BC
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	RST	38H

I.5714:	INC	D
	LD	C,A
	LD	B,E
	ADD	HL,SP
	DEC	BC
	LD	B,D
	LD	C,A
J$571B:	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	RST	38H

I.5720:	INC	H
	INC	E
	LD	H,4FH	; "O"
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	RST	38H

I.572C:	DAA
	JR	J$5743

?.572F:	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	RST	38H

I.5738:	LD	D,E
	LD	E,H
	LD	D,(HL)
	DEC	BC
	LD	C,A
	DJNZ	J$5740
	LD	B,11H	; 17 
J$5740	EQU	$-1
	LD	C,A
	LD	C,A
J$5743:	RST	38H

I.5744:	LD	D,A
	LD	C,A
	LD	E,D
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	RST	38H

I.5750:	LD	D,(HL)
	LD	E,C
	LD	D,C
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	RST	38H

I.575C:	INC	H
	INC	E
	LD	H,4FH	; "O"
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	RST	38H

I.5768:	DAA
	JR	J$577F

?.576B:	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	RST	38H

I.5774:	LD	E,21H	; "!"
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
J$577F:	RST	38H

I.5780:	LD	E,21H	; "!"
	RRCA
	LD	(D.4F23),HL
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	LD	C,A
	RST	38H

	RST	38H
	RST	38H


I.578E:	SBC	A,L
	NOP
	LD	SP,HL
	DEFB	0,0,0,0,0
	RST	38H

	SBC	A,H
	PUSH	HL
	SUB	D
	DEFB	0,0,0,0,0
	RST	38H


I.57A0:	DEFB	"OFF     "
	DEFB	0FFH

	DEFB	"O N     "
	DEFB	0FFH

	DEFB	"AUTO    "
	DEFB	0FFH


I.57BB:	DEFB	"PUSH    "
	DEFB	0FFH

	DEFB	"DIAL(20)"
	DEFB	0FFH

	DEFB	"DIAL(10)"
	DEFB	0FFH

	DEFB	"AUTO    "
	DEFB	0FFH

	DEFB	0BDH,0B2H,0AFH,0C1H,000H,000H,000H,000H
	DEFB	0FFH

	DEFB	0FFH


I.57E9:	DEFB	"ANK        "
	DEFB	0FFH

J$57F5:	DEFB	"MSX        "
	DEFB	0FFH

	SUB	(HL)
	DEFB	0FDH		; << Illegal Op Code Byte >>

	SBC	A,H
J$5804:	SBC	A,00H
	JR	Z,J$5839
	LD	(HL),29H	; ")"
	DEFB	0,0
	RST	38H

	SUB	(HL)
J$580E:	DEFB	0FDH		; << Illegal Op Code Byte >>

	SBC	A,H
J$5810:	SBC	A,00H
J$5812:	JR	Z,J$5847
J$5814:	LD	(D$0029),A
	NOP
	RST	38H

	SUB	(HL)
J$581A:	DEFB	0FDH		; << Illegal Op Code Byte >>

	SBC	A,H
J$581C:	SBC	A,00H
J$581E:	JR	Z,J$5854
J$5820:	JR	NC,J$584B
	DEFB	0,0
	RST	38H

I.5825:	SBC	A,H
	PUSH	HL
	SUB	D
	DEFB	0,0,0,0,0,0,0,0
	RST	38H

I.5831:	SBC	A,L
	NOP
	LD	SP,HL
	DEFB	0,0,0,0,0
J$5839:	DEFB	0,0,0
	RST	38H


I.583D:	DEFB	"ANK        "
	DEFB	0FFH

	DEFB	"MSX        "
	DEFB	0FFH

	SUB	(HL)
	DEFB	0FDH		; << Illegal Op Code Byte >>
	SBC	A,H
	SBC	A,00H
	JR	Z,J$588D
	LD	(HL),29H	; ")"
	DEFB	0,0
	RST	38H


I.5861:	DEFB	"ANK        "
	DEFB	0FFH

	DEFB	"MSX        "
	DEFB	0FFH

	RST	38H

I$587A:	RST	38H
	RST	38H
	RET	NZ
	POP	BC
	JP	J$C1C7

?.5881:	POP	BC
	RST	38H
	CP	03H	; 3 
	JP	J.C3C3
J$5886	EQU	$-2
J$5888:	JP	J$C1C3
J$588A	EQU	$-1
?.588B:	POP	BC
J$588C:	POP	BC
J$588D:	POP	BC
	RST	00H
	RET	NZ
	LD	A,A
	RST	38H
J$5892:	JP	J.C3C3
J$5894	EQU	$-1

?.5895:	JP	J$03E3
J$5896	EQU	$-2

J$5898:	RST	38H
	RST	38H
	RST	38H
	RST	38H
	RET	NZ
	RST	00H
	CALL	Z,C.C0CC
	RET	NZ
	RST	38H
	CP	03H	; 3 
	EX	(SP),HL
	INC	SP
	INC	SP
	LD	(HL),E
	EX	(SP),HL
	POP	BC
	JP	J.CEC7

?.58AE:	RST	08H
	RET	NZ
	LD	A,A
	RST	38H
	JP	J$0383

?.58B5:	INC	BC
	DI
	INC	BC
	RST	38H
	RST	38H
	RST	38H
	RST	38H
	RET	NZ
	RST	00H
	CALL	Z,C.C0CC
	RET	NZ
	RST	38H
	CP	03H	; 3 
	EX	(SP),HL
	LD	(HL),E
	INC	SP
	LD	(HL),E
	EX	(SP),HL
	RET	NZ
	RET	NZ
	CALL	Z,C.C7CE
	RET	NZ
	LD	A,A
	RST	38H
	LD	H,E
	INC	SP
	INC	SP
	LD	(HL),E
	EX	(SP),HL
	INC	BC
	RST	38H
	RST	38H
	RST	38H
	RST	38H
	RET	NZ
	RET	NZ
	POP	BC
	JP	J.CEC7

?.58E2:	RST	38H
	CP	03H	; 3 
	JP	J.C3C3

?.58E8:	JP	J$CCC3

?.58EB:	RST	08H
	RST	08H
	RET	NZ
	RET	NZ
	RET	NZ
	LD	A,A
	RST	38H
	JP	J$F3F3

?.58F5:	JP	J$03C3

?.58F8:	RST	38H
	RST	38H
	RST	38H
	RST	38H
	RET	NZ
	RST	08H
	CALL	Z,C.CCCC
	RST	08H
	RST	38H
	CP	03H	; 3 
	DI
	INC	BC
	INC	BC
	INC	BC
	EX	(SP),HL
	RET	NZ
	RET	NZ
	CALL	Z,C.C7CE
	RET	NZ
	LD	A,A
	RST	38H
	LD	(HL),E
	INC	SP
	INC	SP
	LD	(HL),E
	EX	(SP),HL
	INC	BC
	RST	38H
	RST	38H
	RST	38H
	RST	38H
	RET	NZ
	RST	00H
	CALL	Z,C.CCCC
	RST	08H
	RST	38H
	CP	03H	; 3 
	EX	(SP),HL
	INC	SP
	INC	BC
	INC	BC
	EX	(SP),HL
	CALL	Z,C.CCCC
	ADC	A,0C7H
	RET	NZ
	LD	A,A
	RST	38H
	LD	H,E
	INC	SP
	INC	SP
	LD	(HL),E
	EX	(SP),HL
	INC	BC
	RST	38H
	RST	38H
	RST	38H
	RST	38H
	RET	NZ
	RST	08H
	RST	08H
	RET	NZ
	RET	NZ
	RET	NZ
	RST	38H
	CP	03H	; 3 
	DI
	DI
	LD	(HL),E
	EX	(SP),HL
	JP	J$C1C0

?.594C:	POP	BC
	POP	BC
	POP	BC
	RET	NZ
	LD	A,A
	RST	38H
	JP	J$8383

?.5955:	ADD	A,E
	ADD	A,E
	INC	BC
	RST	38H
	RST	38H
	RST	38H
	RST	38H
	RET	NZ
	RST	00H
	ADC	A,0CCH
	ADC	A,0C7H
	RST	38H
	CP	03H	; 3 
	EX	(SP),HL
	LD	(HL),E
	INC	SP
	LD	(HL),E
	EX	(SP),HL
	ADD	A,0CCH
	CALL	Z,C.C7CE
	RET	NZ
	LD	A,A
	RST	38H
	LD	H,E
	INC	SP
	INC	SP
	LD	(HL),E
	EX	(SP),HL
	INC	BC
	RST	38H
	RST	38H
	RST	38H
	RST	38H
	RET	NZ
	RST	00H
	CALL	Z,C.CCCC
	CALL	Z,C.FEFF
	INC	BC
	EX	(SP),HL
	LD	(HL),E
	INC	SP
	INC	SP
	INC	SP
	RST	00H
	RET	NZ
	CALL	Z,C.C7CE
	RET	NZ
	LD	A,A
	RST	38H
	DI
	INC	SP
	INC	SP
	LD	H,E
	EX	(SP),HL
	INC	BC
	RST	38H
	RST	38H
	RST	38H
	RST	38H
	RET	NZ
	RST	00H
	CALL	Z,C.CCCC
	CALL	Z,C.FEFF
	INC	BC
	EX	(SP),HL
	LD	(HL),E
	INC	SP
	LD	(HL),E
	DI
	RST	08H
	ADC	A,0CCH
	ADC	A,0C7H
	RET	NZ
	LD	A,A
	RST	38H
	INC	SP
	INC	SP
	INC	SP
	LD	(HL),E
	EX	(SP),HL
	INC	BC
	RST	38H
	RST	38H
	RST	38H
	RST	38H
	RET	NZ
	RET	NZ
	CALL	NZ,C$C3C6
	POP	BC
	RST	38H
	CP	03H	; 3 
	INC	BC
	INC	DE
	INC	SP
	LD	H,E
	JP	J$C1CF

?.59CC:	JP	J$C4C6

?.59CF:	RET	NZ
	LD	A,A
	RST	38H
	EI
	JP	J$3363

?.59D6:	INC	DE
	INC	BC
	RST	38H
	RST	38H
	RST	38H
	RST	38H
	RET	NZ
	JP	NZ,J$CFC2
	JP	NZ,J$FFC2
	CP	03H	; 3 
	LD	B,E
	LD	B,E
	DI
	LD	B,E
	LD	B,E
	JP	NZ,J$C2CF
	JP	NZ,J$C0C0
	LD	A,A
	RST	38H
	LD	B,E
	DI
	LD	B,E
	LD	B,E
	INC	BC
	INC	BC
	RST	38H
	RST	38H
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0
	RST	38H
	ADD	A,B
	ADD	A,B
	ADD	A,B
	ADD	A,B
	ADD	A,B
	ADD	A,B
	ADD	A,B
	RST	38H
	DEFB	0,0,0,0,0,0,0
	RST	38H
	LD	BC,I.0101
	LD	BC,I.0101
	LD	BC,I$8080
	ADD	A,B
	ADD	A,B
	ADD	A,B
	ADD	A,B
	ADD	A,B
	ADD	A,B
	LD	BC,I.0101
	LD	BC,I.0101
	LD	BC,I$8001
	ADD	A,B
	ADD	A,B
	ADD	A,B
	ADD	A,B
	ADD	A,B
	ADD	A,B
	RST	38H
	DEFB	0,0,0,0,0,0,0
	RST	38H
	LD	BC,I.0101
	LD	BC,I.0101
	LD	BC,I.0001
	DEFB	0,0,0,0
	LD	BC,I$0603
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0
	ADD	A,B
	RET	NZ
	RLCA
	RLCA
	RLCA
	RLCA
	RLCA
	RLCA
	RLCA
	RLCA
	RET	NZ
	RET	NZ
	RET	NZ
	RET	NZ
	RET	NZ
	RET	NZ
	RET	NZ
	RET	NZ
	LD	B,02H	; 2 
	LD	BC,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0
	RET	NZ
	ADD	A,B
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0

I$5BFA:	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	POP	BC
	POP	BC
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	INC	E
	INC	E
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	POP	BC
	POP	BC
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	INC	E
	INC	E
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	POP	BC
	POP	BC
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	INC	E
	INC	E
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	POP	BC
	POP	BC
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	INC	E
	INC	E
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	POP	BC
	POP	BC
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	INC	E
	INC	E
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	POP	BC
	POP	BC
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	INC	E
	INC	E
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	POP	BC
	POP	BC
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	INC	E
	INC	E
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	POP	BC
	POP	BC
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	INC	E
	INC	E
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	POP	BC
	POP	BC
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	INC	E
	INC	E
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	POP	BC
	POP	BC
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	INC	E
	INC	E
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	POP	BC
	POP	BC
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	INC	E
	INC	E
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	POP	BC
	POP	BC
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	RST	08H
	INC	E
	INC	E
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	CP	0FEH
	CP	0FEH
	CP	0FEH
	CP	0FEH
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	PUSH	AF
	PUSH	AF
	PUSH	AF
	PUSH	AF
	PUSH	AF
	PUSH	AF
	PUSH	AF
	PUSH	AF
	INC	DE
	INC	DE
	INC	DE
	INC	DE
	INC	DE
	INC	DE
	INC	DE
	INC	DE
	DEC	DE
	DEC	DE
	DEC	DE
	DEC	DE
	DEC	DE
	DEC	DE
	DEC	DE
	DEC	DE
	RST	28H
	RST	28H
	RST	28H
	RST	28H
	RST	28H
	RST	28H
	RST	28H
	RST	28H
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	RRA
	POP	AF
	POP	AF
	POP	AF
	POP	AF
	POP	AF
	POP	AF
	POP	AF
	POP	AF
	CALL	Z,C$CBCB
	SET	1,E
	SET	1,E
	SET	1,H
	CP	E
	CP	E
	CP	E
	CP	E
	CP	E
	CP	E
	CP	E
	CALL	Z,C.1B1B
	DEC	DE
	DEC	DE
	DEC	DE
	DEC	DE
	DEC	DE
	SET	1,E
	SET	1,E
	SET	1,E
	SET	1,E
	DEC	DE
	DEC	DE
	DEC	DE
	DEC	DE
	DEC	DE
	DEC	DE
	DEC	DE
	DEC	DE
	SET	1,E
	SET	1,E
	SET	1,E
	RL	C
	CP	E
	CP	E
	CP	E
	CP	E
	CP	E
	CP	E
	CP	E
	LD	DE,C.1B1B
	DEC	DE
	DEC	DE
	DEC	DE
	DEC	DE
	DEC	DE
	POP	HL
	XOR	0EEH
	XOR	0EEH
	XOR	0FEH
	CP	0FEH
	XOR	0EEH
	XOR	0EEH
	XOR	0FFH
	RST	38H
	RST	38H
	XOR	0EEH
	XOR	0EEH
	XOR	0EEH
	CP	0CEH
	CP	0FEH
	CP	0FEH
	CP	0FEH
	CP	0FEH
	ADC	A,0CEH
	ADC	A,0CEH
	ADC	A,0CEH
	ADC	A,0CEH
	CP	0FEH
	ADC	A,0EEH
	XOR	0EEH
	XOR	0EEH
	CALL	Z,C.CCCC
	XOR	0EEH
	XOR	0EEH
	XOR	0CEH
	ADC	A,0EEH
	XOR	0EEH
	XOR	0EEH
	XOR	00H

	END
