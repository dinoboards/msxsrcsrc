; T600-4.MAC
;
; MSX-MODEM Sony T600
;
; Source re-created by Z80DIS 2.2
; Z80DIS was written by Kenneth Gielow, Palo Alto, CA
;
; Code Copyrighted by ASCII and maybe others
; Source comments by Arjen Zeilemaker
;
; Sourcecode supplied for STUDY ONLY
; Recreation NOT permitted without authorisation of the copyrightholders
;

        .Z80
        ASEG

	ORG	04040H

VDP.DR	EQU	0006H
VDP.DW	EQU	0007H
INIFNK	EQU	003EH
WRTVDP	EQU	0047H
FILVRM	EQU	0056H
LDIRVM	EQU	005CH
CHGCLR	EQU	0062H
INIGRP	EQU	0072H
CHSNS	EQU	009CH
CHGET	EQU	009FH
BEEP	EQU	00C0H
KILBUF	EQU	0156H

CSRX	EQU	0F3DDH
CNSDFG	EQU	0F3DEH
RG1SAV	EQU	0F3E0H
FORCLR	EQU	0F3E9H
EXBRSA	EQU	0FAF8H
KEYBUF	EQU	0FBF0H
INTFLG	EQU	0FC9BH


C.6000	EQU	6000H			; inter segment call (EI)
D.6300	EQU	6300H			; option
D.6301	EQU	6301H			; base option table pointer
D$6303	EQU	6303H			; special key
D.6304	EQU	6304H			; last key
D.6305	EQU	6305H			; current phone book entry (display)
D$6306	EQU	6306H	; --S--
D.6307	EQU	6307H	; --SL-
D.6308	EQU	6308H			; item
D.6309	EQU	6309H	; --SL-
D.630A	EQU	630AH	; --SL-
D.630B	EQU	630BH			; current phone book entry
D.630F	EQU	630FH			; current column
D.6310	EQU	6310H			; current line
D$6317	EQU	6317H			; VDP data read port
D$6318	EQU	6318H			; VDP data write port
I.6319	EQU	6319H			; sprite attributes
D.6329	EQU	6329H			; current column (? support)
D.632A	EQU	632AH			; current line (? support)
D.632B	EQU	632BH	; --SL-
D.632C	EQU	632CH	; --SL-
D.632D	EQU	632DH	; --SL-
D.632E	EQU	632EH	; --SL-
D.633F	EQU	633FH	; --SL-
D.6340	EQU	6340H			; TELCOM startup mode
D.6341	EQU	6341H			; speaker mode
D.6343	EQU	6343H	; ---LI
D.63A7	EQU	63A7H			; last telcom error
D$63B0	EQU	63B0H	; --S--
D.63B1	EQU	63B1H	; --SL-
D.63B2	EQU	63B2H	; --SL-
I.63B3	EQU	63B3H	; ----I
D.63B8	EQU	63B8H	; --S--
D.63B9	EQU	63B9H	; --SL-
D.63CA	EQU	63CAH	; --SL-
D.63CB	EQU	63CBH	; --SL-
D.63E8	EQU	63E8H	; --SL-
D.63E9	EQU	63E9H	; --SL-
D.63EA	EQU	63EAH	; --SL-
D$63FF	EQU	63FFH	; --S--
D.6400	EQU	6400H	; --SL-
D$6402	EQU	6402H	; --S--
D.6403	EQU	6403H	; --SLI
D.6404	EQU	6404H	; ---L-
D.6405	EQU	6405H			; end of phone book data
D$6407	EQU	6407H	; ---L-
D$6408	EQU	6408H	; ---L-
D.6409	EQU	6409H	; --SLI
D.640A	EQU	640AH	; ---LI
D.640B	EQU	640BH	; --S--
D.640C	EQU	640CH			; output to printer
D.640D	EQU	640DH	; --SL-
I$640E	EQU	640EH	; ----I
D.640F	EQU	640FH	; --SL-
D$6410	EQU	6410H	; --S--
D.6411	EQU	6411H			; function key display status
D.6419	EQU	6419H			; value per item table
D.6429	EQU	6429H	; --SL-
I.642A	EQU	642AH	; ----I
D.642E	EQU	642EH	; --SL-
I.6460	EQU	6460H	; ----I
D$6474	EQU	6474H	; --S--
I$6478	EQU	6478H	; ----I
I$6480	EQU	6480H	; ----I
I.6488	EQU	6488H			; filename
I$6497	EQU	6497H	; ----I
I.64BB	EQU	64BBH	; ----I
I$64CA	EQU	64CAH	; ----I
I.64CF	EQU	64CFH	; ----I
D.64D0	EQU	64D0H	; --SLI
I.64E5	EQU	64E5H	; ----I
I.64FA	EQU	64FAH	; ----I
D.64FC	EQU	64FCH	; ---L-
I.64FF	EQU	64FFH	; ----I
I.67D2	EQU	67D2H	; ----I
I$67D7	EQU	67D7H	; ----I
I$67D8	EQU	67D8H	; ----I
I.6800	EQU	6800H			; phone book entry table
I.6866	EQU	6866H			; phone book data blocks

D.7EF0	EQU	7EF0H			; phone book entry
D.7EF1	EQU	7EF1H	; --SL-
D.7EF3	EQU	7EF3H			; current entry
D.7EF4	EQU	7EF4H	; --SLI
D.7EF5	EQU	7EF5H	; --SL-
D.7EF6	EQU	7EF6H			; current entry
D.7EF7	EQU	7EF7H			; current entry
D.7EF8	EQU	7EF8H			; first data block
I$7EFA	EQU	7EFAH			; SRAM sanity pattern
D$7EFC	EQU	7EFCH			; duplex mode
D.7EFF	EQU	7EFFH			; start TELCOM at system start

;	  Subroutine telcom
;	     Inputs  ________________________
;	     Outputs ________________________

?.4040:	PUSH	HL			; store BASIC pointer
	CALL	C$41A1
J$4044:	LD	A,(D.6300)
	CP	0FFH			; exit option ?
	JR	Z,J$404F		; yep, quit
	CP	6			; valid option ?
	JR	C,J$4054		; yep, execute option
J$404F:	CALL	C$44EB			; restore current screen colors and vdp register 1
	POP	HL			; restore BASIC pointer
	RET

J$4054:	LD	HL,I$4068
	ADD	A,A
	LD	E,A
	LD	D,0
	ADD	HL,DE
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	LD	(D.6301),DE		; store base option table pointer
	CALL	C.4074			; execute function
	JR	J$4044			; continue

I$4068:	DEFW	I.40E9			; option 0
	DEFW	I.4107			; option 1
	DEFW	I.4129			; option 2
	DEFW	I.4147			; option 3
	DEFW	I.4165			; option 4 (phone book)
	DEFw	I.4183			; option 5

;	  Subroutine execute function
;	     Inputs  ________________________
;	     Outputs ________________________

C.4074:	LD	A,(D.632C)
	AND	A
	JR	Z,J$4082		; nope, skip
	LD	A,1			; line = phone
	CALL	C.6000
	DEFB	0
	DEFW	C.40D9			; MODEM.LINSEL
J$4082:	CALL	C.6000
	DEFB	5
	DEFW	C.4040			; display option screen
	LD	A,(D.6300)
	AND	A			; option 0 ?
	JR	NZ,J.4099		; nope, skip
	CALL	C.4701			; 63B2 flag set ?
	JR	Z,J.4099		; nope,
	CALL	C.6000
	DEFB	5
	DEFW	C.404C
J.4099:	CALL	C.425C
	LD	A,(D.6300)
	DEC	A			; option 1 ?
	JR	NZ,J.40B4		; nope, execute function (without ?)
	CALL	C.470B			; 632E flag set ?
	JR	NZ,J.40C8		; yep,
	CALL	C.4516			; item 0 zero value ?
	LD	DE,I$4125
	JR	Z,J$40B2		; yep,
	LD	DE,I$4127
J$40B2:	JR	J$40DB			; call function handler

; execute function (without ?)

J.40B4:	LD	A,(D.6300)
	CP	4			; option 2 or 3 ?
	JR	C,J.40C8		; yep, skip
	CALL	C.4511			; get telcom error
	CP	08H
	JR	C,J.40C8
	CALL	CHGET			; get key
	CALL	C.4506			; reset telcom error and clear error display
J.40C8:	CALL	C.6000
	DEFB	5
	DEFW	C.4052			; wait for key (menu)
	LD	A,(D$6303)		; special key
	DEC	A			; 0 based
	ADD	A,A
	LD	E,A
	LD	D,0
	LD	HL,(D.6301)		; base option table pointer
	ADD	HL,DE
	EX	DE,HL			; + special key

; call function handler

J$40DB:	LD	HL,I$40E5
	PUSH	HL			; return here
	EX	DE,HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)			; handler
	EX	DE,HL
	JP	(HL)			; execute handler

I$40E5:	AND	A			; invalid function ?
	RET	NZ			; nope, quit
	JR	J.40B4			; execute function (without ?)

; option 0

I.40E9:	DEFW	C.443F			; F1
	DEFW	C.472B			; F2
	DEFW	C.4766			; F3
	DEFW	C.477E			; F4
	DEFW	C.47B6			; F5
	DEFW	C.4484			; F6
	DEFW	C.4477			; F7
	DEFW	C.50ED			; F8
	DEFW	C.5DE6			; F9, no function
	DEFW	C.5DE6			; F10, no function
	DEFW	C.498F			; RIGHT
	DEFW	C.491D			; LEFT
	DEFW	C.48A3			; UP
	DEFW	C.4939			; DOWN
	DEFW	C.49AB			; other

; option 1

I.4107:	DEFW	C.4CF6			; F1
	DEFW	C.4D9D			; F2
	DEFW	C.5DE6			; F3, no function
	DEFW	C.4DD7			; F4
	DEFW	C.43FC			; F5, exit option
	DEFW	C.5DE6			; F6, no function
	DEFW	C.5DE6			; F7, no function
	DEFW	C.5DE6			; F8, no function
	DEFW	C.5DE6			; F9, no function
	DEFW	C.5DE6			; F10, no function
	DEFW	C.4E21			; RIGHT
	DEFW	C.4E05			; LEFT
	DEFW	C.5DE6			; UP, no function
	DEFW	C.5DE6			; DOWN, no function
	DEFW	C.4C11			; other

I.4125:	DEFW	C.4BA6			;

I.4127:	DEFW	C.4661			;

; option 2

I.4129:	DEFW	C.5096			; F1
	DEFW	C.5DE6			; F2, no function
	DEFW	C.5DE6			; F3, no function
	DEFW	C.5DE6			; F4, no function
	DEFW	C.4459			; F5
	DEFW	C.5DE6			; F6, no function
	DEFW	C.5DE6			; F7, no function
	DEFW	C.5DE6			; F8, no function
	DEFW	C.5DE6			; F9, no function
	DEFW	C.5DE6			; F10, no function
	DEFW	C.52E7			; RIGHT
	DEFW	C.5226			; LEFT
	DEFW	C.5150			; UP
	DEFW	C.5280			; DOWN
	DEFW	C.4E6E			; other

; option 3

I.4147:	DEFW	C.5DE6			; F1, no function
	DEFW	C.5DE6			; F2, no function
	DEFW	C.5DE6			; F3, no function
	DEFW	C.5DE6			; F4, no function
	DEFW	C.5441			; F5
	DEFW	C.5DE6			; F6, no function
	DEFW	C.5DE6			; F7, no function
	DEFW	C.5DE6			; F8, no function
	DEFW	C.5DE6			; F9, no function
	DEFW	C.5DE6			; F10, no function
	DEFW	C.55E1			; RIGHT
	DEFW	C.5577			; LEFT
	DEFW	C.5485			; UP
	DEFW	C.5502			; DOWN
	DEFW	C.53EA			; other

; option 4 (phone book)

I.4165:	DEFW	C.567F			; F1
	DEFW	C.56BE			; F2
	DEFW	C.56FB			; F3
	DEFW	C.5DE6			; F4, no function
	DEFW	C.5721			; F5
	DEFW	C.5DE6			; F6, no function
	DEFW	C.5DE6			; F7, no function
	DEFW	C.5DE6			; F8, no function
	DEFW	C.5DE6			; F9, no function
	DEFW	C.5DE6			; F10, no function
	DEFW	C.585E			; RIGHT
	DEFW	C.57E6			; LEFT
	DEFW	C.5762			; UP
	DEFW	C.5826			; DOWN
	DEFW	C.58B8			; other

; option 5

I.4183:	DEFW	C.5DE6			; F1, no function
	DEFW	C.5DE6			; F2, no function
	DEFW	C.5DE6			; F3, no function
	DEFW	C.5DE6			; F4, no function
	DEFW	C.5995			; F5
	DEFW	C.5DE6			; F6, no function
	DEFW	C.5DE6			; F7, no function
	DEFW	C.5DE6			; F8, no function
	DEFW	C.5DE6			; F9, no function
	DEFW	C.5DE6			; F10, no function
	DEFW	C.5D82			; RIGHT
	DEFW	C.5D16			; LEFT
	DEFW	C.5C62			; UP
	DEFW	C.5CBA			; DOWN
	DEFW	C.5C08			; other

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$41A1:	CALL	C$44D9			; store current screen colors and vdp register 1
	CALL	C.4DEB
	LD	C,1
	LD	B,0E0H
	CALL	WRTVDP			; write vdp register 1
	CALL	INIGRP			; select graphic mode
	LD	HL,FORCLR
	LD	(HL),15
	INC	HL
	LD	(HL),4
	INC	HL
	LD	(HL),14
	CALL	CHGCLR			; change screen colors
	LD	A,(VDP.DR)
	LD	(D$6317),A
	LD	A,(VDP.DW)
	LD	(D$6318),A		; store VDP port numbers
	CALL	C.6000
	DEFB	6
	DEFW	C.405B			; store function key definition (two bytes)
	CALL	C.6000
	DEFB	6
	DEFW	C.4055			; telcom function key definition
	CALL	C.6000
	DEFB	0
	DEFW	C.405E			; counter #1, clear
	CALL	C.6000
	DEFB	6
	DEFW	C.405E			; display telcom welcome message
J$41E3:	CALL	C.6000
	DEFB	0
	DEFW	C.4061			; counter #1, get number of seconds
	CP	3			; 3 seconds passed ?
	JR	C,J$41E3		; nope, wait
	LD	A,5
	LD	(D.630F),A		; current column = 5
	LD	(D.63B9),A
	LD	A,1
	LD	(D.632C),A
	CALL	C.4526
	XOR	A
	LD	(D.6300),A		; option = 0
	LD	(D$6306),A
	LD	(D$63FF),A
	LD	(D.6429),A
	LD	(D.632C),A
	LD	(D.63CB),A
	LD	(D.6307),A
	LD	(D.633F),A
	LD	(D.63B8),A
	LD	(D.640F),A
	LD	(D.63A7),A		; reset last telcom error
	LD	(D.6308),A		; item = 0
	LD	B,16
	LD	HL,D.6419
J$4227:	LD	(HL),A
	INC	HL
	DJNZ	J$4227			; initialize value per item
	CALL	C.53D9
	XOR	A
	LD	(D.6309),A
	LD	A,(D.6341)
	CALL	C.6000
	DEFB	0
	DEFW	C.40D6			; MODEM.SPKCNT
	XOR	A
	LD	(D.630A),A
	LD	HL,D.640A
	LD	B,3
J$4244:	LD	(HL),A
	INC	HL
	DJNZ	J$4244
	LD	HL,I$7EFA
	LD	A,(HL)
	CP	55H			; SRAM intialized ?
	JR	NZ,J$4255		; nope,
	INC	HL
	LD	A,(HL)
	CP	0AAH			; SRAM intialized ?
	RET	Z			; yep, quit
J$4255:	CALL	C.6000
	DEFB	6
	DEFW	C.40A6			; initialize SRAM
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.425C:	LD	A,(D.6300)
	AND	A			; option 0 ?
	JR	Z,J$4274		; yep,
	DEC	A			; option 1 ?
	JR	Z,J$428E		; yep,
	DEC	A			; option 2 ?
	JP	Z,J$4321		; yep,
	DEC	A			; option 3 ?
	JP	Z,J$433A		; yep
	DEC	A			; option 4 ?
	JP	Z,C.43A2		; yep,
	JP	J$43CD

; option 0

J$4274:	LD	A,1
	LD	(D.63CA),A
	XOR	A
	LD	(D.632D),A
	LD	A,(D.6305)		; current phone book entry (display)
	CALL	C.48E9
	CALL	C.4A19
	LD	A,(D.63B9)
	LD	(D.630F),A		; update current column
	XOR	A
	RET

; option 1

J$428E:	XOR	A
	LD	(D.63CB),A
	CALL	C.470B			; 632E flag set ?
	JP	NZ,J$42E2		; yep,
	CALL	C$4E3D
	LD	HL,I.64FA
	LD	DE,I.63B3
	LD	BC,5
	LDIR
	CALL	C.6000
	DEFB	6
	DEFW	C.4070
	CALL	C.6000
	DEFB	5
	DEFW	C.4055
	CALL	C.6000
	DEFB	0
	DEFW	C.4070			; get line status
	AND	03H			; line polarity
	JR	Z,J$42C3
	LD	A,8
	CALL	C.4507			; update telcom error and error display
	JR	J$42E0			; quit

J$42C3:	CALL	C.6000
	DEFB	0
	DEFW	C.40D9			; MODEM.LINSEL (line = modem)
	NOP
	CALL	C.46EE
	JR	Z,J.42DD
	CP	03H
	JR	NC,J.42DD
	LD	(D.6429),A
	CALL	C.6000
	DEFB	6
	DEFW	C.4076
	RET

J.42DD:	CALL	C.4D56
J$42E0:	XOR	A
	RET

J$42E2:	CALL	C.6000
	DEFB	6
	DEFW	C.4070
	CALL	C.6000
	DEFB	5
	DEFW	C.4055
	CALL	C.4B8C
	LD	A,9
	LD	(D.630F),A		; current column = 9
	LD	A,4
	LD	(D.6310),A		; current line = 4
	JP	C.4556			; enable sprites

?.42FE:	LD	A,1
	LD	(D.632C),A
	CALL	C.4548
	LD	HL,I.64E5
	LD	B,9			; column = 9
	LD	C,4			; line = 4
	LD	D,21			; size of string = 21
	CALL	C.44C5			; display string (with ? support)
	LD	A,(D$6407)
	LD	(D.630F),A		; update current column
	LD	A,(D$6408)
	LD	(D.6310),A		; update current line
	JP	C.4556			; enable sprites

; option 2

J$4321:	CALL	C$533C
	CALL	C.6000
	DEFB	6
	DEFW	C.40A0
	XOR	A
	LD	(D.6307),A
	LD	(D.633F),A
	CALL	C.51A8
	CALL	C.4715			; current position = 9,5
	JP	C.4556			; enable sprites

; option 3

J$433A:	LD	A,(D.632C)
	CP	0FH
	JR	NZ,J$4344
	CALL	C.53D9
J$4344:	CALL	C.6000
	DEFB	6
	DEFW	C.4070
	CALL	C.6000
	DEFB	6
	DEFW	C.4073
	LD	A,(D.632C)
	AND	A
	JR	NZ,J$435D
	LD	A,2
	LD	(D.6308),A		; item = 2
	JR	J$4361

J$435D:	XOR	A
	LD	(D.6308),A		; item = 0
J$4361:	CALL	C.5799			; add 'cursor'
	XOR	A
	LD	B,16
J$4367:	LD	(D.6308),A		; update item
	PUSH	BC
	PUSH	AF
	CALL	C.6000
	DEFB	6
	DEFW	C.4064			; display item value
	POP	AF
	POP	BC
	INC	A
	DJNZ	J$4367
	LD	A,13
	LD	(D.6308),A		; item = timer1
	LD	HL,D.6419+13		; timer1 value
	CALL	C.6000
	DEFB	6
	DEFW	C.4094			; display timer value
	LD	A,14
	LD	(D.6308),A		; item = timer2
	LD	HL,D.6419+14		; timer2 value
	CALL	C.6000
	DEFB	6
	DEFW	C.4094			; display timer value
	LD	A,(D.632C)
	AND	A
	JR	Z,J$439C
	XOR	A			; item = 0
	JR	J$439E

J$439C:	LD	A,2			; item = 2
J$439E:	LD	(D.6308),A		; update item
	RET

;	  Subroutine option 4 (phone book)
;	     Inputs  ________________________
;	     Outputs ________________________

C.43A2:	LD	A,(D.6309)
	CALL	C.57A2			; remove 'cursor'
	CALL	C.459E			; disable sprites
	LD	B,3
	XOR	A
J$43AE:	LD	(D.6309),A
	INC	A
	PUSH	BC
	PUSH	AF
	CALL	C.6000
	DEFB	6
	DEFW	C.4067
	POP	AF
	POP	BC
	DJNZ	J$43AE
	CALL	C.598A
	LD	(D.6309),A
	CALL	C.5799			; add 'cursor'
	CALL	C.4720			; current position = 13,11
	JP	J$5963

; option 5

J$43CD:	CALL	C.6000
	DEFB	6
	DEFW	C.4073
	LD	A,(D.630A)
	CALL	C.57A2			; remove 'cursor'
	CALL	C.459E			; disable sprites
	LD	B,3
	XOR	A
J$43DF:	LD	(D.630A),A
	INC	A
	PUSH	BC
	PUSH	AF
	CALL	C.6000
	DEFB	6
	DEFW	C.406A
	POP	AF
	POP	BC
	DJNZ	J$43DF
	XOR	A
	LD	(D.630A),A
	CALL	C.5799			; add 'cursor'
	CALL	C.4720			; current position = 13,11
	JP	J$5C53

;	  Subroutine exit option
;	     Inputs  ________________________
;	     Outputs ________________________

C.43FC:	CALL	C.4710			; 63CB flag set ?
	JP	NZ,J.44C3		; yep, quit
	LD	A,1			; line = phone
	CALL	C.6000
	DEFB	0
	DEFW	C.40D9			; MODEM.LINSEL
	LD	A,(D.6300)
	DEC	A			; option 1 ?
	JR	NZ,J.441B		; nope,
	CALL	C.4511			; get telcom error
	JR	Z,J.441B		; no error,
	CALL	C.4506			; reset telcom error and clear error display
	JP	J.44C3			; quit

J.441B:	CALL	C.4511			; get telcom error
	JP	NZ,J.44C3		; error, quit
	LD	A,(D.632C)
	CP	15
	JR	Z,J.4473		; option 3
	LD	A,1			; line = phone
	CALL	C.6000
	DEFB	0
	DEFW	C.40D9			; MODEM.LINSEL
	CALL	C.6000
	DEFB	0
	DEFW	C.405B			; finish dial tone detect
	CALL	C.4DEB
	CALL	KILBUF			; clear keyboard buffer
	XOR	A			; option = 0
	JR	J.44BD			; update option

;	  Subroutine option 0, F1
;	     Inputs  ________________________
;	     Outputs ________________________

C.443F:	CALL	C.4511			; get telcom error
	JR	NZ,J.44C3		; error, quit
	CALL	C.46FC			; 632D flag set ?
	JR	NZ,J.44C3		; yep, quit
	LD	A,1
	LD	(D.632E),A
	LD	A,15
	LD	(D.632C),A
	JR	J.4473			; option 3

J.4455:	LD	A,2			; option = 2
	JR	J.44BD			; update option

;	  Subroutine option 2, F5
;	     Inputs  ________________________
;	     Outputs ________________________

C.4459:	XOR	A
	LD	(D.63A7),A		; reset last telcom error
	CALL	C.4706			; 632B flag set ?
	JR	Z,J$4469		; nope,
	LD	A,0FFH
	LD	(D.640F),A
	JR	J$446E

J$4469:	LD	A,15
	LD	(D.640F),A
J$446E:	LD	A,0FFH
	LD	(D.632C),A
J.4473:	LD	A,3			; option = 3
	JR	J.44BD			; update option

;	  Subroutine option 0, F7
;	     Inputs  ________________________
;	     Outputs ________________________

C.4477:	CALL	C.4511			; get telcom error
	JR	NZ,J.44C3		; error, quit
	LD	A,4			; option = 4
	JR	J.44BD			; update option

J.4480:	LD	A,1			; option = 1
	JR	J.44BD			; update option

;	  Subroutine option 0, F6
;	     Inputs  ________________________
;	     Outputs ________________________

C.4484:	CALL	C.4511			; get telcom error
	JR	NZ,J.44C3		; error, quit
	LD	A,5			; option = 5
	JR	J.44BD			; update option

J$448D:	LD	A,(D.63CA)
	AND	A
	JR	Z,J$449A
	LD	A,0FFH
	LD	(D.63CA),A
	JR	J.44C3			; quit

J$449A:	CALL	INIFNK			; initialize function key definition
	LD	A,0FFH			; option = exit
	JR	J.44BD			; update option

J$44A1:	CALL	C.6000
	DEFB	6
	DEFW	C.406D
	LD	A,(D.632C)
	CP	0FFH
	JP	Z,C.43FC		; exit option
	AND	A
	JR	NZ,J$44BB
	CALL	C.6000
	DEFB	6
	DEFW	C.407C
	JP	J.4664			; telcom comterm

J$44BB:	JR	C.443F

J.44BD:	LD	(D.6300),A		; update option
	LD	A,0FFH
	RET

J.44C3:	XOR	A
	RET

;	  Subroutine display string (with ? support)
;	     Inputs  D = size of string, B = column, C = line
;	     Outputs ________________________

C.44C5:	LD	A,B
	LD	(D.6329),A		; update current column (? support)
	LD	A,C
	LD	(D.632A),A		; update current line (? support)
J$44CD:	LD	A,(HL)
	CALL	C.6000
	DEFB	6
	DEFW	C.4097			; display character (with ? support)
	INC	HL
	DEC	D
	JR	NZ,J$44CD
	RET

;	  Subroutine store current screen colors and vdp register 1
;	     Inputs  ________________________
;	     Outputs ________________________

C$44D9:	LD	HL,FORCLR
	LD	DE,I.642A
	LD	BC,3
	LDIR
	LD	A,(RG1SAV)
	LD	(D.642E),A
	RET

;	  Subroutine restore current screen colors and vdp register 1
;	     Inputs  ________________________
;	     Outputs ________________________

C$44EB:	LD	HL,I.642A
	LD	DE,FORCLR
	LD	BC,3
	LDIR
	LD	A,(D.642E)
	LD	(RG1SAV),A
	RET

;	  Subroutine to upper
;	     Inputs  ________________________
;	     Outputs ________________________

C.44FD:	CP	"a"
	RET	C
	CP	"z"+1
	RET	NC
	SUB	20H
	RET

;	  Subroutine reset telcom error and clear error display
;	     Inputs  ________________________
;	     Outputs ________________________

C.4506:	XOR	A			; reset last telcom error

;	  Subroutine update telcom error and error display
;	     Inputs  ________________________
;	     Outputs ________________________

C.4507:	LD	(D.63A7),A		; update last telcom error
	CALL	C.6000
	DEFB	6
	DEFW	C.4040			; update error display
	RET

;	  Subroutine telcom error ?
;	     Inputs  ________________________
;	     Outputs ________________________

C.4511:	LD	A,(D.63A7)
	AND	A
	RET

;	  Subroutine item 0 zero value ?
;	     Inputs  ________________________
;	     Outputs ________________________

C.4516:	LD	A,(D.6419+0)
	AND	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.451B:	LD	HL,D.6343
	LD	E,D
	LD	D,0
	ADD	HL,DE
	LD	A,(HL)
	CP	0FFH
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4526:	XOR	A
	LD	(D.6305),A		; current phone book entry (display) = 0
	LD	(D.630B),A		; current phone book entry = 0
	LD	(D.63B2),A
	LD	(D.632D),A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4534:	PUSH	AF
	LD	A,(D.6300)
	DEC	A			; option 1 ?
	JR	NZ,J.4543		; nope, quit
	CALL	C.4511			; get telcom error
	JR	Z,J.4543		; no error, quit
	CALL	C.4506			; reset telcom error and clear error display
J.4543:	POP	AF
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4545:	XOR	A
	JR	J.4552

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4548:	LD	A,0FH
	JR	J.4552

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$454C:	LD	A,80H
	JR	J.4552

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4550:	LD	A,8FH
J.4552:	LD	(D$63B0),A
	RET

;	  Subroutine enable sprites
;	     Inputs  ________________________
;	     Outputs ________________________

C.4556:	PUSH	AF
	LD	A,(D.6310)		; current line
	ADD	A,A
	ADD	A,A
	ADD	A,A			; *8
	LD	D,A
	LD	A,(D.630F)		; current column
	ADD	A,A
	ADD	A,A
	ADD	A,A			; *8
	LD	E,A
	LD	IY,I.6319		; sprite attributes
	LD	A,D
	SUB	4
	LD	(IY+0),A		; sprite 0, Y
	LD	(IY+4),A		; sprite 1, Y
	ADD	A,8
	LD	(IY+8),A		; sprite 2, Y
	LD	(IY+12),A		; sprite 3, Y
	LD	A,E
	SUB	4
	LD	(IY+1),A		; sprite 0, X
	LD	(IY+9),A		; sprite 2, X
	ADD	A,8
	LD	(IY+5),A		; sprite 1, X
	LD	(IY+13),A		; sprite 3, X
	LD	A,9
	CALL	C.45C3			; set color of sprites
	LD	HL,I.6319
	LD	DE,1B00H		; VRAM address
	LD	BC,4*4
	CALL	LDIRVM
	POP	AF
	RET

;	  Subroutine disable sprites
;	     Inputs  ________________________
;	     Outputs ________________________

C.459E:	PUSH	AF
	LD	IY,I.6319
	XOR	A
	CALL	C.45C3			; set color of sprites
	LD	A,0D0H
	LD	(IY+0),A		; next sprite invisable
	LD	(IY+4),A		; next sprite invisable
	LD	(IY+8),A		; next sprite invisable
	LD	(IY+12),A		; next sprite invisable
	LD	HL,I.6319
	LD	DE,I.1B00
	LD	BC,4*4
	CALL	LDIRVM			; update sprite attributes
	POP	AF
	RET

;	  Subroutine set color of sprites
;	     Inputs  ________________________
;	     Outputs ________________________

C.45C3:	LD	(IY+3),A
	LD	(IY+7),A
	LD	(IY+11),A
	LD	(IY+15),A
	RET

J$45D0:	LD	A,(D.6419+1)
	LD	D,2
	AND	A
	JR	Z,J$45DA
	LD	D,3
J$45DA:	CALL	C.6000
	DEFB	0
	DEFW	C.4058
	CALL	C.6000
	DEFB	0
	DEFW	C.405E			; counter #1, clear

; loop

J.45E6:	CALL	C.6000
	DEFB	0
	DEFW	C.4061			; counter #1, get number of seconds
	CP	40			; 40 seconds passed ?
	JP	NC,C.43FC		; yep, exit option
	CALL	C.6000
	DEFB	0
	DEFW	C.40A6			; get dial tone dectect flag
	CP	0FFH
	JR	Z,J.4605
	CP	3
	JR	C,J.4605
	CALL	C.4647
	JP	J.40B4			; execute function (without ?)

J.4605:	CALL	C.6000
	DEFB	0
	DEFW	C.409A			; dialtone ?? counter > 70 ?
	JR	NC,J$4631		; yep,
	CALL	CHSNS			; key ?
	JR	Z,J.45E6		; nope, loop
	CALL	CHGET			; get key
	CP	14H			; F5 ?
	JP	Z,C.43FC		; yep, exit option
	CP	0FH			; F1 ?
	JP	Z,C.4CF6		; yep,
	CALL	C.4534
	LD	B,A			; store key
	CALL	C.470B			; 632E flag set ?
	JP	Z,J.45E6		; nope, loop
	LD	A,B			; restore key
	CP	13H			; F4 ?
	JP	Z,C.4DD7		; yep,
	JR	J.45E6			; loop

J$4631:	CALL	C.6000
	DEFB	0
	DEFW	C.405B			; finish dial tone detect
	LD	A,(D.6341)
	CP	02H
	JR	C,J$4645		; skip speaker
	XOR	A			; speaker = off
	CALL	C.6000
	DEFB	0
	DEFW	C.40D6			; MODEM.SPKCNT
J$4645:	JR	J.4664			; telcom comterm

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4647:	LD	A,22
	LD	(D.63A7),A		; last telcom error = ?
	CALL	C.4507			; update telcom error and error display
	LD	A,1			; line = phone
	LD	(D.6300),A		; option = 1
	CALL	C.6000
	DEFB	0
	DEFW	C.40D9			; MODEM.LINSEL
	CALL	C.6000
	DEFB	0
	DEFW	C.405B			; finish dial tone detect
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4661:	JP	J$45D0

;	  Subroutine telcom comterm
;	     Inputs  ________________________
;	     Outputs ________________________

J.4664:	CALL	C$46DE			; update duplex mode
	LD	A,(D.6419+12)		; protocol mode
	LD	B,"T"			; text
	AND	A
	JR	Z,J.4677
	LD	B,"R"			; raw
	CP	1
	JR	Z,J.4677
	LD	B,"X"			; X-modem
J.4677:	LD	A,(D.6419+13)		; timer1 value
	LD	E,A
	LD	A,(D.6419+14)		; timer2 value
	LD	D,A
	LD	A,B
	CALL	C.6000
	DEFB	0
	DEFW	C.406D			; set protocol and timer values
	CALL	C.6000
	DEFB	6
	DEFW	C.4082			; generate RS232.INIT parameter block
	CALL	C.6000
	DEFB	0
	DEFW	C.40AC			; RS232.INIT
	CALL	C.470B			; 632E flag set ?
	LD	HL,0
	JR	NZ,J$46A0		; yep, skip
	CALL	C.6000
	DEFB	6
	DEFW	C.4088
J$46A0:	CALL	C.6000
	DEFB	6
	DEFW	C.407F			; get comterm mode
	CALL	C.6000
	DEFB	0
	DEFW	C.406A			; comterm ??
	CALL	C.6000
	DEFB	6
	DEFW	C.4058			; restore function key definition (two bytes)
	CALL	C.6000
	DEFB	0
	DEFW	C.4067			; comterm
	CALL	C.6000
	DEFB	6
	DEFW	C.4055			; telcom function key definition
	CALL	C.6000
	DEFB	6
	DEFW	C.4079
	CP	3			; comterm exit code = ?
	JP	NZ,C.43FC		; nope, exit option
	XOR	A
	LD	(D.632C),A
	LD	A,(D.6341)
	CP	02H
	JR	C,J$46DB		; skip speaker
	XOR	A			; speaker = off
	CALL	C.6000
	DEFB	0
	DEFW	C.40D6			; MODEM.SPKCNT
J$46DB:	JP	J.4473			; option 3

;	  Subroutine update duplex mode
;	     Inputs  ________________________
;	     Outputs ________________________

C$46DE:	LD	A,(D.6419+15)		; duplex mode
	AND	A
	JR	Z,J$46E7
	XOR	A			; full duplex
	JR	J$46E9

J$46E7:	LD	A,0FFH			; half duplex
J$46E9:	LD	(D$7EFC),A		; update duplex mode
	XOR	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.46EE:	LD	B,60
J$46F0:	CALL	C.6000
	DEFB	0
	DEFW	C.4070			; get line status
	AND	03H			; line polarity
	RET	NZ
	DJNZ	J$46F0
	RET

;	  Subroutine 632D flag set ?
;	     Inputs  ________________________
;	     Outputs ________________________

C.46FC:	LD	A,(D.632D)
	AND	A
	RET

;	  Subroutine 63B2 flag set ?
;	     Inputs  ________________________
;	     Outputs ________________________

C.4701:	LD	A,(D.63B2)
	AND	A
	RET

;	  Subroutine 632B flag set ?
;	     Inputs  ________________________
;	     Outputs ________________________

C.4706:	LD	A,(D.632B)
	AND	A
	RET

;	  Subroutine 632E flag set ?
;	     Inputs  ________________________
;	     Outputs ________________________

C.470B:	LD	A,(D.632E)
	AND	A
	RET

;	  Subroutine 63CB flag set ?
;	     Inputs  ________________________
;	     Outputs ________________________

C.4710:	LD	A,(D.63CB)
	AND	A
	RET

;	  Subroutine current position = 9,5
;	     Inputs  ________________________
;	     Outputs ________________________

C.4715:	LD	A,9
	LD	(D.630F),A		; current column = 9
	LD	A,5
	LD	(D.6310),A		; current line = 5
	RET

;	  Subroutine current position = 13,11
;	     Inputs  ________________________
;	     Outputs ________________________

C.4720:	LD	A,13
	LD	(D.630F),A		; current column = 13
	LD	A,11
	LD	(D.6310),A		; current line = 11
	RET

;	  Subroutine option 0, F2
;	     Inputs  ________________________
;	     Outputs ________________________

C.472B:	CALL	C.4511			; get telcom error
	JR	NZ,J.4764		; error, quit
	CALL	C.46FC			; 632D flag set ?
	JR	NZ,J.4755		; yep,
	INC	A
	LD	(D.632D),A
	CALL	C.6000
	DEFB	6
	DEFW	C.4061
	LD	A,(D.63B9)
	LD	(D.630F),A		; update current column
	LD	A,11
	LD	(D.6310),A		; current line = 11
	CALL	C.4556			; enable sprites
	CALL	C.4548
	CALL	C.4B80
	JR	J.4764

J.4755:	CALL	C.459E			; disable sprites
	CALL	C.4526
	CALL	C.6000
	DEFB	5
	DEFW	C.404C
	CALL	C.425C
J.4764:	XOR	A
	RET

;	  Subroutine option 0, F3
;	     Inputs  ________________________
;	     Outputs ________________________

C.4766:	CALL	C.4511			; get telcom error
	JR	NZ,J.477C		; error, quit
	CALL	C.46FC			; 632D flag set ?
	JR	NZ,J.477C		; yep, quit
	LD	A,1
	LD	(D.632C),A
	XOR	A
	LD	(D.632B),A
	JP	J.4455			; option 2

J.477C:	XOR	A
	RET

;	  Subroutine option 0, F4
;	     Inputs  ________________________
;	     Outputs ________________________

C.477E:	CALL	C.4511			; get telcom error
	JR	NZ,J.47B4		; error, quit
	CALL	C.46FC			; 632D flag set ?
	JR	NZ,J.47B4		; yep, quit
	LD	A,1
	LD	(D.632C),A
	CALL	C.4701			; 63B2 flag set ?
	JR	NZ,J.47B4		; yep, quit
	LD	A,0FFH
	LD	(D.632B),A
	CALL	C.6000
	DEFB	7
	DEFW	C.4052			; free phone book entry ?
	JR	NZ,J$47AA		; nope,
	CALL	C.6000
	DEFB	7
	DEFW	C.404F			; get number of free phone book data blocks
	LD	A,D
	OR	E			; free data blocks ?
	JP	NZ,J.4455		; yep, option 2
J$47AA:	CALL	C.4FCA
	CALL	C.4506			; reset telcom error and clear error display
	XOR	A
	LD	(D.632C),A
J.47B4:	XOR	A
	RET

;	  Subroutine option 0, F5
;	     Inputs  ________________________
;	     Outputs ________________________

C.47B6:	CALL	C.4511			; get telcom error
	JR	NZ,J$47CE		; error, quit
	CALL	C.4701			; 63B2 flag set ?
	JP	NZ,J.4755		; yep,
	CALL	C.46FC			; 632D flag set ?
	JP	NZ,J.4755		; yep,
	XOR	A
	LD	(D.63CA),A
	JP	J$448D

J$47CE:	XOR	A
	RET

J$47D0:	XOR	A
	LD	(D.6409),A
	LD	A,(D.630F)
	INC	A
	LD	(D.630F),A		; update current column
	CALL	C.4B20
	CALL	C$4B5F
	LD	HL,D.6343
	LD	D,H
	LD	E,L
	INC	DE
	LD	(HL),0FFH
	LD	BC,100-1
	LDIR
	LD	B,0
	LD	C,0
J$47F2:	PUSH	BC
	PUSH	BC
	LD	HL,D.64D0
	LD	D,H
	LD	E,L
	INC	DE
	LD	(HL),20H
	LD	BC,47-1
	LDIR
	XOR	A
	LD	(D.64D0),A
	POP	BC
	LD	A,B
	LD	DE,D.64D0
	CALL	C.5FB3
	LD	B,0
	LD	HL,I.6460
J$4812:	LD	A,(HL)
	CP	0FFH
	JR	Z,J$481B
	INC	HL
	INC	B
	JR	J$4812

J$481B:	LD	A,B
	LD	(D.63B1),A
	LD	A,2AH
	SUB	B
	LD	B,A
	LD	DE,D.64D0
	LD	A,(D.63B1)
	LD	C,A
J$482A:	LD	HL,I.6460
	LD	A,(D.63B1)
	SUB	C
	PUSH	HL
	EX	DE,HL
	LD	D,00H
	LD	E,A
	AND	A
	SBC	HL,DE
	EX	DE,HL
	POP	HL
	LD	A,(D.63B1)
	LD	C,A
J$483F:	LD	A,(DE)
	CP	(HL)
	JR	Z,J$4846
	INC	DE
	JR	J$484D

J$4846:	INC	HL
	INC	DE
	DEC	C
	JR	Z,J$4852
	JR	J$483F

J$484D:	DJNZ	J$482A
	XOR	A
	JR	J$4854

J$4852:	LD	A,0FFH
J$4854:	POP	BC
	AND	A
	JR	Z,J$486A
	LD	A,(D.6409)
	INC	A
	LD	(D.6409),A
	LD	HL,D.6343
	PUSH	DE
	LD	D,0
	LD	E,C
	ADD	HL,DE
	POP	DE
	LD	(HL),B
	INC	C
J$486A:	INC	B
	LD	A,B
	CP	100
	JR	C,J$47F2
	LD	A,(D.6343+0)
	CP	0FFH
	JR	Z,J$487B
	LD	A,0FFH
	JR	J$487C

J$487B:	XOR	A
J$487C:	LD	(D.63B2),A
	CALL	C.459E			; disable sprites
	XOR	A
	LD	(D.632D),A
	LD	(D.6305),A		; current phone book entry (display) = 0
	LD	(D.630B),A		; current phone book entry = 0
	CALL	C.6000
	DEFB	5
	DEFW	C.404C
	CALL	C.425C
	LD	A,(D.6409)
	DEC	A
	LD	(D.6409),A
	LD	A,0FFH
	LD	(D.6400),A
	XOR	A
	RET

;	  Subroutine option 0, UP
;	     Inputs  ________________________
;	     Outputs ________________________

C.48A3:	CALL	C.4511			; get telcom error
	JR	NZ,J.48E7		; error, quit
	CALL	C.46FC			; 632D flag set ?
	JR	NZ,J.48E7		; yep, quit
	LD	A,(D.630B)
	AND	A			; current phone book entry = 0 ?
	JR	Z,J$48D6		; yep,
	DEC	A
	LD	(D.630B),A		; decrease current phone book entry
	LD	A,(D.6305)
	AND	A			; current phone book entry (display) = 0 ?
	JP	Z,J$48CD		; yep,
	CALL	C.48EE
	LD	A,(D.6305)
	DEC	A
	LD	(D.6305),A		; decrease current phone book entry (display)
	CALL	C.48E9
	JR	J.48E7			; quit

J$48CD:	XOR	A
	LD	(D.6400),A
	CALL	C.4A19
	JR	J.48E7			; quit

J$48D6:	LD	A,(D.6400)
	AND	A
	JR	NZ,J$48E4
	LD	A,0FFH
	LD	(D.6400),A
	CALL	C.4A19
J$48E4:	CALL	BEEP
J.48E7:	XOR	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.48E9:	PUSH	AF
	LD	A,1BH			; color = black/
	JR	J$48F1

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.48EE:	PUSH	AF
	LD	A,1FH			; color = black/white
J$48F1:	LD	(D.6403),A		; store color
	LD	A,(D.6300)
	LD	DE,2000H + 5*(32*8) + 1*8	; VRAM address
	AND	A			; option 0 ?
	JR	Z,J$4900		; yep,
	LD	DE,2000H + 4*(32*8) + 1*8	; VRAM address
J$4900:	POP	AF
	LD	L,0
	LD	H,A
	ADD	HL,DE
	PUSH	HL
	LD	BC,14*8
	LD	A,(D.6403)		; color
	CALL	FILVRM
	POP	HL
	LD	DE,15*8
	ADD	HL,DE
	LD	BC,15*8
	LD	A,(D.6403)		; color
	JP	FILVRM

;	  Subroutine option 0, LEFT
;	     Inputs  ________________________
;	     Outputs ________________________

C.491D:	CALL	C.4511			; get telcom error
	JR	NZ,J.4937		; error, quit
	CALL	C.46FC			; 632D flag set ?
	JR	Z,J.4937		; nope, quit
	LD	A,(D.630F)		; current column
	DEC	A
	CP	5
	JR	NC,J$4931
	LD	A,5
J$4931:	LD	(D.630F),A		; update current column
	CALL	C.4556			; enable sprites
J.4937:	XOR	A
	RET

;	  Subroutine option 0, DOWN
;	     Inputs  ________________________
;	     Outputs ________________________

C.4939:	CALL	C.4511			; get telcom error
	JR	NZ,J.498D		; error, quit
	CALL	C.46FC			; 632D flag set ?
	JR	NZ,J.498D		; yep, quit
	CALL	C.4701			; 63B2 flag set ?
	JR	Z,J$4951		; nope,
	LD	A,(D.630B)		; current phone book entry
	LD	HL,D.6409
	CP	(HL)
	JR	NC,J.497C
J$4951:	LD	A,(D.630B)
	CP	99			; current phone book entry = last entry ?
	JR	NC,J.497C		; yep,
	INC	A
	LD	(D.630B),A		; increase current phone book entry
	LD	A,(D.6305)
	CP	14			; current phone book entry (display) = last entry ?
	JP	Z,J$4973		; yep,
	CALL	C.48EE
	LD	A,(D.6305)
	INC	A
	LD	(D.6305),A		; increase current phone book entry (display)
	CALL	C.48E9
	JR	J.498D

J$4973:	XOR	A
	LD	(D.6400),A
	CALL	C.4A93
	JR	J.498D

J.497C:	LD	A,(D.6400)
	AND	A
	JR	NZ,J$498A
	LD	A,0FFH
	LD	(D.6400),A
	CALL	C.4A93
J$498A:	CALL	BEEP
J.498D:	XOR	A
	RET

;	  Subroutine option 0, RIGHT
;	     Inputs  ________________________
;	     Outputs ________________________

C.498F:	CALL	C.4511			; get telcom error
	JR	NZ,J.49A9		; error, quit
	CALL	C.46FC			; 632D flag set ?
	JR	Z,J.49A9		; nope, quit
	LD	A,(D.630F)		; current column
	INC	A
	CP	25+1
	JR	C,J$49A3
	LD	A,25
J$49A3:	LD	(D.630F),A		; update current column
	CALL	C.4556			; enable sprites
J.49A9:	XOR	A
	RET

;	  Subroutine option 0, other
;	     Inputs  ________________________
;	     Outputs ________________________

C.49AB:	CALL	C.4545
	CALL	C.46FC			; 632D flag set ?
	JR	NZ,J$49E2		; yep,
	CALL	C.4511			; get telcom error
	JR	Z,J$49CF		; no error,
	LD	A,(D.6304)		; last key
	AND	0DFH			; to upper
	CALL	C.44FD			; to upper
	CP	"Y"
	JP	Z,J$50F9		; yes
	CP	"N"
	JR	NZ,J.4A17		; other, quit
	CALL	C.4506			; reset telcom error and clear error display
	JP	J.4A17			; quit

J$49CF:	LD	A,(D.6304)		; last key
	CP	1BH			; ESC ?
	JP	Z,J.4755		; yep,
	CP	0DH			; CR ?
	JR	NZ,J.4A17		; nope, quit

; option 0, CR

	XOR	A
	LD	(D.632E),A
	JP	J.4480			; option 1

J$49E2:	LD	A,(D.6304)		; last key
	CP	08H			; BS ?
	JR	NZ,J$49EE		; nope,

; option 0, BS

	CALL	C.4B20
	JR	J.4A14

J$49EE:	CP	0DH			; CR ?
	JR	NZ,J$49FB		; nope,
	LD	A,(D.630F)		; current column
	LD	(D.63B9),A
	JP	J$47D0

J$49FB:	CP	20H			; control key ?
	JR	C,J.4A17		; yep, quit
	CALL	C.6000
	DEFB	6
	DEFW	C.4097			; display character (with ? support)
	CALL	C.4B20
	LD	A,(D.630F)		; current column
	CP	25+1
	JR	C,J.4A14
	LD	A,25
	LD	(D.630F),A
J.4A14:	CALL	C.4556			; enable sprites
J.4A17:	XOR	A
	RET

	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4A19:	CALL	C.4548
	LD	B,0
	LD	C,5			; line = 5
J$4A20:	CALL	C.4B8C
	LD	A,(D.6305)
	LD	D,A			; current phone book entry (display)
	LD	A,(D.630B)		; current phone book entry
	SUB	D
	ADD	A,B
	LD	D,A
	CALL	C.4701			; 63B2 flag set ?
	JR	Z,J$4A38		; nope,
	CALL	C.451B
	JR	Z,J$4A41
	LD	D,A
J$4A38:	LD	A,D
	LD	DE,D.64D0
	PUSH	BC
	CALL	C.5FB3
	POP	BC
J$4A41:	CALL	C.6000
	DEFB	5
	DEFW	C.405B			; cleared display item text
	PUSH	BC
	LD	A,(D.64D0)
	AND	A
	JR	NZ,J$4A52
	LD	A,20H
	JR	J.4A5D

J$4A52:	LD	A,(D.64FC)
	AND	20H
	LD	A,84H
	JR	Z,J.4A5D
	LD	A,85H
J.4A5D:	LD	HL,I.64CF
	LD	(HL),A
	LD	D,14			; size of string = 14
	LD	B,1			; column = 1
	CALL	C.44C5			; display string (with ? support)
	POP	BC
	CALL	C.6000
	DEFB	5
	DEFW	C.405E			; cleared display item value
	PUSH	BC
	LD	D,15			; size of string = 15
	LD	B,16			; column = 16
	LD	HL,I.64E5
	CALL	C.44C5			; display string (with ? support)
	POP	BC
	LD	A,(D.6400)
	AND	A
	JR	NZ,J.4A8A
	CALL	CHSNS			; key ?
	JR	Z,J.4A8A		; nope,
	CALL	C.4B0A
	RET

J.4A8A:	INC	C
	INC	B
	LD	A,B
	CP	15
	JP	C,J$4A20
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4A93:	CALL	C.4548
	LD	B,0
	LD	C,19			; line = 19
J$4A9A:	CALL	C.4B8C
	LD	A,(D.630B)		; current phone book entry
	ADD	A,B
	LD	D,A
	CALL	C.4701			; 63B2 flag set ?
	JR	Z,J$4AAD		; nope,
	CALL	C.451B
	JR	Z,J$4AB6
	LD	D,A
J$4AAD:	LD	A,D
	LD	DE,D.64D0
	PUSH	BC
	CALL	C.5FB3
	POP	BC
J$4AB6:	CALL	C.6000
	DEFB	5
	DEFW	C.405B			; cleared display item text
	PUSH	BC
	LD	A,(D.64D0)
	AND	A
	JR	NZ,J$4AC7
	LD	A,20H
	JR	J.4AD2

J$4AC7:	LD	A,(D.64FC)
	AND	20H
	LD	A,84H
	JR	Z,J.4AD2
	LD	A,85H
J.4AD2:	LD	HL,I.64CF
	LD	(HL),A
	LD	D,14			; size of string = 14
	LD	B,1			; column = 1
	CALL	C.44C5			; display string (with ? support)
	POP	BC
	CALL	C.6000
	DEFB	5
	DEFW	C.405E			; cleared display item value
	PUSH	BC
	LD	D,15			; size of string = 15
	LD	B,16			; column = 16
	LD	HL,I.64E5
	CALL	C.44C5			; display string (with ? support)
	POP	BC
	LD	A,(D.6400)
	AND	A
	JR	NZ,J.4AFF
	CALL	CHSNS			; key ?
	JR	Z,J.4AFF		; nope,
	CALL	C.4B0A
	RET

J.4AFF:	DEC	C
	DEC	B
	LD	A,B
	NEG
	CP	0FH
	JP	C,J$4A9A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4B0A:	LD	A,(D.6305)
	AND	A			; current phone book entry (display) = 0 ?
	JR	NZ,J$4B14		; nope,
	LD	A,1EH
	JR	J$4B16

J$4B14:	LD	A,1FH
J$4B16:	LD	B,40
	LD	HL,KEYBUF
J$4B1B:	LD	(HL),A
	INC	HL
	DJNZ	J$4B1B
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4B20:	LD	HL,I.6460
	LD	A,(D.630F)		; current column
	SUB	6
	LD	B,A
	LD	D,0
	LD	E,A
	ADD	HL,DE
	LD	A,(D.6304)		; last key
	CP	7FH			; DEL ?
	JR	Z,J.4B3B		; yep,
	CP	08H			; BS ?
	JR	Z,J.4B3B		; yep,
	LD	(HL),A
	JR	J$4B5D

J.4B3B:	INC	HL
	LD	A,15H
	SUB	B
	LD	C,A
	LD	B,00H
	LD	D,H
	LD	E,L
	DEC	DE
	LDIR
	LD	A,(D.630F)		; current column
	CP	6
	JR	C,J$4B52
	DEC	A
	LD	(D.630F),A		; update current column
J$4B52:	LD	A,20H
	LD	(D$6474),A
	CALL	C.4548
	CALL	C.4B80
J$4B5D:	XOR	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$4B5F:	CALL	C.4548
	PUSH	HL
	PUSH	BC
	LD	HL,I.6460
	LD	B,15H
J$4B69:	LD	A,(HL)
	CP	0DH	; 13 
	JR	NZ,J$4B75
J$4B6E:	LD	(HL),0FFH
	INC	HL
	DJNZ	J$4B6E
	JR	J$4B78

J$4B75:	INC	HL
	DJNZ	J$4B69
J$4B78:	LD	(HL),0FFH
	CALL	C.4B80
	POP	BC
	POP	HL
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4B80:	LD	HL,I.6460
	LD	D,21			; size of string = 21
	LD	B,5			; column = 5
	LD	C,11			; line = 11
	JP	C.44C5			; display string (with ? support)

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4B8C:	PUSH	BC
	LD	HL,D.64D0
	LD	D,H
	LD	E,L
	INC	DE
	LD	(HL),20H	; " "
	LD	BC,I$0307
	LDIR
	LD	HL,I$67D8
	XOR	A
	LD	(HL),A
	INC	HL
	LD	(HL),A
	LD	(D.64D0),A
	POP	BC
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4BA6:	LD	D,0FFH
	CALL	C.6000
	DEFB	0
	DEFW	C.4058
	CALL	C.6000
	DEFB	0
	DEFW	C.405E			; counter #1, clear
J.4BB4:	CALL	C.6000
	DEFB	0
	DEFW	C.4061			; counter #1, get number of seconds
	CP	40			; 40 seconds passed ?
	JP	NC,C.43FC		; yep, exit option
	CALL	C.6000
	DEFB	0
	DEFW	C.40A6			; get dial tone dectect flag
	CP	0FFH
	JR	Z,J.4BD3
	CP	3
	JR	C,J.4BD3
	CALL	C.4647
	JP	J.40B4			; execute function (without ?)

J.4BD3:	CALL	C.6000
	DEFB	0
	DEFW	C.4070			; get line status
	AND	03H			; line polarity
	JR	Z,J.4BE9
	CP	03H
	JR	Z,J.4BE9
	LD	B,A
	LD	A,(D.6429)
	CP	B
	JP	NZ,J.40B4		; execute function (without ?)
J.4BE9:	CALL	CHSNS			; key ?
	JR	Z,J.4BB4		; nope,
	CALL	CHGET			; get key
	CP	14H			; F5 ?
	JP	Z,C.43FC		; yep, exit option
	CP	0FH			; F1 ?
	JP	Z,C.4CF6		; yep,
	CALL	C.4534
	CP	10H			; F2 ?
	JP	Z,C.4D9D		; yep,
	LD	B,A			; store key
	CALL	C.470B			; 632E flag set ?
	JR	Z,J.4BB4		; nope,
	LD	A,B			; restore key
	CP	13H			; F4 ?
	JP	Z,C.4DD7		; yep,
	JR	J.4BB4

;	  Subroutine option 1, other
;	     Inputs  ________________________
;	     Outputs ________________________

C.4C11:	CALL	C.470B			; 632E flag set ?
	JR	NZ,J$4C47		; yep,
	CALL	C.4534
	CALL	C.4516			; item 0 zero value ?
	JP	NZ,J.4CF4		; nope, quit
	LD	A,(D.6304)		; last key
	CP	1BH			; ESC ?
	JR	Z,J$4C38		; yep,
	CALL	C.4710			; 63CB flag set ?
	JP	Z,J.4CF4		; nope, quit
	LD	A,(D.6304)		; last key
	CALL	C.6000
	DEFB	6
	DEFW	C.4046			; dial character
	JP	J.4CF4			; quit

J$4C38:	LD	A,(D.63CB)
	INC	A
	AND	01H
	LD	(D.63CB),A
	CALL	C.4D63
	JP	J.4CF4			; quit

J$4C47:	CALL	C.4511			; get telcom error
	JR	Z,J$4C52		; no error,
	CALL	C.4534
	JP	J.4CF4			; quit

J$4C52:	CALL	C.4710			; 63CB flag set ?
	JR	Z,J.4C6C		; nope,
	CALL	C.4516			; item 0 zero value ?
	JR	NZ,J.4C6C		; nope,
	LD	A,(D.6304)		; last key
	CP	1BH			; ESC ?
	JR	Z,J$4C7B		; yep,
	CALL	C.6000
	DEFB	6
	DEFW	C.4046			; dial character
	JP	J.4CF4			; quit

J.4C6C:	CALL	C.4545
	CALL	C.4516			; item 0 zero value ?
	JR	NZ,J.4C8A		; nope,
	LD	A,(D.6304)		; last key
	CP	1BH			; ESC ?
	JR	NZ,J.4C8A		; nope,
J$4C7B:	LD	A,(D.63CB)
	INC	A
	AND	01H
	LD	(D.63CB),A
	CALL	C.4D63
	JP	J.4CF4			; quit

J.4C8A:	LD	A,(D.6304)		; last key
	CP	0DH			; CR ?
	JR	Z,J$4CBE		; yep,
	CP	08H			; BS ?
	JR	NZ,J$4C9D		; nope,
	CALL	C.6000
	DEFB	6
	DEFW	C.408E
	JR	J.4CB9

J$4C9D:	CP	20H
	JR	C,J.4CB9
	CALL	C.6000
	DEFB	6
	DEFW	C.4097			; display character (with ? support)
	CALL	C.6000
	DEFB	6
	DEFW	C.408E
	LD	A,(D.630F)		; current column
	CP	29+1
	JR	C,J.4CB9
	LD	A,29
	LD	(D.630F),A		; update current column
J.4CB9:	CALL	C.4556			; enable sprites
	JR	J.4CF4			; quit

J$4CBE:	CALL	C.6000
	DEFB	0
	DEFW	C.4070			; get line status
	AND	03H			; line polarity
	JR	Z,J$4CCF
	LD	A,8
	CALL	C.4507			; update telcom error and error display
	JR	J.4CF4			; quit

J$4CCF:	CALL	C.6000
	DEFB	0
	DEFW	C.40D9			; MODEM.LINSEL (line = modem)
	NOP
	CALL	C.46EE
	JR	Z,J.4CF1
	CP	03H	; 3 
	JR	NC,J.4CF1
	LD	(D.6429),A
	CALL	C.6000
	DEFB	6
	DEFW	C.4076
	CALL	C.4516			; item 0 zero value ?
	JP	Z,C.4BA6		; yep,
	JP	C.4661

J.4CF1:	CALL	C.4D56
J.4CF4:	XOR	A
	RET

;	  Subroutine option 1, F1
;	     Inputs  ________________________
;	     Outputs ________________________

C.4CF6:	CALL	C.4511			; get telcom error
	JR	Z,J$4D00		; no error,
	CALL	C.4506			; reset telcom error and clear error display
	JR	J.4D54

J$4D00:	CALL	C.4710			; 63CB flag set ?
	JR	NZ,J.4D54		; yep,
	LD	A,1			; line = phone
	CALL	C.6000
	DEFB	0
	DEFW	C.40D9			; MODEM.LINSEL
	NOP
	CALL	C.6000
	DEFB	0
	DEFW	C.405E			; counter #1, clear
J$4D14:	CALL	C.6000
	DEFB	0
	DEFW	C.4061			; counter #1, get number of seconds
	CP	1			; 1 second passed ?
	JR	C,J$4D14		; nope, wait
	CALL	C.6000
	DEFB	0
	DEFW	C.4070			; get line status
	AND	03H			; line polarity
	JR	Z,J$4D2F
	LD	A,8
	CALL	C.4507			; update telcom error and error display
	JR	J.4D54

J$4D2F:	CALL	C.6000
	DEFB	0
	DEFW	C.40D9			; MODEM.LINSEL (line = modem)
	NOP
	CALL	C.46EE
	JR	Z,J.4D51
	CP	03H	; 3 
	JR	NC,J.4D51
	LD	(D.6429),A
	CALL	C.6000
	DEFB	6
	DEFW	C.4076
	CALL	C.4516			; item 0 zero value ?
	JP	Z,C.4BA6		; yep,
	JP	C.4661

J.4D51:	CALL	C.4D56
J.4D54:	XOR	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4D56:	LD	A,1			; line = phone
	CALL	C.6000
	DEFB	0
	DEFW	C.40D9			; MODEM.LINSEL
	LD	A,9
	JP	C.4507			; update telcom error and error display

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4D63:	LD	HL,I$4D91
	LD	B,0CH	; 12 
	AND	A
	JR	Z,J.4D7C
J$4D6B:	PUSH	HL
	PUSH	BC
	LD	A,(HL)
	CALL	C.6000
	DEFB	6
	DEFW	C.404C
	POP	BC
	POP	HL
	INC	HL
	DJNZ	J$4D6B
	JP	C.459E			; disable sprites

J.4D7C:	PUSH	HL
	PUSH	BC
	LD	A,(HL)
	CALL	C.6000
	DEFB	6
	DEFW	C.4049
	POP	BC
	POP	HL
	INC	HL
	DJNZ	J.4D7C
	CALL	C.470B			; 632E flag set ?
	RET	Z			; nope, quit
	JP	C.4556			; enable sprites

I$4D91:	LD	BC,I$0302
	INC	B
	DEC	B
	LD	B,07H	; 7 
	EX	AF,AF'
	ADD	HL,BC
	LD	HL,(D$2300)

;	  Subroutine option 1, F2
;	     Inputs  ________________________
;	     Outputs ________________________

C.4D9D:	CALL	C.4511			; get telcom error
	JR	Z,J$4DA7		; no error,
	CALL	C.4506			; reset telcom error and clear error display
	JR	J.4DD5

J$4DA7:	CALL	C.4710			; 63CB flag set ?
	JR	NZ,J.4DD5		; yep, quit
	CALL	C.4710			; 63CB flag set ?
	JR	NZ,J.4DD5		; yep, quit
	CALL	C.4516			; item 0 zero value ?
	JR	NZ,J.4DD5		; nope, quit
	XOR	A
	CALL	C.6000
	DEFB	0
	DEFW	C.40E8			; MODEM.HOKCNT
	CALL	C.6000
	DEFB	0
	DEFW	C.405E			; counter #1, clear
J$4DC3:	CALL	C.6000
	DEFB	0
	DEFW	C.4061			; counter #1, get number of seconds
	CP	1
	JR	C,J$4DC3
	LD	A,1
	CALL	C.6000
	DEFB	0
	DEFW	C.40E8			; MODEM.HOKCNT
J.4DD5:	XOR	A
	RET

;	  Subroutine option 1, F4
;	     Inputs  ________________________
;	     Outputs ________________________

C.4DD7:	CALL	C.4511			; get telcom error
	JR	Z,J$4DE1		; no error,
	CALL	C.4506			; reset telcom error and clear error display
	JR	J.4E03

J$4DE1:	CALL	C.470B			; 632E flag set ?
	JR	Z,J.4E03		; nope,
	CALL	C.4710			; 63CB flag set ?
	JR	NZ,J.4E03		; yep,

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4DEB:	CALL	C.4511			; get telcom error
	JR	NZ,J.4E03		; error, quit
	LD	A,1			; line = phone
	CALL	C.6000
	DEFB	0
	DEFW	C.40D9			; MODEM.LINSEL
	NOP
	CALL	C.6000
	DEFB	0
	DEFW	C.405E			; counter #1, clear
	XOR	A
	LD	(D$6402),A
J.4E03:	XOR	A
	RET

;	  Subroutine option 1, LEFT
;	     Inputs  ________________________
;	     Outputs ________________________

C.4E05:	CALL	C.4710			; 63CB flag set ?
	JR	NZ,J.4E1F		; yep, quit
	CALL	C.470B			; 632E flag set ?
	JR	Z,J.4E1F		; nope, quit
	LD	A,(D.630F)		; current column
	DEC	A
	CP	9
	JR	NC,J$4E19
	LD	A,9
J$4E19:	LD	(D.630F),A		; update current column
	CALL	C.4556			; enable sprites
J.4E1F:	XOR	A
	RET

;	  Subroutine option 1, RIGHT
;	     Inputs  ________________________
;	     Outputs ________________________

C.4E21:	CALL	C.4710			; 63CB flag set ?
	JR	NZ,J.4E3B		; yep, quit
	CALL	C.470B			; 632E flag set ?
	JR	Z,J.4E3B		; nope, quit
	LD	A,(D.630F)		; current column
	INC	A
	CP	29+1
	JR	C,J$4E35
	LD	A,29
J$4E35:	LD	(D.630F),A		; update current column
	CALL	C.4556			; enable sprites
J.4E3B:	XOR	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$4E3D:	CALL	C.4548
	CALL	C.4B8C
	LD	A,(D.630B)
	LD	D,A			; current phone book entry
	CALL	C.4701			; 63B2 flag set ?
	JR	Z,J$4E52		; nope,
	CALL	C.451B
	JR	Z,J$4E59
	LD	D,A
J$4E52:	LD	A,D
	LD	DE,D.64D0
	CALL	C.5F57
J$4E59:	LD	HL,D.64D0
	LD	B,9			; column = 9
	LD	C,4			; line = 4
	LD	D,21			; size of string = 21
	CALL	C.44C5			; display string (with ? support)
	LD	B,9			; column = 9
	LD	C,5			; line = 5
	LD	D,21			; size of string = 21
	JP	C.44C5			; display string (with ? support)

;	  Subroutine option 2, other
;	     Inputs  ________________________
;	     Outputs ________________________

C.4E6E:	CALL	C$454C
	LD	A,(D.6304)		; last key
	CP	0DH			; CR ?
	JP	NZ,J$4E85		; nope,

; option 2, CR

	CALL	C$4F0E
	CALL	C.6000
	DEFB	6
	DEFW	C.40A0
	JP	J.4F09

J$4E85:	CP	1BH			; ESC ?
	JR	NZ,J.4EA5		; nope,

; option 2, ESC

	LD	A,(D.6307)
	CP	02H
	JR	C,J.4EA5
	LD	A,2
	CALL	C.51BA
	XOR	A
	LD	(D.6307),A
	CALL	C.51A8
	LD	A,5
	LD	(D.6310),A		; current line = 5
	LD	A,9
	JR	J.4F06

J.4EA5:	LD	A,(D.6304)		; last key
	CP	08H			; BS ?
	JR	NZ,J$4EB5		; nope,

; option 2, BS

	CALL	C.6000
	DEFB	6
	DEFW	C.409A
	JP	J.4F09

J$4EB5:	CP	20H			; control key ?
	JR	C,J$4F0C		; yep, quit
	CALL	C.6000
	DEFB	6
	DEFW	C.4097			; display character (with ? support)
	CALL	C.6000
	DEFB	6
	DEFW	C.409A
	LD	A,(D.630F)		; current column
	CP	30
	JR	C,J.4F09
	LD	A,(D.6307)
	CP	02H
	JR	C,J.4F04
	CP	0AH
	JR	NC,J$4EE4
	INC	A
	LD	(D.6307),A
	LD	A,(D.6310)
	INC	A
	LD	(D.6310),A		; update current line
	JR	J$4F00

J$4EE4:	LD	A,(D.633F)
	CP	12H	; 18 
	JR	NC,J$4EF1
	INC	A
	LD	(D.633F),A
	JR	J$4EF6

J$4EF1:	CALL	BEEP
	JR	J.4F04

J$4EF6:	LD	A,3
	LD	(D.630F),A		; current column = 3
	CALL	C.53A3
	JR	J.4F09

J$4F00:	LD	A,3
	JR	J.4F06

J.4F04:	LD	A,29
J.4F06:	LD	(D.630F),A		; update current column
J.4F09:	CALL	C.4556			; enable sprites
J$4F0C:	XOR	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$4F0E:	CALL	C.6000
	DEFB	6
	DEFW	C.4097			; display character (with ? support)
	CALL	C.6000
	DEFB	6
	DEFW	C.409A
	LD	A,(D.6307)
	AND	A
	JR	NZ,J$4F2A
	LD	B,09H	; 9 
	LD	C,07H	; 7 
	CALL	C.51BA
	INC	A
	JR	J$4F63

J$4F2A:	CP	0AH	; 10 
	JR	C,J$4F4A
	LD	A,(D.633F)
	CP	12H	; 18 
	JR	NC,J$4F3B
	INC	A
	LD	(D.633F),A
	JR	J$4F42

J$4F3B:	CALL	BEEP
	LD	A,29
	JR	J$4F44

J$4F42:	LD	A,3
J$4F44:	LD	(D.630F),A		; update current column
	JP	C.53A3

J$4F4A:	LD	B,03H	; 3 
	LD	A,(D.6307)
	CP	01H	; 1 
	JR	NZ,J$4F5A
	CALL	C.51BA
	LD	C,11
	JR	J$4F62

J$4F5A:	LD	A,(D.6310)		; current line
	INC	A
	LD	C,A
	LD	A,(D.6307)
J$4F62:	INC	A
J$4F63:	CP	03H	; 3 
	JR	NC,J$4F6E
	PUSH	BC
	PUSH	AF
	CALL	C.51A8
	POP	AF
	POP	BC
J$4F6E:	LD	(D.6307),A
	LD	A,B
	LD	(D.630F),A		; update current column
	LD	A,C
	LD	(D.6310),A		; update current line
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$4F7A:	CALL	C.4706			; 632B flag set ?
	JR	Z,J.4F9E		; nope,
	LD	A,(I.6800+99)
	INC	A			; last phone book entry empty ?
	JR	NZ,C.4FCA		; nope,
	LD	A,(D.630B)
	LD	B,A			; current phone book entry
	LD	A,99
	SUB	B
	JR	Z,J.4F9E
	LD	B,A
	LD	HL,I.6800+99
	LD	DE,I.6800+99-1
J$4F95:	LD	C,(HL)
	LD	A,(DE)
	LD	(HL),A
	LD	A,C
	LD	(DE),A
	DEC	HL
	DEC	DE
	DJNZ	J$4F95
J.4F9E:	CALL	C$4FE5
	LD	A,(D.630B)
	LD	D,A			; current phone book entry
	CALL	C.4701			; 63B2 flag set ?
	JR	Z,J$4FB0		; nope,
	CALL	C.451B
	JR	Z,C.4FCA
	LD	D,A
J$4FB0:	CALL	C.6000
	DEFB	7
	DEFW	C.4055
	JR	C,C.4FCA
	LD	A,D
	PUSH	DE
	LD	DE,D.64D0
	CALL	C$5E6E
	POP	DE
	AND	A
	RET	Z
	LD	A,D
	LD	DE,D.64D0
	CALL	C.5E0D			; clear phone book entry and data blocks

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4FCA:	LD	A,3
	CALL	C.4507			; update telcom error and error display
	LD	B,3
J$4FD1:	PUSH	BC
	CALL	BEEP
	CALL	C$4FDC			; wait ? ms
	POP	BC
	DJNZ	J$4FD1			; next
	RET

;	  Subroutine wait ? ms
;	     Inputs  ________________________
;	     Outputs ________________________

C$4FDC:	LD	BC,I$9000
J$4FDF:	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,J$4FDF
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$4FE5:	LD	IY,I$640E
	LD	(IY+0),0
	LD	HL,I.67D2
	LD	DE,I$67D7
	LD	BC,02D9H
	LDDR
	LD	HL,I.63B3
	LD	DE,I.64FA
	LD	BC,5
	LDIR
	LD	HL,I.64FF
	LD	D,H
	LD	E,L
	LD	C,27
J$500A:	LD	B,27
J$500C:	LD	A,(DE)
	LD	(HL),A
	CP	0DH
	JR	Z,J$5018
	INC	HL
	INC	DE
	DJNZ	J$500C
	JR	J$501F

J$5018:	INC	(IY+0)
	INC	HL
J$501C:	INC	DE
	DJNZ	J$501C
J$501F:	DEC	C
	JR	NZ,J$500A
	LD	HL,I.64FF
	LD	BC,02D9H
J$5028:	LD	A,(IY+0)
	AND	A
	JR	Z,J$503F
J$502E:	LD	A,(HL)
	CP	0DH
	JR	Z,J$5039
	INC	HL
	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,J$502E
J$5039:	INC	HL
	DEC	(IY+0)
	JR	J$5028

J$503F:	LD	(HL),0
	XOR	A
	LD	(D.633F),A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$5046:	LD	HL,D.64D0
	LD	C,29
J$504B:	LD	B,15H
	LD	A,C
	CP	28
	JR	NC,J.5054
	LD	B,27
J.5054:	LD	A,(HL)
	CP	0DH
	JR	Z,J.5063
	AND	A
	JR	NZ,J$505E
	LD	(HL),20H
J$505E:	INC	HL
	DJNZ	J.5054
	JR	J.506B

J.5063:	INC	HL
	DEC	B
	JR	Z,J.506B
	LD	(HL),20H
	JR	J.5063

J.506B:	DEC	C
	JR	NZ,J$504B
	LD	HL,I.67D2
	LD	BC,02D9H
J$5074:	LD	A,(HL)
	CP	0DH
	JR	Z,J$5081
	LD	(HL),20H
	DEC	HL
	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,J$5074
J$5081:	RET

?.5082:	LD	HL,I.64FA
	LD	BC,02D9H
J$5088:	LD	A,(HL)
	CP	81H
	JR	NZ,J$508F
	LD	(HL),20H
J$508F:	INC	HL
	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,J$5088
	RET

;	  Subroutine option 2, F1
;	     Inputs  ________________________
;	     Outputs ________________________

C.5096:	CALL	C.4511			; get telcom error
	JR	NZ,J$50EB		; error,
	LD	B,15H
	LD	D,09H	; 9 
	LD	E,05H	; 5 
	CALL	C.6000
	DEFB	5
	DEFW	C.4049
	LD	B,15H
	LD	D,09H	; 9 
	LD	E,07H	; 7 
	CALL	C.6000
	DEFB	5
	DEFW	C.4049
	LD	B,28
	LD	D,02H	; 2 
	LD	E,11
	LD	C,09H	; 9 
J$50BB:	PUSH	BC
	PUSH	DE
	CALL	C.6000
	DEFB	5
	DEFW	C.4049
	POP	DE
	POP	BC
	INC	E
	DEC	C
	JR	NZ,J$50BB
	CALL	C.4B8C
	CALL	C.4715			; current position = 9,5
	LD	A,(D.6307)
	CP	02H	; 2 
	JR	C,J$50DB
	LD	A,02H	; 2 
	LD	(D.6307),A
J$50DB:	CALL	C.51BA
	XOR	A
	LD	(D.6307),A
	LD	(D.633F),A
	CALL	C.51A8
	CALL	C.4556			; enable sprites
J$50EB:	XOR	A
	RET

;	  Subroutine option 0, F8
;	     Inputs  ________________________
;	     Outputs ________________________

C.50ED:	CALL	C.4511			; get telcom error
	JR	NZ,J$50F7		; error, quit
	LD	A,4
	CALL	C.4507			; update telcom error and error display
J$50F7:	XOR	A
	RET

J$50F9:	LD	A,(D.630B)
	LD	D,A			; current phone book entry
	CALL	C.4701			; 63B2 flag set ?
	JR	Z,J$5108		; nope,
	CALL	C.451B
	JR	Z,J$5110
	LD	D,A
J$5108:	PUSH	DE
	LD	A,D
	LD	DE,D.64D0
	CALL	C.5E0D			; clear phone book entry and data blocks
J$5110:	CALL	C.4B8C
	POP	DE
	LD	A,99
	SUB	D
	JR	Z,J$512D
	LD	B,A
	LD	HL,I.6800
	LD	E,D
	LD	D,0
	ADD	HL,DE
	LD	D,H
	LD	E,L
	INC	DE
J$5124:	LD	C,(HL)
	LD	A,(DE)
	LD	(HL),A
	LD	A,C
	LD	(DE),A
	INC	HL
	INC	DE
	DJNZ	J$5124
J$512D:	CALL	C.46FC			; 632D flag set ?
	JR	Z,J$513E		; nope,
	LD	A,(D.630B)		; current phone book entry
	LD	HL,D.6343
	LD	E,A
	LD	D,0
	ADD	HL,DE
	LD	(HL),0FFH
J$513E:	XOR	A
	LD	(D.63A7),A		; reset last telcom error
	LD	(D.63B2),A
	LD	A,(D.6300)
	AND	A			; option 0 ?
	JR	NZ,J$514E		; nope,
	JP	C.43FC			; exit option

J$514E:	XOR	A
	RET

;	  Subroutine option 2, UP
;	     Inputs  ________________________
;	     Outputs ________________________

C.5150:	CALL	C.4511			; get telcom error
	JR	NZ,J$51A6		; error,
	LD	A,(D.6307)
	AND	A
	JR	Z,J.51A3
	CP	02H	; 2 
	JR	Z,J$518F
	CP	03H	; 3 
	JR	NC,J$517F
	CALL	C.51BA
	LD	A,(D.6307)
	DEC	A
	LD	(D.6307),A
	CALL	C.51A8
	LD	A,9
	LD	(D.630F),A		; current column = 9
	LD	A,(D.6307)
	LD	A,5
	LD	(D.6310),A		; current line = 5
	JR	J.51A3

J$517F:	LD	A,(D.6307)
	DEC	A
	LD	(D.6307),A
	LD	A,(D.6310)
	DEC	A
	LD	(D.6310),A		; update current line
	JR	J.51A3

J$518F:	LD	A,(D.633F)
	AND	A
	JR	NZ,J$519C
	PUSH	AF
	CALL	BEEP
	POP	AF
	JR	J.51A3

J$519C:	DEC	A
	LD	(D.633F),A
	CALL	C.53A3
J.51A3:	CALL	C.4556			; enable sprites
J$51A6:	XOR	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.51A8:	PUSH	BC
	PUSH	AF
	PUSH	AF
	XOR	A
	LD	(D.640D),A
	POP	AF
	LD	HL,D.6403
	LD	(HL),1BH
	INC	HL
	LD	(HL),1BH
	JR	J$51CB

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.51BA:	PUSH	BC
	PUSH	AF
	PUSH	AF
	LD	A,01H	; 1 
	LD	(D.640D),A
	POP	AF
	LD	HL,D.6403
	LD	(HL),0F5H
	INC	HL
	LD	(HL),0F5H
J$51CB:	LD	DE,I$2510
	CP	02H	; 2 
	JR	Z,J$51FC
	ADD	A,A
	LD	L,00H
	LD	H,A
	ADD	HL,DE
	PUSH	HL
	LD	BC,48
	LD	A,(D.6403)
	CALL	FILVRM
	POP	HL
	LD	DE,56
	ADD	HL,DE
	LD	BC,168
	LD	A,(D.640D)
	AND	A
	JR	NZ,J$51F4
	LD	A,(D.6403)
	JR	J$51F6

J$51F4:	LD	A,1FH
J$51F6:	CALL	FILVRM
	POP	AF
	POP	BC
	RET

J$51FC:	PUSH	DE
	LD	HL,I$2914
	LD	B,28
J$5202:	PUSH	BC
	PUSH	HL
	LD	BC,4
	LD	A,(D.6404)
	CALL	FILVRM
	POP	HL
	POP	BC
	LD	DE,8
	ADD	HL,DE
	DJNZ	J$5202
	POP	DE
	LD	HL,I$0500
	ADD	HL,DE
	LD	BC,I$00E0
	LD	A,(D.6404)
	CALL	FILVRM
	POP	AF
	POP	BC
	RET

;	  Subroutine option 2, LEFT
;	     Inputs  ________________________
;	     Outputs ________________________

C.5226:	CALL	C.4511			; get telcom error
	JR	NZ,J$527E		; error,
	LD	A,(D.6307)
	CP	02H	; 2 
	JR	C,J$526E
	JR	NZ,J$5254
	LD	A,(D.630F)		; current column
	DEC	A
	CP	3
	JR	NC,J.5278
	LD	A,(D.633F)
	AND	A
	JR	Z,J$524D
	DEC	A
	LD	(D.633F),A
	CALL	C.53A3
	LD	A,29
	JR	J.5278

J$524D:	CALL	BEEP
	LD	A,03H	; 3 
	JR	J.5278

J$5254:	LD	A,(D.630F)		; current column
	DEC	A
	CP	3
	JR	NC,J.5278
	LD	A,(D.6310)
	DEC	A
	LD	(D.6310),A		; update current line
	LD	A,(D.6307)
	DEC	A
	LD	(D.6307),A
	LD	A,29
	JR	J.5278

J$526E:	LD	A,(D.630F)		; current column
	DEC	A
	CP	9
	JR	NC,J.5278
	LD	A,9
J.5278:	LD	(D.630F),A		; update current column
	CALL	C.4556			; enable sprites
J$527E:	XOR	A
	RET

;	  Subroutine option 2, DOWN
;	     Inputs  ________________________
;	     Outputs ________________________

C.5280:	CALL	C.4511			; get telcom error
	JR	NZ,J$52E5		; error,
	LD	A,(D.6307)
	CP	0AH	; 10 
	JP	NC,J$52CE
	CP	02H	; 2 
	JR	NC,J$52BE
	CALL	C.51BA
	LD	A,(D.6307)
	INC	A
	LD	(D.6307),A
	CALL	C.51A8
	LD	A,(D.6307)
	CP	02H	; 2 
	LD	A,09H	; 9 
	JR	NZ,J$52A9
	LD	A,3
J$52A9:	LD	(D.630F),A		; update current column
	LD	A,(D.6307)
	CP	02H	; 2 
	JR	Z,J$52B7
	LD	A,7
	JR	J$52B9

J$52B7:	LD	A,11
J$52B9:	LD	(D.6310),A		; update current line
	JR	J.52E2

J$52BE:	LD	A,(D.6307)
	INC	A
	LD	(D.6307),A
	LD	A,(D.6310)
	INC	A
	LD	(D.6310),A		; update current line
	JR	J.52E2

J$52CE:	LD	A,(D.633F)
	INC	A
	CP	13H	; 19 
	JR	C,J$52DC
	PUSH	AF
	CALL	BEEP
	POP	AF
	DEC	A
J$52DC:	LD	(D.633F),A
	CALL	C.53A3
J.52E2:	CALL	C.4556			; enable sprites
J$52E5:	XOR	A
	RET

;	  Subroutine option 2, RIGHT
;	     Inputs  ________________________
;	     Outputs ________________________

C.52E7:	CALL	C.4511			; get telcom error
	JR	NZ,J.533A		; error,
	LD	A,(D.6307)
	CP	02H	; 2 
	JR	C,J$532A
	LD	A,(D.630F)		; current column
	INC	A
	CP	30
	JR	C,J.5334
	LD	A,(D.6307)
	INC	A
	CP	11
	JR	NC,J$530C
	LD	(D.6307),A
	LD	A,(D.6310)		; current line
	INC	A
	JR	J$5323

J$530C:	LD	A,(D.633F)
	CP	12H	; 18 
	JR	NC,J$531C
	INC	A
	LD	(D.633F),A
	CALL	C.53A3
	JR	J$5321

J$531C:	CALL	BEEP
	JR	J.533A

J$5321:	LD	A,19
J$5323:	LD	(D.6310),A		; update current line
	LD	A,03H	; 3 
	JR	J.5334

J$532A:	LD	A,(D.630F)		; current column
	INC	A
	CP	30
	JR	C,J.5334
	LD	A,29
J.5334:	LD	(D.630F),A		; update current column
	CALL	C.4556			; enable sprites
J.533A:	XOR	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$533C:	LD	A,(D.632C)
	CP	0FFH
	JR	Z,J$536F
	CALL	C.4B8C
	CALL	C.4706			; 632B flag set ?
	JR	NZ,J$5366		; yep,
	LD	A,(D.630B)
	LD	D,A			; current phone book entry
	CALL	C.4701			; 63B2 flag set ?
	JR	Z,J$5359		; nope,
	CALL	C.451B
	RET	Z
	LD	D,A
J$5359:	LD	A,D
	LD	DE,D.64D0
	CALL	C.5F57
	CALL	C.6000
	DEFB	5
	DEFW	C.4058
J$5366:	CALL	C.6000
	DEFB	6
	DEFW	C.40A0
	CALL	C$53CF
J$536F:	CALL	C.4550
	LD	HL,D.64D0
	LD	C,5			; line = 5
	LD	E,1
J$5379:	LD	B,9			; column = 9
	LD	D,21			; size of string = 21
	CALL	C.44C5			; display string (with ? support)
	LD	A,E
	ADD	A,A
	ADD	A,E
	ADD	A,A
	ADD	A,1
	LD	C,A
	INC	E
	LD	A,E
	CP	3
	JR	C,J$5379
	LD	C,11			; line = 11
	LD	E,1
J$5391:	LD	B,3			; column = 3
	LD	D,27			; size of string = 27
	CALL	C.44C5			; display string (with ? support)
	LD	A,E
	ADD	A,11
	LD	C,A
	INC	E
	LD	A,E
	CP	10
	JR	C,J$5391
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.53A3:	CALL	C.4550
	LD	A,(D.633F)
	CALL	C.6000
	DEFB	6
	DEFW	C.40A3
	LD	DE,I.64FA
	ADD	HL,DE
	LD	C,11			; line = 11
	LD	E,1
J$53B7:	LD	B,3			; column = 3
	LD	D,27			; size of string = 27
	CALL	C.44C5			; display string (with ? support)
	LD	A,E
	ADD	A,11
	LD	C,A
	INC	E
	LD	A,E
	CP	10
	JR	C,J$53B7
	CALL	C.6000
	DEFB	6
	DEFW	C.40A0
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$53CF:	LD	A,(D.64D0)
	AND	A
	JR	Z,C.53D9
	CALL	C.4706			; 632B flag set ?
	RET	Z			; nope, quit

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.53D9:	LD	HL,I$53E5
	LD	DE,I.63B3
	LD	BC,5
	LDIR
	RET

I$53E5:
	LD	B,(HL)
	LD	H,(HL)
	LD	L,L
	DEFB	1
	DEFB	1

;	  Subroutine option 3, other
;	     Inputs  ________________________
;	     Outputs ________________________

C.53EA:	CALL	C.4545
	LD	A,(D.632C)
	AND	A
	JR	Z,J.543F		; quit
	CP	0FH
	JR	Z,J.543F		; quit
	CALL	C.4511			; get telcom error
	JR	Z,J.543F		; no error, quit
	LD	A,(D.6304)		; last key
	CALL	C.44FD			; to upper
	CP	"Y"
	JR	Z,J$542A
	CP	"N"
	JR	Z,J$5433
	CP	"C"
	JR	NZ,J.543F		; nope, quit
	XOR	A
	LD	(D.63A7),A		; reset last telcom error
	LD	A,(D.640F)
	CP	15
	JR	NZ,J$5420
	XOR	A
	LD	(D.632B),A
	JP	J.4455			; option 2

J$5420:	CP	0FFH
	JR	NZ,J.543F		; quit
	LD	(D.632B),A
	JP	J.4455			; option 2

J$542A:	CALL	C.6000
	DEFB	6
	DEFW	C.406D
	CALL	C$4F7A
J$5433:	XOR	A
	LD	(D.63A7),A		; reset last telcom error
	LD	A,0FFH
	LD	(D.632C),A
	JP	J$44A1

J.543F:	XOR	A
	RET

;	  Subroutine option 3, F5
;	     Inputs  ________________________
;	     Outputs ________________________

C.5441:	LD	A,(D.632C)
	AND	A
	JR	Z,J.5460
	CP	0FH
	JR	Z,J.5460
	CALL	C.4511			; get telcom error
	JR	NZ,J$5458		; error,
	LD	A,1
	CALL	C.4507			; update telcom error and error display
	CALL	C$5046
J$5458:	XOR	A
	LD	(D.633F),A
	LD	(D.63B8),A
	RET

J.5460:	CALL	C.6000
	DEFB	6
	DEFW	C.406D
	LD	A,(D.632C)
	AND	A
	JR	NZ,J$547D
	LD	A,(D.6341)
	CP	02H
	JR	C,J$547A		; skip speaker
	XOR	A			; speaker = off
	CALL	C.6000
	DEFB	0
	DEFW	C.40D6			; MODEM.SPKCNT
J$547A:	JP	J.4664			; telcom comterm

J$547D:	LD	A,1
	LD	(D.632C),A
	JP	J.4480			; option 1

;	  Subroutine option 3, UP
;	     Inputs  ________________________
;	     Outputs ________________________

C.5485:	CALL	C.4511			; get telcom error
	JR	NZ,J.5500		; error, quit
	LD	A,(D.6419+2)
	AND	A			; 7 data bits ?
	JR	Z,J.54A0		; yep,
	LD	A,(D.6308)
	CP	4			; item = 4 ?
	JR	NZ,J.54A0		; nope,
	LD	B,A
	DEC	A
	DEC	A
	LD	(D.6308),A		; item = 2
	JP	J.54F6

J.54A0:	LD	A,(D.6419+7)		; character mode
	CP	2			; ANK or MSX ?
	JR	NC,J.54B6		; nope,
	LD	A,(D.6308)
	CP	10			; item = 10 ?
	JR	NZ,J.54B6		; nope,
	LD	B,A
	SUB	3
	LD	(D.6308),A		; item = 7
	JR	J.54F6

J.54B6:	LD	A,(EXBRSA)
	AND	A			; MSX1 ?
	JR	Z,J$54C3		; yep,
	LD	A,(D.6419+7)		; character mode
	CP	2
	JR	NZ,J.54D2
J$54C3:	LD	A,(D.6308)
	CP	9			; item = 9 ?
	JR	NZ,J.54D2		; nope,
	LD	B,A
	DEC	A
	DEC	A
	LD	(D.6308),A		; item = 7
	JR	J.54F6

J.54D2:	LD	A,(D.632C)
	AND	A
	JR	NZ,J$54E1
	LD	A,(D.6308)
	CP	3			; item = 0,1 or 2 ?
	JR	C,J.5500		; yep, quit
	JR	J$54E7

J$54E1:	LD	A,(D.6308)
	AND	A			; item = 0 ?
	JR	Z,J.5500		; yep, quit
J$54E7:	CALL	C.57A2			; remove 'cursor'
	LD	A,(D.6308)
	DEC	A
	LD	(D.6308),A		; previous item
	CALL	C.5799			; add 'cursor'
	JR	J.5500			; quit

J.54F6:	LD	A,B
	CALL	C.57A2			; remove 'cursor'
	LD	A,(D.6308)		; item
	CALL	C.5799			; add 'cursor'
J.5500:	XOR	A
	RET

;	  Subroutine option 3, DOWN
;	     Inputs  ________________________
;	     Outputs ________________________

C.5502:	CALL	C.4511			; get telcom error
	JR	NZ,J.5575		; error, quit
	LD	A,(D.6419+0)
	AND	A			; item 0 zero value ?
	JR	Z,J.5575		; yep, quit
	LD	A,(D.6419+2)
	AND	A			; 7 data bits ?
	JR	Z,J.5523		; yep,
	LD	A,(D.6308)
	CP	2			; item = 2 ?
	JR	NZ,J.5523		; nope,
	LD	B,A
	INC	A
	INC	A
	LD	(D.6308),A		; item = 4
	JP	J.556B

J.5523:	LD	A,(D.6419+7)		; character mode
	CP	2 
	JR	NC,J.5539
	LD	A,(D.6308)
	CP	7			; item = 7 ?
	JR	NZ,J.5539		; nope,
	LD	B,A
	ADD	A,3
	LD	(D.6308),A		; item = 10
	JR	J.556B

J.5539:	LD	A,(EXBRSA)
	AND	A			; MSX1 ?
	JR	Z,J$5546		; yep,
	LD	A,(D.6419+7)
	CP	2
	JR	NZ,J.5555
J$5546:	LD	A,(D.6308)
	CP	7			; item = 7 ?
	JR	NZ,J.5555		; nope,
	LD	B,A
	INC	A
	INC	A
	LD	(D.6308),A		; item = 9
	JR	J.556B

J.5555:	LD	A,(D.6308)
	CP	15			; item = 15 ?
	JR	Z,J.5575		; yep, quit
	CALL	C.57A2			; remove 'cursor'
	LD	A,(D.6308)
	INC	A
	LD	(D.6308),A		; next item
	CALL	C.5799			; add 'cursor'
	JR	J.5575			; quit

J.556B:	LD	A,B
	CALL	C.57A2			; remove 'cursor'
	LD	A,(D.6308)		; item
	CALL	C.5799			; add 'cursor'
J.5575:	XOR	A
	RET

;	  Subroutine option 3, LEFT
;	     Inputs  ________________________
;	     Outputs ________________________

C.5577:	CALL	C.4511			; get telcom error
	JR	NZ,J.55DF		; error, quit
	LD	A,(D.6308)
	CP	0DH			; item = timer1 ?
	JR	Z,J$55C8		; yep, decrease timer1
	CP	0EH			; item = timer2 ?
	JR	Z,J$55CD		; yep, decrease timer2
	LD	D,0
	LD	E,A
	LD	HL,D.6419		; value table
	ADD	HL,DE
	LD	A,(HL)			; item value
	AND	A			; value = 0 ?
	JR	NZ,J$55B2		; nope, decrease value
	PUSH	HL
	CALL	C.6000
	DEFB	6
	DEFW	C.409D			; check if JIS1
	JR	Z,J$55A0		; yep,
	LD	HL,I.564F		; ANK value limits
	JR	J.55AE

J$55A0:	LD	A,(EXBRSA)
	AND	A			; MSX1 ?
	JR	Z,J$55AB		; yep,
	LD	HL,I.566F		; MSX2 JIS value limits
	JR	J.55AE

J$55AB:	LD	HL,I.565F		; MSX1 JIS value limits
J.55AE:	ADD	HL,DE
	LD	A,(HL)			; value limit
	POP	HL
	INC	A
J$55B2:	DEC	A
	LD	(HL),A			; update item value
	CALL	C.6000
	DEFB	6
	DEFW	C.4064			; display item value
	CALL	C.6000
	DEFB	6
	DEFW	C.4073
	LD	A,(D.6308)		; item
	CALL	C.5799			; add 'cursor'
	JR	J.55DF			; quit

J$55C8:	LD	HL,D.6419+13		; timer1 value
	JR	J$55D0

J$55CD:	LD	HL,D.6419+14		; timer2 value
J$55D0:	LD	A,(HL)
	AND	A			; timer value 0 ?
	JR	NZ,J$55D8		; nope, decrease
	LD	(HL),180
	JR	J$55D9

J$55D8:	DEC	(HL)
J$55D9:	CALL	C.6000
	DEFB	6
	DEFW	C.4094			; display timer value
J.55DF:	XOR	A
	RET

;	  Subroutine option 3, RIGHT
;	     Inputs  ________________________
;	     Outputs ________________________

C.55E1:	CALL	C.4511			; get telcom error
	JR	NZ,J.564D		; error, quit
	LD	A,(D.6308)
	CP	0DH			; item = timer1 ?
	JR	Z,J$5635		; yep, increase timer1
	CP	0EH			; item = timer2 ?
	JR	Z,J$563A		; yep, increase timer2
	LD	D,0
	LD	E,A
	LD	HL,D.6419		; value table
	ADD	HL,DE
	LD	A,(HL)			; item value
	PUSH	AF
	PUSH	HL
	CALL	C.6000
	DEFB	6
	DEFW	C.409D			; check if JIS1
	JR	Z,J$5608		; yep,
	LD	HL,I.564F		; ANK value limits
	JR	J.5616

J$5608:	LD	A,(EXBRSA)
	AND	A			; MSX1 ?
	JR	Z,J$5613		; yep,
	LD	HL,I.566F		; MSX2 JIS value limits
	JR	J.5616

J$5613:	LD	HL,I.565F		; MSX1 JIS value limits
J.5616:	ADD	HL,DE
	LD	B,(HL)			; value limit
	POP	HL
	POP	AF
	CP	B
	JR	C,J$561F
	LD	A,-1			; value = 0
J$561F:	INC	A
	LD	(HL),A			; update item value
	CALL	C.6000
	DEFB	6
	DEFW	C.4064			; display item value
	CALL	C.6000
	DEFB	6
	DEFW	C.4073
	LD	A,(D.6308)		; item
	CALL	C.5799			; add 'cursor'
	JR	J.564D			; quit

J$5635:	LD	HL,D.6419+13		; timer1 value
	JR	J$563D

J$563A:	LD	HL,D.6419+14		; timer2 value
J$563D:	LD	A,(HL)
	CP	180			; timer value = 180 ?
	JR	C,J$5646		; nope, increase
	LD	(HL),0			; timer value = 0
	JR	J$5647

J$5646:	INC	(HL)
J$5647:	CALL	C.6000
	DEFB	6
	DEFW	C.4094			; display timer value
J.564D:	XOR	A
	RET

; ANK

I.564F:	DEFB	1
	DEFB	1
	DEFB	1
	DEFB	1
	DEFB	2
	DEFB	2
	DEFB	1
	DEFB	1
	DEFB	1
	DEFB	3
	DEFB	1
	DEFB	1
	DEFB	2
	DEFB	180
	DEFB	180
	DEFB	1

; MSX1 JIS

I.565F:	DEFB	1
	DEFB	1
	DEFB	1
	DEFB	1
	DEFB	2
	DEFB	2
	DEFB	1
	DEFB	2
	DEFB	1
	DEFB	3
	DEFB	1
	DEFB	1
	DEFB	2
	DEFB	180
	DEFB	180
	DEFB	1

; MSX2 JIS

I.566F:	DEFB	1
	DEFB	1
	DEFB	1
	DEFB	1
	DEFB	2
	DEFB	2
	DEFB	1
	DEFB	4
	DEFB	1
	DEFB	3
	DEFB	1
	DEFB	1
	DEFB	2
	DEFB	180
	DEFB	180
	DEFB	1

;	  Subroutine option 4, F1 (phone book, load file)
;	     Inputs  ________________________
;	     Outputs ________________________

C.567F:	CALL	C.4511			; get telcom error
	JR	NZ,J.56BC		; error, quit
	LD	A,(D.63E9)
	AND	A
	JR	NZ,J$5696
	LD	A,7
	CALL	C.4507			; update telcom error and error display
	LD	A,1
	LD	(D.63E9),A
	JR	J.56BC			; quit

J$5696:	XOR	A
	LD	(D.63E9),A
	CALL	C.5747
	JR	NC,J$56A4
	LD	E,38H			; bad file name error
	JP	J.5B56			; error

J$56A4:	LD	HL,I.6488		; filename
	LD	BC,I.6800		; start of phone book data
	LD	DE,I.6866+100*48-1	; end of phone book data
	CALL	C.6000
	DEFB	0
	DEFW	C.4076			; load BSAVE file
	JP	C,J.5B56		; error, error
	LD	(D.6405),HL		; update end of phone book data
	CALL	BEEP
J.56BC:	XOR	A
	RET

;	  Subroutine option 4, F2 (phone book, save file)
;	     Inputs  ________________________
;	     Outputs ________________________

C.56BE:	CALL	C.4511			; get telcom error
	JR	NZ,J.56F9		l error, quit
	LD	A,(D.63EA)
	AND	A
	JR	NZ,J$56D5
	LD	A,6
	CALL	C.4507			; update telcom error and error display
	LD	A,1
	LD	(D.63EA),A
	JR	J.56F9			; quit

J$56D5:	XOR	A
	LD	(D.63EA),A
J$56D9:	CALL	C.5747
	JR	NC,J$56E3
	LD	E,38H			; bad file name error
	JP	J.5B56			; error

J$56E3:	LD	HL,I.6488		; filename
	LD	BC,I.6800		; start of phone book data
	LD	DE,(D.6405)		; end of phone book data
	CALL	C.6000
	DEFB	0
	DEFW	C.4073			; save BSAVE file
	JP	C,J.5B56		; error
	CALL	BEEP
J.56F9:	XOR	A
	RET

;	  Subroutine option 4, F3 (phone book,)
;	     Inputs  ________________________
;	     Outputs ________________________

C.56FB:	CALL	C.4511			; get telcom error
	JR	NZ,J.571F		; error, quit
	LD	A,(D.63E8)
	AND	A
	JR	NZ,J$5712
	LD	A,5
	CALL	C.4507			; update telcom error and error display
	LD	A,1
	LD	(D.63E8),A
	JR	J.571F			; quit

J$5712:	CALL	C.6000
	DEFB	6
	DEFW	C.40A6			; initialize SRAM
	XOR	A
	LD	(D.63E8),A
	CALL	C.43A2
J.571F:	XOR	A
	RET

;	  Subroutine option 4, F5 (phone book,)
;	     Inputs  ________________________
;	     Outputs ________________________

C.5721:	CALL	C.4511			; get telcom error
	JR	NZ,J$5745		; error, quit
	LD	HL,D.6340
	LD	A,(HL)			; TELCOM startup mode
	AND	A
	JR	Z,J$5730
	XOR	A			; disable TELCOM at system start
	JR	J$5732

J$5730:	LD	A,41H			; enable TELCOM at system start
J$5732:	LD	(D.7EFF),A		; update TELCOM at system start
	INC	HL
	LD	A,(HL)			; speaker mode
	AND	03H
	CALL	C.6000
	DEFB	0
	DEFW	C.40D6			; MODEM.SPKCNT
	CALL	C.598A
	JP	C.43FC			; exit option

J$5745:	XOR	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5747:	LD	C,A
	LD	HL,I$6497
	LD	B,0FH	; 15 
	JR	J.5755

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$574F:	LD	C,A
	LD	HL,I$64CA
	LD	B,0FH	; 15 
J.5755:	LD	A,(HL)
	CP	21H	; "!"
	JR	NC,J$5760
	LD	(HL),00H
	DEC	HL
	DJNZ	J.5755
	SCF
J$5760:	LD	A,C
	RET

;	  Subroutine option 4, UP
;	     Inputs  ________________________
;	     Outputs ________________________

C.5762:	CALL	C.4511			; get telcom error
	JR	NZ,J.5797		; error,
	LD	A,(D.6309)
	AND	A			; item 0 ?
	JR	Z,J.5797		; yep, quit
	CALL	C.57A2			; remove 'cursor'
	LD	A,(D.6309)
	DEC	A
	LD	(D.6309),A		; decrease item
	CALL	C.5799			; add 'cursor'
	LD	A,(D.6309)
	CALL	C.459E			; disable sprites
	CP	3			; item 0-2 ?
	JR	C,J.5797		; yep, quit
	LD	A,13
	LD	(D.630F),A		; current column = 13
	LD	A,(D.6309)
	SUB	3
	ADD	A,A
	ADD	A,11
	LD	(D.6310),A		; update current line
	CALL	C.4556			; enable sprites
J.5797:	XOR	A
	RET

;	  Subroutine add 'cursor'
;	     Inputs  ________________________
;	     Outputs ________________________

C.5799:	PUSH	AF
	XOR	A
	LD	(D.640D),A		; add flag
	LD	A,1BH			; cursor colors
	JR	J$57AA

;	  Subroutine remove 'cursor'
;	     Inputs  ________________________
;	     Outputs ________________________

C.57A2:	PUSH	AF
	LD	A,1
	LD	(D.640D),A		; remove flag
	LD	A,0F5H			; normal colors
J$57AA:	LD	(D.6403),A		; store colors
	LD	DE,2000H + 4*(32*8) + 1*8
	LD	A,(D.6300)
	CP	3			; option 3 ?
	JR	Z,J$57BE		; yep,
	POP	AF
	LD	DE,2000H + 5*(32*8) + 1*8
	ADD	A,A
	JR	J$57BF

J$57BE:	POP	AF
J$57BF:	LD	L,0
	LD	H,A
	ADD	HL,DE
	PUSH	HL
	LD	BC,11*8			; size menu item
	LD	A,(D.6403)		; restore colors
	CALL	FILVRM
	POP	HL
	LD	DE,12*8
	ADD	HL,DE
	LD	BC,18*8			; size item value
	LD	A,(D.640D)
	AND	A			; remove ?
	JR	NZ,J$57E1		; yep,
	LD	A,(D.6403)		; restore colors
	JP	FILVRM

J$57E1:	LD	A,1FH			; normal item value colors
	JP	FILVRM

;	  Subroutine option 4, LEFT
;	     Inputs  ________________________
;	     Outputs ________________________

C.57E6:	CALL	C.4511			; get telcom error
	JR	NZ,J.5823		; error,
	LD	A,(D.6309)
	CP	3			; item 0-2 ?
	JR	NC,J$5813		; nope,
	LD	A,(D.6309)
	LD	D,0
	LD	E,A
	LD	HL,D.6340
	ADD	HL,DE
	LD	A,(HL)			; get mode value
	AND	A			; value = 0 ?
	JR	NZ,J$5809		; nope, decrease
	PUSH	HL
	LD	HL,I.58B5
	ADD	HL,DE
	LD	B,(HL)			; maximium mode value
	POP	HL
	LD	A,B
	INC	A
J$5809:	DEC	A
	LD	(HL),A
	CALL	C.6000
	DEFB	6
	DEFW	C.4067
	JR	J.5823

J$5813:	LD	A,(D.630F)		; current column
	DEC	A
	CP	13
	JR	NC,J$581D
	LD	A,13
J$581D:	LD	(D.630F),A		; update current column
	CALL	C.4556			; enable sprites
J.5823:	JP	J.58A7

;	  Subroutine option 4, DOWN
;	     Inputs  ________________________
;	     Outputs ________________________

C.5826:	CALL	C.4511			; get telcom error
	JR	NZ,J.585C		; error,
	LD	A,(D.6309)
	CP	5			; item = 5 ?
	JR	NC,J.585C		; yep, quit
	CALL	C.57A2			; remove 'cursor'
	LD	A,(D.6309)
	INC	A
	LD	(D.6309),A		; increase item
	CALL	C.5799			; add 'cursor'
	LD	A,(D.6309)
	CALL	C.459E			; disable sprites
	CP	3			; item 0-2 ?
	JR	C,J.585C		; yep, quit
	LD	A,13
	LD	(D.630F),A		; current column = 13
	LD	A,(D.6309)
	SUB	3
	ADD	A,A
	ADD	A,11
	LD	(D.6310),A		; update current line
	CALL	C.4556			; enable sprites
J.585C:	XOR	A
	RET

;	  Subroutine option 4, RIGHT
;	     Inputs  ________________________
;	     Outputs ________________________

C.585E:	CALL	C.4511			; get telcom error
	JR	NZ,J.58A7		; error,
	LD	A,(D.6309)
	CP	3			; item 0-2 ?
	JR	NC,J$588A		; nope,
	LD	D,0
	LD	E,A
	LD	HL,D.6340
	ADD	HL,DE
	LD	A,(HL)			; get mode value
	AND	07H
	PUSH	HL
	LD	HL,I.58B5
	ADD	HL,DE
	LD	B,(HL)			; maximium mode value
	POP	HL
	CP	B			; value = maximium ?
	JR	C,J$5880		; nope, increase
	LD	A,-1
J$5880:	INC	A
	LD	(HL),A
	CALL	C.6000
	DEFB	6
	DEFW	C.4067
	JR	J.58A7

J$588A:	LD	A,(D.6309)
	CP	5			; item 5 ?
	LD	C,29
	LD	B,28
	JR	Z,J$5899		; yep,
	LD	C,21
	LD	B,20
J$5899:	LD	A,(D.630F)		; current column
	INC	A
	CP	C
	JR	C,J$58A1
	LD	A,B
J$58A1:	LD	(D.630F),A		; update current column
	CALL	C.4556			; enable sprites

J.58A7:	LD	A,(D.6340)		; TELCOM startup mode
	AND	A
	LD	A,41H			; enable TELCOM at system start
	JR	Z,J$58B0
	XOR	A			; disable TELCOM at system start
J$58B0:	LD	(D.7EFF),A		; update TELCOM at system start
	XOR	A
	RET

I.58B5:	DEFB	1			; maximium mode ?
	DEFB	2			; maximium speaker mode
	DEFB	4			; maximium dial mode

;	  Subroutine option 4, other
;	     Inputs  ________________________
;	     Outputs ________________________

C.58B8:	CALL	C.4545
	CALL	C.4511			; get telcom error
	JP	Z,J$5917		; no error,
	LD	A,(D.6304)		; last key
	CALL	C.44FD			; to upper
	CP	"N"
	JR	Z,J$5903
	CP	"Y"
	JP	NZ,J.5961
	LD	A,(D.63A7)
	CP	6			; telcom error ?
	JR	NZ,J$58DD		; nope,
	CALL	C.4506			; reset telcom error and clear error display
	JP	C.56BE

J$58DD:	CP	2
	JR	NZ,J$58E9
	CALL	C.4506			; reset telcom error and clear error display
	LD	A,1
	JP	J$56D9

J$58E9:	CP	7
	JR	NZ,J$58F3
	CALL	C.4506			; reset telcom error and clear error display
	JP	C.567F

J$58F3:	CP	5
	JR	NZ,J$58FD
	CALL	C.4506			; reset telcom error and clear error display
	JP	C.56FB

J$58FD:	CALL	C.4506			; reset telcom error and clear error display
	JP	J.5961

J$5903:	LD	A,1
	LD	(D.6400),A
	LD	A,(D.63A7)
	CP	8			; telcom error ?
	JR	NC,J.5961		; nope,
	CALL	C.598A
	CALL	C.4506			; reset telcom error and clear error display
	JR	J.5961

J$5917:	LD	A,(D.6304)		; last key
	CP	0DH			; CR ?
	JR	Z,J.5961		; yep,
	LD	A,(D.6309)
	CP	3
	JP	C,J.5961
	LD	A,(D.6304)		; last key
	CP	08H			; BS ?
	JR	NZ,J$5935		; nope,
	CALL	C.6000
	DEFB	6
	DEFW	C.408B
	JR	J.595E

J$5935:	CP	20H			; control key ?
	JR	C,J.5961		; yep, quit
	CALL	C.6000
	DEFB	6
	DEFW	C.4097			; display character (with ? support)
	CALL	C.6000
	DEFB	6
	DEFW	C.408B
	LD	B,21
	LD	C,20
	LD	A,(D.6309)
	CP	5
	JR	C,J$5954
	LD	B,29
	LD	C,28
J$5954:	LD	A,(D.630F)		; current column
	CP	B
	JR	C,J.595E
	LD	A,C
	LD	(D.630F),A		; update current column
J.595E:	CALL	C.4556			; enable sprites
J.5961:	XOR	A
	RET

J$5963:	CALL	C.4548
	LD	HL,I$6478
	LD	B,13			; column = 13
	LD	C,11			; line = 11
	LD	D,8			; size of string = 8
	CALL	C.44C5			; display string (with ? support)
	LD	HL,I$6480
	LD	B,13			; column = 13
	LD	C,13			; line = 13
	LD	D,8			; size of string = 8
	CALL	C.44C5			; display string (with ? support)
	LD	HL,I.6488		; filename
	LD	B,13			; column = 13
	LD	C,15			; line = 15
	LD	D,16			; size of string = 16
	JP	C.44C5			; display string (with ? support)

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.598A:	XOR	A
	LD	(D.63E8),A
	LD	(D.63EA),A
	LD	(D.63E9),A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5995:	CALL	C.4511			; get telcom error
	JR	NZ,J$599E		; error, quit
	XOR	A
	JP	C.43FC			; exit option

J$599E:	XOR	A
	RET

?.59A0:	LD	B,C
J$59A1:	LD	A,(HL)
	PUSH	BC
	PUSH	HL
	CALL	C.6000
	DEFB	0
	DEFW	C.4088			; echo to screen
	POP	HL
	POP	BC
	INC	HL
	DJNZ	J$59A1
	RET

; reverse video on screen

I$59B0:	DEFB	27,"[>5h"
	DEFB	0

; normal video on screen

I$59B6:	DEFB	27,"[>5l"
	DEFB	0

; cursor key to application

I$59BC:	DEFB	27,"[>1h"
	DEFB	0

I$59C2:	DEFB	"Printer not ready ! (R/C)"
	DEFB	0

I$59DC:	DEFB	"File close error ! Hit any key"
	DEFB	0

I$59FB:	DEFB	"File read error ! Hit any key"
	DEFB	0

I$5A19:	DEFB	"End of file. Hit any key"
	DEFB	0

I$5A32:	DEFB	"-- MORE -- ( CR/SP/Q )"
	DEFB	0

I.5A49:	DEFB	"Exit OK ? Y/N"
	DEFB	0

J$5A57:	CALL	C.4511			; get telcom error
	JP	NZ,J.5BB8		; error,
	CALL	C$574F
	JR	NC,J$5A67
	LD	E,38H			; bad file name error
	JP	J.5B56			; error

J$5A67:	LD	HL,I.64BB
	CALL	C.6000
	DEFB	0
	DEFW	C.408E			; open file
	JP	C,J.5B56		; error, error
J.5A73:	LD	A,(CNSDFG)
	LD	(D.6411),A		; store function key display status
	CALL	C.6000
	DEFB	1
	DEFW	C.4049			; initialize
	CALL	C.6000
	DEFB	6
	DEFW	C.4085
	LD	B,A			; store comterm mode
	AND	80H
	LD	(D$6410),A
	LD	A,B			; restore comterm mode
	CALL	C.6000
	DEFB	0
	DEFW	C.4085			; set comterm mode
	XOR	A
	LD	(INTFLG),A		; clear STOP key status
	CALL	C.5BDC			; reverse video on screen
	LD	HL,I$59BC		; cursor key to application
	CALL	C.5BE5			; echo string to screen
	CALL	C.6000
	DEFB	6
	DEFW	C.404F

J.5AA5:	LD	HL,INTFLG
	LD	A,(HL)
	AND	A			; STOP key pressed ?
	JR	Z,J.5AE0		; nope,
	LD	(HL),0			; clear STOP key status
	CP	3			; CTRL-STOP pressed ?
	JR	Z,J.5AC5		; yep, exit ?
	CALL	C.5BD3			; normal video on screen
J$5AB5:	EI
	LD	A,(HL)
	AND	A			; STOP key pressed ?
	JR	Z,J$5AB5		; nope, wait
	LD	(HL),0			; clear STOP key status
	CP	3			; CTRL-STOP pressed ?
	JR	Z,J.5AC5		; yep, exit ?
	CALL	C.5BDC			; reverse video on screen
	JR	J.5AE0

J.5AC5:	LD	HL,I.5A49		; exit ok message
	CALL	C.5BE2			; echo error string to screen
	CALL	C.5BD3			; normal video on screen
J$5ACE:	CALL	C.5BCD			; get key (to upper)
	CP	"Y"
	JP	Z,J.5B7D		; yes,
	CP	"N"
	JR	NZ,J$5ACE		; invalid, again
	CALL	C.5BDC			; reverse video on screen
	CALL	C.5BEE
J.5AE0:	CALL	C.6000
	DEFB	0
	DEFW	C.4091			; read byte from file
	JR	C,J$5B60		; error,
	CP	1AH			; EOF ?
	JP	Z,J$5B6E		; yep, handle end of file
	PUSH	AF			; store character
	CALL	C.6000
	DEFB	6
	DEFW	C.4052
	JR	C,J.5B24
	POP	BC			; restore character
J.5AF7:	LD	A,(D.640C)
	AND	A			; output to printer ?
	JR	Z,J.5AA5		; nope, loop
	LD	A,B			; character
	CALL	C.5BC2			; byte to printer
	JR	NC,J.5AA5		; no error, loop
	OR	A			; printer not ready ?
	JR	Z,J$5B28		; yep, handle
	PUSH	BC			; store character
	LD	HL,I.5A49		; exit ok message
	CALL	C.5BE2			; echo error string to screen
	CALL	C.5BD3			; normal video on screen
J$5B10:	CALL	C.5BCD			; get key (to upper)
	CP	"Y"
	JR	Z,J.5B24		; yes,
	CP	"N"
	JR	NZ,J$5B10
	CALL	C.5BDC			; reverse video on screen
	CALL	C.5BEE
	POP	BC			; restore character
	JR	J.5AF7			; try again

J.5B24:	POP	BC			; restore character
	JP	J.5B7D

J$5B28:	PUSH	BC
	LD	HL,I$59C2		; printer not ready message
	CALL	C.5BE2			; echo error string to screen
	CALL	C.5BD3			; normal video on screen
J$5B32:	CALL	C.5BCD			; get key (to upper)
	CP	"R"			; retry ?
	JR	NZ,J$5B42		; nope,
	CALL	C.5BDC			; reverse video on screen
	CALL	C.5BEE
	POP	BC
	JR	J.5AF7

J$5B42:	CP	"C"			; continue ?
	JR	NZ,J$5B32		; invalid, again
	CALL	C.5BDC			; reverse video on screen
	CALL	C.5BEE
	POP	BC
	XOR	A
	LD	(D.640C),A		; no output to printer
	CALL	C.5BBA			; CR/LF to printer
	JR	J.5AE0

J.5B56:	LD	A,E			; BASIC error
	CALL	C.6000
	DEFB	6
	DEFW	C.4043			; translate error, update error display
	JP	J.5BB8			; quit

J$5B60:	LD	HL,I$59FB		; file read error message
	CALL	C.5BE2			; echo error string to screen
	CALL	C.5BD3			; normal video on screen
	CALL	C.5BC9			; get key (to upper)
	JR	J.5B7D

J$5B6E:	LD	HL,I$5A19		; end of file message
	CALL	C.5BE2			; echo error string to screen
	CALL	C.5BD3			; normal video on screen
	CALL	KILBUF			; clear keyboard buffer
	CALL	CHGET			; wait for key

J.5B7D:	LD	A,(D.640C)
	AND	A			; output to printer ?
	CALL	NZ,C.5BBA		; yep, CR/LF to printer
	CALL	C.6000
	DEFB	0
	DEFW	C.4094			; close file
	JR	NC,J$5B98		; no error, skip
	LD	HL,I$59DC		; file close message
	CALL	C.5BE2			; echo error string to screen
	CALL	C.5BD3			; normal video on screen
	CALL	C.5BC9			; get key (to upper)
J$5B98:	CALL	C.6000
	DEFB	0
	DEFW	C.408B			; revert to normal graphic screen
	LD	A,(D.6411)
	LD	(CNSDFG),A		; restore function key display status
	CALL	C.6000
	DEFB	6
	DEFW	C.4079			; initialize modem speaker and graphic screen
	LD	A,5
	LD	(D.6300),A		; option = 5
	LD	HL,I$4183
	LD	(D.6301),HL		; base option table pointer = option 5
	JP	C.4074			; execute function

J.5BB8:	XOR	A
	RET

;	  Subroutine CR/LF to printer
;	     Inputs  ________________________
;	     Outputs ________________________

C.5BBA:	LD	A,0DH
	CALL	C.5BC2			; byte to printer
	RET	C
	LD	A,0AH

;	  Subroutine byte to printer
;	     Inputs  ________________________
;	     Outputs ________________________

C.5BC2:	CALL	C.6000
	DEFB	1
	DEFW	C.4055			; byte to printer
	RET

;	  Subroutine get key (to upper)
;	     Inputs  ________________________
;	     Outputs ________________________

C.5BC9:	CALL	C.5BCD			; get key (to upper)
	RET

;	  Subroutine get key (to upper)
;	     Inputs  ________________________
;	     Outputs ________________________

C.5BCD:	CALL	CHGET			; get key
	JP	C.44FD

;	  Subroutine normal video on screen
;	     Inputs  ________________________
;	     Outputs ________________________

C.5BD3:	PUSH	HL
	LD	HL,I$59B6		; normal video on screen
J$5BD7:	CALL	C.5BE5			; echo string to screen
	POP	HL
	RET

;	  Subroutine reverse video on screen
;	     Inputs  ________________________
;	     Outputs ________________________

C.5BDC:	PUSH	HL
	LD	HL,I$59B0
	JR	J$5BD7

;	  Subroutine echo error string to screen
;	     Inputs  ________________________
;	     Outputs ________________________

C.5BE2:	CALL	C.5BEE

;	  Subroutine echo string to screen
;	     Inputs  ________________________
;	     Outputs ________________________

C.5BE5:	LD	A,(HL)
	OR	A
	RET	Z
	CALL	C.5BFF			 ; echo to screen
	INC	HL
	JR	C.5BE5

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5BEE:	LD	A,18H
	CALL	C.5BFF			; echo to screen
	LD	A,(CSRX)
	OR	A
	RET	Z
	LD	A,0DH
	CALL	C.5BFF			; echo to screen
	LD	A,0AH

;	  Subroutine echo to screen
;	     Inputs  ________________________
;	     Outputs ________________________

C.5BFF:	PUSH	HL
	CALL	C.6000
	DEFB	0
	DEFW	C.4088			; echo to screen
	POP	HL
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5C08:	CALL	C.4545
	LD	A,(D.6304)		; last key
	CP	0DH			; CR ?
	JP	Z,J$5A57		; yep,
	LD	A,(D.630A)
	CP	03H	; 3 
	JR	NZ,J.5C51
	LD	A,(D.6304)		; last key
	CP	08H			; BS ?
	JR	NZ,J$5C29		; nope,
	CALL	C.6000
	DEFB	6
	DEFW	C.4091
	JR	J.5C4E

J$5C29:	CP	20H			; control key ?
	JR	C,J.5C51		; yep,
	CALL	C.6000
	DEFB	6
	DEFW	C.4097			; display character (with ? support)
	CALL	C.6000
	DEFB	6
	DEFW	C.4091
	LD	A,(D.630A)
	CP	03H	; 3 
	JR	C,J$5C44
	LD	B,29
	LD	C,28
J$5C44:	LD	A,(D.630F)		; current column
	CP	B
	JR	C,J.5C4E
	LD	A,C
	LD	(D.630F),A		; update current column
J.5C4E:	CALL	C.4556			; enable sprites
J.5C51:	XOR	A
	RET

J$5C53:	CALL	C.4548
	LD	HL,I.64BB
	LD	B,13			; column = 13
	LD	C,11			; line = 11
	LD	D,16			; size of string = 16
	JP	C.44C5			; display string (with ? support)

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5C62:	CALL	C.4511			; get telcom error
	JR	NZ,J.5CB8		; error,
	LD	A,(D.630A)
	AND	A
	JR	Z,J.5CB8
	LD	A,(EXBRSA)
	AND	A			; MSX1 ?
	JR	Z,J.5C7F		; yep,
	LD	A,(D.640A)
	CP	03H	; 3 
	JR	C,J.5C7F
	LD	A,(D.630A)
	JR	J.5C9B

J.5C7F:	LD	A,(D.630A)
	CP	02H	; 2 
	JR	NZ,J.5C9B
	PUSH	AF
	XOR	A
	LD	(D.640B),A
	POP	AF
	PUSH	AF
	CALL	C.57A2			; remove 'cursor'
	POP	AF
	DEC	A
	DEC	A
	LD	(D.630A),A
	CALL	C.5799			; add 'cursor'
	JR	J.5CB8

J.5C9B:	CALL	C.57A2			; remove 'cursor'
	LD	A,(D.630A)
	DEC	A
	LD	(D.630A),A
	CALL	C.5799			; add 'cursor'
	LD	A,(D.630A)
	CALL	C.459E			; disable sprites
	CP	03H	; 3 
	JR	C,J.5CB8
	CALL	C.4720			; current position = 13,11
	CALL	C.4556			; enable sprites
J.5CB8:	XOR	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5CBA:	CALL	C.4511			; get telcom error
	JR	NZ,J.5D14		; error,
	LD	A,(D.630A)
	CP	03H	; 3 
	JR	NC,J.5D14
	LD	A,(EXBRSA)
	AND	A			; MSX1 ?
	JR	Z,J.5CD8		; yep,
	LD	A,(D.640A)
	CP	03H	; 3 
	JR	C,J.5CD8
	LD	A,(D.630A)
	JR	J.5CF7

J.5CD8:	XOR	A
	LD	(D.640B),A
	LD	A,(D.630A)
	AND	A
	JR	NZ,J.5CF7
	PUSH	AF
	XOR	A
	LD	(D.640B),A
	POP	AF
	PUSH	AF
	CALL	C.57A2			; remove 'cursor'
	POP	AF
	INC	A
	INC	A
	LD	(D.630A),A
	CALL	C.5799			; add 'cursor'
	JR	J.5D14

J.5CF7:	CALL	C.57A2			; remove 'cursor'
	LD	A,(D.630A)
	INC	A
	LD	(D.630A),A
	CALL	C.5799			; add 'cursor'
	LD	A,(D.630A)
	CALL	C.459E			; disable sprites
	CP	03H	; 3 
	JR	C,J.5D14
	CALL	C.4720			; current position = 13,11
	CALL	C.4556			; enable sprites
J.5D14:	XOR	A
	RET

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5D16:	CALL	C.4511			; get telcom error
	JR	NZ,J.5D71		; error,
	LD	A,(D.630A)
	CP	03H	; 3 
	JR	NC,J$5D61
	LD	A,(D.630A)
	LD	D,00H
	LD	E,A
	LD	HL,D.640A
	ADD	HL,DE
	LD	A,(HL)
	AND	A
	JR	NZ,J$5D51
	PUSH	HL
	CALL	C.6000
	DEFB	6
	DEFW	C.409D			; check if JIS1
	JR	Z,J$5D3E		; yep,
	LD	HL,I.5D79
	JR	J.5D4C

J$5D3E:	LD	A,(EXBRSA)
	AND	A			; MSX1 ?
	JR	NZ,J$5D49		; nope,
	LD	HL,I.5D7C
	JR	J.5D4C

J$5D49:	LD	HL,I.5D7F
J.5D4C:	ADD	HL,DE
	LD	B,(HL)
	POP	HL
	LD	A,B
	INC	A
J$5D51:	DEC	A
	LD	(HL),A
	CALL	C.6000
	DEFB	6
	DEFW	C.406A
	CALL	C.6000
	DEFB	6
	DEFW	C.4073
	JR	J.5D71

J$5D61:	LD	A,(D.630F)		; current column
	DEC	A
	CP	13
	JR	NC,J$5D6B
	LD	A,13
J$5D6B:	LD	(D.630F),A		; update current column
	CALL	C.4556			; enable sprites
J.5D71:	LD	A,(D.630A)
	CALL	C.5799			; add 'cursor'
	XOR	A
	RET

I.5D79:	LD	BC,I.0101
I.5D7C:	LD	(BC),A
	LD	BC,I$0401
I.5D7F	EQU	$-1
	DEFB	1
	DEFB	1

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5D82:	CALL	x
	LD	DE,I$2045
	LD	D,A
	LD	A,(D.630A)
	CP	03H	; 3 
	JR	NC,J$5DCC
	LD	D,00H
	LD	E,A
	LD	HL,D.640A
	ADD	HL,DE
	LD	A,(HL)
	PUSH	AF
	PUSH	HL
	CALL	C.6000
	DEFB	6
	DEFW	C.409D			; check if JIS1
	JR	Z,J$5DA5		; yep,
	LD	HL,I.5D79
	JR	J.5DB3

J$5DA5:	LD	A,(EXBRSA)
	AND	A			; MSX1 ?
	JR	NZ,J$5DB0		; nope,
	LD	HL,I.5D7C
	JR	J.5DB3

J$5DB0:	LD	HL,I.5D7F
J.5DB3:	ADD	HL,DE
	LD	B,(HL)
	POP	HL
	POP	AF
	CP	B
	JR	C,J$5DBC
	LD	A,0FFH
J$5DBC:	INC	A
	LD	(HL),A
	CALL	C.6000
	DEFB	6
	DEFW	C.406A
	CALL	C.6000
	DEFB	6
	DEFW	C.4073
	JR	J$5DDE

J$5DCC:	LD	C,29
	LD	B,28
	LD	A,(D.630F)		; current column
	INC	A
	CP	C
	JR	C,J$5DD8
	LD	A,B
J$5DD8:	LD	(D.630F),A		; update current column
	CALL	C.4556			; enable sprites
J$5DDE:	LD	A,(D.630A)
	CALL	C.5799			; add 'cursor'
	XOR	A
	RET

;	  Subroutine no function
;	     Inputs  ________________________
;	     Outputs ________________________

C.5DE6:	XOR	A
	RET

;	  Subroutine find free data block
;	     Inputs  ________________________
;	     Outputs ________________________

C$5DE8:	LD	E,0			; entry 0
J$5DEA:	LD	A,E
	CP	100			; end of data blocks ?
	JP	NC,J$5E0A		; yep, quit
	LD	L,E
	LD	H,0			; entry
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL			; *16
	LD	C,L
	LD	B,H
	ADD	HL,HL			; *32
	ADD	HL,BC			; *48
	LD	BC,I.6866
	ADD	HL,BC
	LD	A,(HL)
	OR	A
	JP	NZ,J$5E06
	LD	A,E			; free data block
	RET

J$5E06:	INC	E			; next entry
	JP	J$5DEA

J$5E0A:	LD	A,0FFH			; no free data blocks
	RET

;	  Subroutine clear phone book entry and data blocks
;	     Inputs  A = phone book entry
;	     Outputs ________________________

C.5E0D:	LD	L,A
	LD	H,0
	LD	BC,I.6800
	ADD	HL,BC
	LD	E,(HL)			; get phone entry first data block
	LD	L,A
	LD	A,E
	INC	A			; phone book entry empty ?
	RET	Z			; yep, quit
	LD	H,0
	LD	BC,I.6800
	ADD	HL,BC
	LD	(HL),0FFH		; phone book entry = empty

J$5E21:	LD	L,E
	LD	H,0			; data block
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL			; *16
	LD	C,L
	LD	B,H
	ADD	HL,HL			; *32
	ADD	HL,BC			; *48
	LD	BC,I.6866+47
	ADD	HL,BC
	LD	A,(HL)
	CP	0FFH			; end of chain ?
	JP	Z,J$5E5C		; yep,
	LD	L,E
	LD	H,0			; data block
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL			; *16
	LD	C,L
	LD	B,H
	ADD	HL,HL			; *32
	ADD	HL,BC			; *48
	LD	BC,I.6866
	ADD	HL,BC
	LD	(HL),0			; free data block
	LD	L,E
	LD	H,0			; data block
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL			; *16
	LD	C,L
	LD	B,H
	ADD	HL,HL			; *32
	ADD	HL,BC			; *48
	LD	BC,I.6866+47
	ADD	HL,BC
	LD	(HL),0FFH		; end marker
	LD	E,A			; next data block
	JP	J$5E21			; next

J$5E5C:	LD	L,E
	LD	H,0			; data block
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL			; *16
	LD	C,L
	LD	B,H
	ADD	HL,HL			; *32
	ADD	HL,BC			; *48
	LD	BC,I.6866
	ADD	HL,BC
	LD	(HL),0			; free data block
	RET

;	  Subroutine __________________________
;	     Inputs  A = phone book entry
;	     Outputs ________________________

C$5E6E:	LD	(D.7EF0),A		; store phone book entry
	EX	DE,HL
	LD	(D.7EF1),HL
	PUSH	AF			; store phone book entry
	LD	A,0FFH
	LD	(D.7EF5),A
	POP	AF			; restore phone book entry
	CALL	C.5E0D			; clear phone book entry and data blocks
	LD	A,1
	LD	(D.7EF3),A		; entry = 1
J$5E84:	CALL	C$5DE8			; find free data block
	LD	E,A
	LD	HL,D.7EF4
	LD	(HL),E			; store free data block
	LD	A,E
	INC	A			; found free data block ?
	JP	NZ,J$5EAE		; nope,
	LD	A,(D.7EF5)
	CP	0FFH
	JP	Z,J$5EAA
	LD	L,A
	LD	H,0
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL			; *16
	LD	C,L
	LD	B,H
	ADD	HL,HL			; *32
	ADD	HL,BC			; *48
	LD	BC,I.6866+47
	ADD	HL,BC
	LD	(HL),0FFH		; end of chain
J$5EAA:	LD	A,(D.7EF3)
	RET

J$5EAE:	LD	A,(D.7EF3)
	DEC	A			; entry = 1 ?
	JP	NZ,J$5EC2		; nope,
	LD	HL,(D.7EF0)
	LD	H,0			; phone book entry
	LD	BC,I.6800
	ADD	HL,BC
	LD	(HL),E			; update phone book entry first data block
	JP	J$5ED4

J$5EC2:	LD	HL,(D.7EF5)
	LD	H,0
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL			; *16
	LD	C,L
	LD	B,H
	ADD	HL,HL			; *32
	ADD	HL,BC			; *48
	LD	BC,I.6866+47
	ADD	HL,BC
	LD	(HL),E			; next data block

J$5ED4:	LD	L,E			; next data block
	LD	E,0			; entry = 0
J$5ED7:	LD	A,E
	CP	46+1			; last entry ?
	JP	NC,J$5F49		; yep,
	LD	HL,(D.7EF1)
	LD	A,(HL)
	INC	HL
	LD	(D.7EF1),HL
	PUSH	HL
	LD	HL,(D.7EF4)
	LD	H,0
	PUSH	AF
	LD	A,L
	LD	(D.7EF4),A
	POP	AF
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL			; *16
	LD	C,L
	LD	B,H
	ADD	HL,HL			; *32
	ADD	HL,BC			; *48
	LD	C,E
	LD	B,0
	ADD	HL,BC			; + entry
	LD	BC,I.6866
	ADD	HL,BC
	LD	(HL),A
	POP	HL
	LD	A,(HL)
	LD	HL,(D.7EF4)
	OR	A
	JP	NZ,J$5F45		; next entry
	LD	H,0
	PUSH	HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL			; *16
	LD	C,L
	LD	B,H
	ADD	HL,HL			; *32
	ADD	HL,BC			; *48
	LD	A,E
	INC	A
	LD	C,A
	LD	B,0
	ADD	HL,BC
	LD	BC,I.6866
	ADD	HL,BC
	LD	(HL),0			;
	POP	HL
	LD	H,0
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL			; *16
	LD	C,L
	LD	B,H
	ADD	HL,HL			; *32
	ADD	HL,BC			; *48
	LD	BC,I.6866+47
	ADD	HL,BC
	EX	DE,HL
	LD	A,0FFH
	LD	(DE),A			; end of chain
	LD	HL,(D.6405)		; end of phone book data
	LD	A,L
	SUB	E
	LD	A,H
	SBC	A,D
	JP	NC,J$5F43
	EX	DE,HL
	LD	(D.6405),HL		; update end of phone book data
J$5F43:	XOR	A
	RET

J$5F45:	INC	E
	JP	J$5ED7			; next entry

J$5F49:	LD	A,L
	LD	(D.7EF5),A
	LD	A,(D.7EF3)
	INC	A
	LD	(D.7EF3),A		; increase entry
	JP	J$5E84

;	  Subroutine __________________________
;	     Inputs  A = phone book entry, DE = pointer to data
;	     Outputs ________________________

C.5F57:	LD	L,A
	LD	H,0			; phone book entry
	LD	BC,I.6800
	ADD	HL,BC
	LD	L,(HL)			; phone book entry first data block
	LD	A,L
	INC	A			; entry empty ?
	JP	NZ,J.5F68		; nope,
	XOR	A
	LD	(DE),A
	XOR	A
	RET

J.5F68:	XOR	A
	LD	(D.7EF6),A		; entry = 0
J$5F6C:	CP	46+1			; last entry ?
	JP	NC,J$5F9A		; yep,
	LD	H,0			; data block
	PUSH	HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL			; *16
	LD	C,L
	LD	B,H
	ADD	HL,HL			; *32
	ADD	HL,BC			; *48
	LD	C,A
	LD	B,0
	ADD	HL,BC			; + entry
	LD	BC,I.6866
	ADD	HL,BC
	LD	A,(HL)
	LD	(DE),A
	LD	A,(DE)
	POP	HL
	OR	A
	JP	NZ,J$5F8F
	LD	A,0FFH
	RET

J$5F8F:	INC	DE
	LD	A,(D.7EF6)
	INC	A
	LD	(D.7EF6),A		; increase entry
	JP	J$5F6C			; next

J$5F9A:	LD	H,0
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL			; *16
	LD	C,L
	LD	B,H
	ADD	HL,HL			; *32
	ADD	HL,BC			; *48
	LD	BC,I.6866+47
	ADD	HL,BC
	LD	L,(HL)
	LD	A,L
	INC	A
	JP	NZ,J.5F68
	XOR	A
	LD	(DE),A
	LD	A,0FFH
	RET

;	  Subroutine __________________________
;	     Inputs  A = phone book entry
;	     Outputs ________________________

C.5FB3:	LD	L,A
	LD	H,0
	LD	BC,I.6800
	ADD	HL,BC
	LD	L,(HL)			; phone book entry first data block
	LD	A,L
	LD	(D.7EF8),A		; store first data block
	LD	A,L
	INC	A			; entry empty ?
	JP	NZ,J$5FCA		; nope,
	XOR	A
	LD	(DE),A
	LD	HL,0
	RET

J$5FCA:	XOR	A
	LD	(D.7EF7),A
J$5FCE:	CP	46+1			; last entry ?
	RET	NC			; yep, quit
	LD	HL,(D.7EF8)
	LD	H,0			; first data block
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL			; *16
	LD	C,L
	LD	B,H
	ADD	HL,HL			; *32
	ADD	HL,BC			; *48
	LD	C,A
	LD	B,0
	ADD	HL,BC			; + entry
	LD	BC,I.6866
	ADD	HL,BC
	LD	A,(HL)
	LD	(DE),A
	LD	A,(DE)
	OR	A
	RET	Z
	INC	DE
	LD	A,(D.7EF7)
	INC	A
	LD	(D.7EF7),A		; increase entry
	JP	J$5FCE			; next

?.5FF6:	RET
